	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\I2c\\I2c\\.IfxI2c_I2c.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.src ..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c'

	
$TC162
	.sdecl	'.zrodata.IfxI2c_I2c..2.cnt',data,rom
	.sect	'.zrodata.IfxI2c_I2c..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	1220759552
	
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_getBaudrate',code,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_getBaudrate'
	.align	2
	
	.global	IfxI2c_I2c_getBaudrate

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     1  /**
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     2   * \file IfxI2c_I2c.c
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     3   * \brief I2C I2C details
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     4   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     6   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     7   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     8   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    10   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    15   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    17   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    23   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    24   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    30   * language processor.
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    31   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    39   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    40   *
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    41   */
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    42  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    43  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    44  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    45  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    46  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    47  #include "IfxI2c_I2c.h"
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    48  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    49  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    50  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    52  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    53  float32 IfxI2c_I2c_getBaudrate(IfxI2c_I2c *i2c)
; Function IfxI2c_I2c_getBaudrate
.L92:
IfxI2c_I2c_getBaudrate:	.type	func

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    54  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    55      return IfxI2c_getBaudrate(i2c->i2c);
	ld.a	a4,[a4]
.L392:
	j	IfxI2c_getBaudrate
.L179:
	
__IfxI2c_I2c_getBaudrate_function_end:
	.size	IfxI2c_I2c_getBaudrate,__IfxI2c_I2c_getBaudrate_function_end-IfxI2c_I2c_getBaudrate
.L122:
	; End of function
	
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_initConfig',code,cluster('IfxI2c_I2c_initConfig')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_initConfig'
	.align	2
	
	.global	IfxI2c_I2c_initConfig

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    56  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    57  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    58  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    59  void IfxI2c_I2c_initConfig(IfxI2c_I2c_Config *config, Ifx_I2C *i2c)
; Function IfxI2c_I2c_initConfig
.L94:
IfxI2c_I2c_initConfig:	.type	func

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    60  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    61      config->i2c      = i2c;
	st.a	[a4],a5
.L457:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    62      config->baudrate = 400000;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    63      config->pins     = NULL_PTR;
	mov.a	a15,#0
.L458:
	ld.w	d15,.2.cnt
.L459:
	st.w	[a4]4,d15
.L460:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    64      config->mode     = IfxI2c_Mode_StandardAndFast;
	mov	d15,#0
	st.a	[a4]8,a15
.L461:
	st.b	[a4]12,d15
.L462:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    65  }
	ret
.L182:
	
__IfxI2c_I2c_initConfig_function_end:
	.size	IfxI2c_I2c_initConfig,__IfxI2c_I2c_initConfig_function_end-IfxI2c_I2c_initConfig
.L127:
	; End of function
	
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_initDevice',code,cluster('IfxI2c_I2c_initDevice')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_initDevice'
	.align	2
	
	.global	IfxI2c_I2c_initDevice

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    66  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    67  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    68  void IfxI2c_I2c_initDevice(IfxI2c_I2c_Device *i2cDevice, const IfxI2c_I2c_deviceConfig *i2cDeviceConfig)
; Function IfxI2c_I2c_initDevice
.L96:
IfxI2c_I2c_initDevice:	.type	func

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    69  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    70      i2cDevice->i2c           = i2cDeviceConfig->i2c;
	ld.a	a15,[a5]
.L467:
	st.a	[a4],a15
.L468:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    71      i2cDevice->deviceAddress = i2cDeviceConfig->deviceAddress;
	ld.hu	d15,[a5]4
.L469:
	st.h	[a4]4,d15
.L470:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    72      i2cDevice->addressMode   = i2cDeviceConfig->addressMode;
	ld.bu	d15,[a5]6
.L471:
	st.b	[a4]6,d15
.L472:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    73      i2cDevice->speedMode     = i2cDeviceConfig->speedMode;
	ld.bu	d15,[a5]7
.L473:
	st.b	[a4]7,d15
.L474:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    74  }
	ret
.L187:
	
__IfxI2c_I2c_initDevice_function_end:
	.size	IfxI2c_I2c_initDevice,__IfxI2c_I2c_initDevice_function_end-IfxI2c_I2c_initDevice
.L132:
	; End of function
	
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_initDeviceConfig',code,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_initDeviceConfig'
	.align	2
	
	.global	IfxI2c_I2c_initDeviceConfig

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    75  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    76  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    77  void IfxI2c_I2c_initDeviceConfig(IfxI2c_I2c_deviceConfig *i2cDeviceConfig, IfxI2c_I2c *i2c)
; Function IfxI2c_I2c_initDeviceConfig
.L98:
IfxI2c_I2c_initDeviceConfig:	.type	func

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    78  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    79      i2cDeviceConfig->i2c           = i2c;
	st.a	[a4],a5
.L479:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    80      i2cDeviceConfig->deviceAddress = 0xff;
	mov	d15,#255
	st.h	[a4]4,d15
.L480:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    81      i2cDeviceConfig->addressMode   = IfxI2c_AddressMode_7Bit;
	mov	d15,#0
	st.b	[a4]6,d15
.L481:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    82      i2cDeviceConfig->speedMode     = IfxI2c_Mode_StandardAndFast;
	st.b	[a4]7,d15
.L482:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    83  }
	ret
.L192:
	
__IfxI2c_I2c_initDeviceConfig_function_end:
	.size	IfxI2c_I2c_initDeviceConfig,__IfxI2c_I2c_initDeviceConfig_function_end-IfxI2c_I2c_initDeviceConfig
.L137:
	; End of function
	
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_initModule',code,cluster('IfxI2c_I2c_initModule')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_initModule'
	.align	2
	
	.global	IfxI2c_I2c_initModule

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    84  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    85  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    86  void IfxI2c_I2c_initModule(IfxI2c_I2c *i2c, const IfxI2c_I2c_Config *config)
; Function IfxI2c_I2c_initModule
.L100:
IfxI2c_I2c_initModule:	.type	func
	mov.aa	a13,a5
.L394:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    87  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    88      Ifx_I2C *i2cSFR = config->i2c;
	ld.a	a14,[a13]
.L395:
	mov.aa	a12,a4
.L396:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    89      i2c->i2c = i2cSFR;
	st.a	[a12],a14
.L487:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    90  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    91      IfxI2c_enableModule(i2cSFR);
	mov.aa	a4,a14
.L393:
	call	IfxI2c_enableModule
.L202:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   770  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   773  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   774  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   775      i2c->RUNCTRL.U = 0;
	mov	d15,#0
	st.w	[a14]16,d15
.L203:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    92      IfxI2c_stop(i2cSFR);                                                                   // enter config Mode
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    93      IfxI2c_configureAsMaster(i2cSFR);
	mov.aa	a4,a14
.L397:
	call	IfxI2c_configureAsMaster
.L398:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    94      IfxI2c_setBaudrate(i2cSFR, config->baudrate);
	ld.w	d4,[a13]4
	mov.aa	a4,a14
.L399:
	call	IfxI2c_setBaudrate
.L400:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    95  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    96      if (config->pins != NULL_PTR)
	ld.a	a15,[a13]8
.L488:
	jz.a	a15,.L3
.L489:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    97      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    98          IfxI2c_initSclSdaPin(config->pins->scl, config->pins->sda, config->pins->padDriver);
	ld.a	a4,[a15]
.L490:
	ld.a	a5,[a15]4
.L491:
	ld.bu	d4,[a15]8
	call	IfxI2c_initSclSdaPin
.L3:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
	mov	d15,#1
	st.w	[a14]16,d15
.L208:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	    99      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   100  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   101      IfxI2c_run(i2cSFR);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   102  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   103      /* To Switch to HighSpeed Mode, first switch to Fast mode and send the MasterCode to switch to HighSpeed Mode*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   104      if (config->mode == IfxI2c_Mode_HighSpeed)
	ld.bu	d15,[a13]12
.L492:
	jne	d15,#1,.L4
.L493:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   105      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   106          IfxI2c_configureHighSpeedMode(i2cSFR);
	mov.aa	a4,a14
.L401:
	call	IfxI2c_configureHighSpeedMode
.L212:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
	st.w	[a14]16,d15
.L4:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   107          IfxI2c_run(i2cSFR);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   108      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   109  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   110      i2c->baudrate  = IfxI2c_getBaudrate(i2cSFR);
	mov.aa	a4,a14
.L402:
	call	IfxI2c_getBaudrate
.L403:
	st.w	[a12]6,d2
.L214:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
	ld.bu	d15,[a14]36
.L494:
	and	d15,#3

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   111      i2c->busStatus = IfxI2c_getBusStatus(i2cSFR);
	st.b	[a12]4,d15
.L215:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   112      i2c->status    = IfxI2c_I2c_Status_ok;
	mov	d15,#0
	st.b	[a12]5,d15
.L495:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   113  }
	ret
.L196:
	
__IfxI2c_I2c_initModule_function_end:
	.size	IfxI2c_I2c_initModule,__IfxI2c_I2c_initModule_function_end-IfxI2c_I2c_initModule
.L142:
	; End of function
	
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_read',code,cluster('IfxI2c_I2c_read')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_read'
	.align	2
	
	.global	IfxI2c_I2c_read

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   114  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   115  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   116  IfxI2c_I2c_Status IfxI2c_I2c_read(IfxI2c_I2c_Device *i2cDevice, volatile uint8 *data, Ifx_SizeT size)
; Function IfxI2c_I2c_read
.L102:
IfxI2c_I2c_read:	.type	func
	mov.aa	a15,a4
.L405:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   117  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   118      IfxI2c_I2c_Status  status      = IfxI2c_I2c_Status_ok;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   119      Ifx_I2C           *i2c         = i2cDevice->i2c->i2c;
	ld.a	a2,[a15]
.L500:
	mov	d8,#0
	sub.a	a10,#8
.L404:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   120      uint32             packet;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   121      uint16             slAddr      = i2cDevice->deviceAddress;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   122      IfxI2c_AddressMode addressMode = i2cDevice->addressMode;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   123  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   124      union data
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   125      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   126          uint32 packet;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   127          uint8  packetbyte[4];
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   128      }      rxdata;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   129  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   130      rxdata.packet = 0;
	mov	d1,d8
	ld.hu	d2,[a15]4
.L406:
	ld.a	a12,[a2]
.L408:
	st.w	[a10],d1
.L237:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   131  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   132      sint32 bytesToReceive = size;
	mov	d3,d4
	ld.bu	d0,[a15]6
.L242:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
	ld.bu	d15,[a12]36
	and	d15,#3
.L243:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   133      uint32 bytes;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   134  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   135      // bus free?
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   136      if (IfxI2c_busIsFree(i2c) == FALSE)
	jeq	d15,#0,.L5
.L501:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   137      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   138          status                    = IfxI2c_I2c_Status_busNotFree;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   139          i2cDevice->i2c->busStatus = IfxI2c_getBusStatus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   140          i2cDevice->i2c->status    = status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   141          return status;
	mov	d8,#3
	j	.L6
.L5:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	mov	d15,#127
	st.w	[a12]120,d15
.L248:
	mov	d5,#15
.L502:
	st.w	[a12]104,d5
.L253:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   142      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   143  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   144      IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   145      IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   146  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   147      /* switch to highspeed mode if needed */
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   148      if (i2cDevice->speedMode == IfxI2c_Mode_HighSpeed)
	ld.bu	d15,[a15]7
.L503:
	jne	d15,#1,.L7
.L258:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
	ld.hu	d1,[a12]52
.L407:
	insert	d1,d1,#1,#0,#14
	st.h	[a12]52,d1
.L259:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   770  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   773  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   774  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   775      i2c->RUNCTRL.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   776  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   777  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   778  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   779  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   780  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   781      while (IfxI2c_getBusStatus(i2c) != IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   782      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   783  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   785  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   786  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   788      i2c->TXD.U = packet;
	fcall	.cocofun_6
.L409:
	st.w	[a3]-32768,d5

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   149      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   150          IfxI2c_setTransmitPacketSize(i2c, 1);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   151          IfxI2c_writeFifo(i2c, IFXI2C_HIGHSPEED_MASTER_CODE | 0x1); // Send the Master code to switch to high speed mode
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   152  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   153          // wait until packet is sent
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   154          while (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd) == FALSE)
.L8:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
	ld.w	d1,[a12]116
.L272:
	jz.t	d1:5,.L8
.L278:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
	ld.w	d15,[a12]116
.L279:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   155          {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   156  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   157          // check status
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   158          if (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived) == FALSE)
	jnz.t	d15:4,.L9
.L504:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   159          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   160              // the MASTER_CODE should not be responded, must be always shows a NAK
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   161              IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   162              status                    = IfxI2c_I2c_Status_error;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   163              IfxI2c_releaseBus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   164              i2cDevice->i2c->busStatus = IfxI2c_getBusStatus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   165              i2cDevice->i2c->status    = status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   166              return status;
	mov	d8,#4
	j	.L10
.L9:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	mov	d15,#127
	st.w	[a12]120,d15
.L280:
	st.w	[a12]140,d5
.L7:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   167          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   168  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   169          IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   170          IfxI2c_clearAllDtrInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   171      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   172  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   173      // send device address with RnW bit set
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   174      if (addressMode == IfxI2c_AddressMode_10Bit)                                         /* for 10 bit slave address */
	jne	d0,#1,.L11
.L505:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   175      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   176          packet = ((0xF000) | ((slAddr & (0x3 << 8)) << 9) | (1 << 8) | (slAddr & 0xFF)); /* the first 3 parts of the RHS makes most significant 8 bits of the address and last(4th) part of RHS makes least significant 8 bits of the address*/
	mov	d0,#768
.L410:
	and	d0,d2
.L506:
	sha	d0,d0,#9
.L507:
	mov.u	d1,#61696
.L508:
	or	d0,d1
.L509:
	and	d15,d2,#255
.L411:
	or	d0,d15

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
	ld.hu	d15,[a12]52
.L285:
	insert	d15,d15,#2,#0,#14
	j	.L12
.L11:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   177          IfxI2c_setTransmitPacketSize(i2c, 2);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   178      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   179      else                                                                                 /* for 7 bit slave address */
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   180      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   181          packet = slAddr | 1;                                                             // set read bit
	or	d0,d2,#1

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
	ld.hu	d15,[a12]52
.L286:
	insert	d15,d15,#1,#0,#14
.L12:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
	st.h	[a12]52,d15
.L287:
	ld.hu	d15,[a12]44
.L510:
	insert	d15,d15,d4,#0,#14
	st.h	[a12]44,d15
.L289:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   770  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   773  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   774  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   775      i2c->RUNCTRL.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   776  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   777  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   778  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   779  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   780  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   781      while (IfxI2c_getBusStatus(i2c) != IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   782      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   783  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   785  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   786  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   788      i2c->TXD.U = packet;
	fcall	.cocofun_6
.L412:
	st.w	[a3]-32768,d0
.L295:
	st.w	[a12]140,d5

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   182          IfxI2c_setTransmitPacketSize(i2c, 1);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   183      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   184  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   185      IfxI2c_setReceivePacketSize(i2c, size);   // set number of bytes to reveive
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   186      IfxI2c_writeFifo(i2c, packet);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   187      IfxI2c_clearAllDtrInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   188  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   189      /* Poll until aribtration lost, nack, or rx mode flag is reset, or the error is gone*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   190      while ((i2c->PIRQSS.U & ((1 << IFX_I2C_PIRQSS_AL_OFF) | (1 << IFX_I2C_PIRQSS_NACK_OFF) | (1 << IFX_I2C_PIRQSS_RX_OFF))) || i2c->ERRIRQSS.U)
.L13:
.L14:
	ld.w	d15,[a12]116
.L511:
	and	d15,#88
.L512:
	jne	d15,#0,.L14
.L513:
	ld.w	d15,[a12]100
	jne	d15,#0,.L13
.L514:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   191      {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   192  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   193      /* check status*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   194      if (i2c->ERRIRQSS.U)
	ld.w	d15,[a12]100
.L515:
	jeq	d15,#0,.L15
.L296:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
	st.w	[a12]104,d5
.L297:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   195      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   196          IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   197          status = IfxI2c_I2c_Status_error;
	mov	d8,#4
	j	.L16
.L15:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   198      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   199  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   200      /*Check Arbitration Lost in Protocol Interrupts*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   201      else if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_AL_OFF))
	ld.w	d15,[a12]116
.L516:
	mov	d7,#8
.L517:
	jz.t	d15:3,.L17
.L518:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   202      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   203          i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSS_AL_OFF);
	st.w	[a12]120,d7
.L519:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   204          status        = IfxI2c_I2c_Status_al;
	mov	d8,#2
	j	.L18
.L17:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   205      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   206      /*Check NACK in Protocol Interrupts*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   207      else if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_NACK_OFF))
	ld.w	d15,[a12]116
.L520:
	mov	d9,#16
.L521:
	jz.t	d15:4,.L19
.L522:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   208      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   209          i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSS_NACK_OFF);
	st.w	[a12]120,d9
.L523:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   210          status        = IfxI2c_I2c_Status_nak;
	mov	d8,#1
	j	.L20
.L19:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   211      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   212  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   213      else if (size > 0)                                       // required to poll for nak
	jlt	d4,#1,.L21
.L524:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   214  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   215      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   216          if (size > 32)                                       // if fifo is too small => disable global interrupts!
	mov	d15,#32
.L525:
	jge	d15,d4,.L22
.L299:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
	mfcr	d0,#65068
.L413:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
	extr.u	d0,d0,#15,#1
.L414:
	ne	d10,d0,#0
.L306:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
	disable
.L526:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
	nop
.L303:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   217          {           // assumes TC is faster than i2c and therefor a fifo overflow is not possible
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   218              boolean intEnabled = IfxCpu_disableInterrupts(); // disable global interrupts to prevent fifo overflow
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   219              uint32  i;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   220  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   221              for (i = 0; i < (uint32)size; i += 4)
	mov	d11,#0
.L23:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   222              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   223                  if (bytesToReceive >= 4)
	fcall	.cocofun_4

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   224                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   225                      bytes           = 4;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   226                      bytesToReceive -= 4;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   227                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   228                  else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   229                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   230                      bytes          = bytesToReceive;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   231                      bytesToReceive = 0;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   232                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   233  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   234                  uint32 ris;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   235  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   236                  while (!(ris = i2c->RIS.U)) // wait for fifo request or error
.L26:
	ld.w	d1,[a12]128
.L420:
	jeq	d1,#0,.L26
.L527:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   237  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   238                  {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   239  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   240                  // check request flags
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   241                  if (ris & ((1 << IFX_I2C_RIS_LSREQ_INT_OFF) | (1 << IFX_I2C_RIS_SREQ_INT_OFF) | (1 << IFX_I2C_RIS_LBREQ_INT_OFF) | (1 << IFX_I2C_RIS_BREQ_INT_OFF)))
	and	d15,d1,#15
.L528:
	jeq	d15,#0,.L27
.L529:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   242                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   243                      rxdata.packet = i2c->RXD.U;
	fcall	.cocofun_6
	ld.w	d2,[a3]-16384
.L530:
	st.w	[a10],d2
.L312:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   244                      uint32 k;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   245  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   246                      for (k = 0; k < bytes; k++)
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   247                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   248                          data[i + k] = rxdata.packetbyte[k];
	mov	d2,#0
	mov.aa	a2,a10
.L418:
	mov.aa	a4,a5
.L531:
	j	.L28
.L29:
	add	d2,#1
	ld.bu	d6,[a2+]
.L532:
	st.b	[a4+],d6
.L28:
	jlt.u	d2,d0,.L29
.L314:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
	st.w	[a12]140,d5
.L27:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   249                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   250  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   251                      IfxI2c_clearAllDtrInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   252                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   253  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   254                  /* check errors. Must have enabled corresponding bits in Mask registers*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   255                  if (ris & (1 << IFX_I2C_RIS_I2C_ERR_INT_OFF)) // error flags
	jz.t	d1:4,.L30
.L315:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
	st.w	[a12]104,d5
.L316:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   256                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   257                      IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   258                      status = IfxI2c_I2c_Status_error;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   259                      break;
	mov	d8,#4
	j	.L31
.L30:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   260                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   261  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   262                  /* check protocol interrupts. Must have enabled corresponding bits in Mask registers*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   263                  if (ris & (1 << IFX_I2C_RIS_I2C_P_INT_OFF)) // check protocol flags
	jz.t	d1:5,.L32
.L533:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   264                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   265                      /*Check Arbitration Lost*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   266                      if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_AL_OFF))
	ld.w	d15,[a12]116
.L534:
	jz.t	d15:3,.L33
.L535:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   267                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   268                          i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSS_AL_OFF);
	st.w	[a12]120,d7
.L536:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   269                          status        = IfxI2c_I2c_Status_al;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   270                          break;
	mov	d8,#2
	j	.L34
.L33:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   271                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   272  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   273                      /*Check NACK*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   274                      else if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_NACK_OFF))
	ld.w	d15,[a12]116
.L537:
	jz.t	d15:4,.L35
.L538:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   275                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   276                          i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSS_NACK_OFF);
	st.w	[a12]120,d9
.L539:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   277                          status        = IfxI2c_I2c_Status_nak;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   278                          break;
	mov	d8,#1
	j	.L36
.L35:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   279                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   280  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   281                      /*Check TX_END*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   282                      if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_TX_END_OFF))
	ld.w	d15,[a12]116
.L540:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   283                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   284                          /*Should not be cleared here, otherwise it will cause infinite while loop*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   285                          status = IfxI2c_I2c_Status_ok; //Default value of status. Still kept for readability*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   286                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   287  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   288                      /*Check and clear Address Match, General Call, Master Code and Receive Mode*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   289                      if (i2c->PIRQSS.U & ((1 << IFX_I2C_PIRQSS_AM_OFF) | (1 << IFX_I2C_PIRQSS_GC_OFF) | (1 << IFX_I2C_PIRQSS_MC_OFF) | (1 << IFX_I2C_PIRQSS_RX_OFF)))
	mov	d0,#71
.L417:
	and	d15,#32
.L541:
	cmov	d8,d15,#0
	ld.w	d15,[a12]116
.L542:
	and	d15,#71
.L543:
	jeq	d15,#0,.L38
.L544:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   290                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   291                          /*Just clearing the bits. Status need not be updated*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   292                          i2c->PIRQSC.U = ((1 << IFX_I2C_PIRQSS_AM_OFF) | (1 << IFX_I2C_PIRQSS_GC_OFF) | (1 << IFX_I2C_PIRQSS_MC_OFF) | (1 << IFX_I2C_PIRQSS_RX_OFF));
	st.w	[a12]120,d0
.L38:
.L32:
	add	d11,#4
	add.a	a5,#4
.L545:
	jlt.u	d11,d4,.L23

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   293                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   294                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   295              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   296  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   297              IfxCpu_restoreInterrupts(intEnabled); // (re-) enable global interrupts
.L36:
.L34:
.L31:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d10,#0,.L39
.L546:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765      __enable();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   797  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   800  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   801  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   802      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   803      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   804      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   805      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   806  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   807      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   808      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   809      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   811      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   812      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   813          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   814      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   816      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   818      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   819  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   820      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   821      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   822      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   823      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   824      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   825      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   826      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   827      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   828  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   830  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   831  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   832  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   833      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   834      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   835  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   838  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   839  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   840      Ifx_CPU *module;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   841  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   842      if (cpu < IfxCpu_ResourceCpu_none)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   843      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   844          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   845      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   846      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   847      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   848          module = NULL_PTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   849      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   851      return module;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   852  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   856  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   857      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   858  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   860  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   861  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   862  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   863      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   864  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   866  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   867  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   868  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   869      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   870      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   871      return (IfxCpu_Id)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   872  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   875  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   876  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   877      uint32 reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   878      reg = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   879      return (IfxCpu_ResourceCpu)__minu(reg, 5);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   880  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   883  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   884  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   885      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   886  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   887  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   890  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   891      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   892  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   895  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   896  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   897      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   899      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   900      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   901          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   902      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   903      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   904      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   905          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   906      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   907      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   908      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   909          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   910      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   911      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   912      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   913          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   914      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   915      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   916      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   917          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   918      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   920      return ccnt.B.COUNTVALUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   921  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   923  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   924  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   925  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   926      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   928      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   929      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   930          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   931      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   932      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   933      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   934          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   935      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   936      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   937      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   938          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   939      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   940      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   941      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   942          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   943      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   944      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   945      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   946          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   947      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   949      return ccnt.B.SOVF;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   950  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   951  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   953  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   954  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   955      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   956      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   957      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   958      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   959      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   961      for (k = 0; k < numOfCsa; k++)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   962      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   963          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   964  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   965          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   966          {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   967              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   968          }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   969          else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   970          {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   971              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   972          }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   974          if (k == (numOfCsa - 3U))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   975          {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   976              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   977          }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   979          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   980          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   981      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   982  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   983      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   984  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   987  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   989      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   990      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   991          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   992          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   993          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   994          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   995          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   996          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   997      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   998  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   999  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1001  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1002  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1003      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1004      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1005  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1006  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1007  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1008  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1009  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1010      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1011      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1012      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1013      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1014      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1016      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1017      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1018      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1019      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1020      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1021      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1023      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1024      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1025      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1026      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1027  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1029  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1030  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1031  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1033      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1034          __enable();
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L39:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   298  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   299              // TX_END: transmission finished
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   300              while (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd) == FALSE)
	fcall	.cocofun_7
.L300:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   301              {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   302  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   303              IfxI2c_clearProtocolInterruptSource(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd);
	j	.L41
.L22:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   304          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   305          else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   306          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   307              // wait until all bytes are received
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   308              while (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd) == FALSE)
	fcall	.cocofun_3
.L321:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   309              {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   310  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   311              IfxI2c_clearProtocolInterruptSource(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   312  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   313              // check errors
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   314              uint32 ris;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   315              ris = i2c->RIS.U;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   316  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   317              if (ris & (1 << IFX_I2C_RIS_I2C_ERR_INT_OFF)) // error flags
	jz.t	d15:4,.L43
.L323:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
	st.w	[a12]104,d5
.L324:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   318              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   319                  IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   320                  status = IfxI2c_I2c_Status_error;
	mov	d8,#4
	j	.L44
.L43:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   321              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   322  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   323              else if (ris & (1 << IFX_I2C_RIS_I2C_P_INT_OFF)) // check protocol flags
	jz.t	d15:5,.L45
.L547:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   324              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   325                  if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_AL_OFF))
	ld.w	d15,[a12]116
.L423:
	jz.t	d15:3,.L46
.L548:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   326                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   327                      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSS_AL_OFF);
	st.w	[a12]120,d7
.L549:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   328                      status        = IfxI2c_I2c_Status_al;
	mov	d8,#2
	j	.L47
.L46:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   329                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   330  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   331                  else if (i2c->PIRQSS.U & (1 << IFX_I2C_PIRQSS_NACK_OFF))
	ld.w	d15,[a12]116
.L550:
	jz.t	d15:4,.L48
.L551:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   332                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   333                      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSS_NACK_OFF);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   334                      status        = IfxI2c_I2c_Status_nak;
	mov	d8,#1
	st.w	[a12]120,d9
.L48:
.L47:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   335                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   336  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   337                  /*Clear remaining flags*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   338                  /*	Check and clear Address Match, General Call, Master Code, Transmission End and Receive Mode*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   339                  if (i2c->PIRQSS.U & ((1 << IFX_I2C_PIRQSS_AM_OFF) | (1 << IFX_I2C_PIRQSS_GC_OFF) | (1 << IFX_I2C_PIRQSS_MC_OFF) | (1 << IFX_I2C_PIRQSS_TX_END_OFF) | (1 << IFX_I2C_PIRQSS_RX_OFF)))
	ld.w	d15,[a12]116
.L552:
	and	d15,#103
.L553:
	jeq	d15,#0,.L49
.L554:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   340                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   341                      /*Just clearing the bits. Status need not be updated*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   342                      i2c->PIRQSC.U = ((1 << IFX_I2C_PIRQSS_AM_OFF) | (1 << IFX_I2C_PIRQSS_GC_OFF) | (1 << IFX_I2C_PIRQSS_MC_OFF) | (1 << IFX_I2C_PIRQSS_TX_END_OFF) | (1 << IFX_I2C_PIRQSS_RX_OFF));
	mov	d15,#103
	st.w	[a12]120,d15
.L49:
.L45:
.L44:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   343                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   344              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   345  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   346              if ((status != IfxI2c_I2c_Status_error) && (status != IfxI2c_I2c_Status_al) && (status != IfxI2c_I2c_Status_nak))
	jeq	d8,#4,.L50
.L555:
	jeq	d8,#2,.L51
.L556:
	jeq	d8,#1,.L52
.L325:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   347              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   348                  // read fifo
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   349                  uint32 i;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   350  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   351                  for (i = 0; i < (uint32)size; i += 4)
	mov	d15,#0
.L53:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   352                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   353                      if (bytesToReceive >= 4)
	fcall	.cocofun_4
.L327:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   354                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   355                          bytes           = 4;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   356                          bytesToReceive -= 4;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   357                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   358                      else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   359                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   360                          bytes          = bytesToReceive;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   361                          bytesToReceive = 0;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   362                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   363  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   364                      uint32 k;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   365                      rxdata.packet = i2c->RXD.U;
	fcall	.cocofun_6
.L424:
	ld.w	d1,[a3]-16384
.L557:
	st.w	[a10],d1
.L330:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
	st.w	[a12]140,d5
.L331:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   366                      IfxI2c_clearAllDtrInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   367  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   368                      for (k = 0; k < bytes; k++)
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   369                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   370                          data[i + k] = rxdata.packetbyte[k];
	mov	d1,#0
	mov.aa	a2,a10
.L425:
	mov.aa	a4,a5
.L558:
	add.a	a5,#4
.L559:
	j	.L56
.L57:
	add	d1,#1
	ld.bu	d2,[a2+]
.L560:
	st.b	[a4+],d2
.L56:
	jlt.u	d1,d0,.L57
.L328:
	add	d15,#4
.L561:
	jlt.u	d15,d4,.L53
.L52:
.L51:
.L50:
.L41:
.L21:
.L20:
.L18:
.L16:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
	st.w	[a12]104,d5

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   371                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   372                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   373              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   374          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   375      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   376  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   377      IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   378      IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   379  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   380      IfxI2c_releaseBus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   381      i2cDevice->i2c->busStatus = IfxI2c_getBusStatus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   382      i2cDevice->i2c->status    = status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   383      return status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   384  }
.L10:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	mov	d15,#127
	st.w	[a12]120,d15
.L332:
	mov.aa	a4,a12
.L426:
	call	IfxI2c_releaseBus
.L6:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
	fcall	.cocofun_5
.L333:
	ret
.L220:
	
__IfxI2c_I2c_read_function_end:
	.size	IfxI2c_I2c_read,__IfxI2c_I2c_read_function_end-IfxI2c_I2c_read
.L147:
	; End of function
	
	.sdecl	'.text.IfxI2c_I2c..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxI2c_I2c..cocofun_7'
	.align	2
; Function .cocofun_7
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:1
.L40:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
	ld.w	d15,[a12]116
.L625:
	jz.t	d15:5,.L40
.L626:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
	mov	d15,#32
	st.w	[a12]120,d15
.L419:
	fret
.L177:
	; End of function
	.sdecl	'.text.IfxI2c_I2c..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxI2c_I2c..cocofun_6'
	.align	2
; Function .cocofun_6
.L105:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	movh.a	a3,#1
	add.a	a3,a12
.L620:
	fret
.L172:
	; End of function
	.sdecl	'.text.IfxI2c_I2c..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxI2c_I2c..cocofun_5'
	.align	2
; Function .cocofun_5
.L107:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	ld.a	a2,[a15]
.L612:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
	ld.bu	d15,[a12]36
.L613:
	mov	d2,d8
.L428:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
	and	d15,#3
	st.b	[a2]4,d15
.L614:
	ld.a	a15,[a15]
.L427:
	st.b	[a15]5,d8
.L615:
	fret
.L167:
	; End of function
	.sdecl	'.text.IfxI2c_I2c..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxI2c_I2c..cocofun_4'
	.align	2
; Function .cocofun_4
.L109:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	jlt	d3,#4,.L24
.L607:
	mov	d0,#4
.L415:
	add	d3,#-4
	j	.L25
.L24:
	mov	d0,d3
.L416:
	mov	d3,#0
.L25:
	fret
.L162:
	; End of function
	.sdecl	'.text.IfxI2c_I2c..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxI2c_I2c..cocofun_3'
	.align	2
; Function .cocofun_3
.L111:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	fcall	.cocofun_7
.L421:
	ld.w	d15,[a12]128
.L422:
	fret
.L157:
	; End of function
	.sdecl	'.text.IfxI2c_I2c.IfxI2c_I2c_write',code,cluster('IfxI2c_I2c_write')
	.sect	'.text.IfxI2c_I2c.IfxI2c_I2c_write'
	.align	2
	
	.global	IfxI2c_I2c_write

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   385  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   386  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   387  IfxI2c_I2c_Status IfxI2c_I2c_write(IfxI2c_I2c_Device *i2cDevice, volatile uint8 *data, Ifx_SizeT size)
; Function IfxI2c_I2c_write
.L113:
IfxI2c_I2c_write:	.type	func
	mov.aa	a15,a4
.L430:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   388  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   389      IfxI2c_I2c_Status  status      = IfxI2c_I2c_Status_ok;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   390      Ifx_I2C           *i2c         = i2cDevice->i2c->i2c;
	ld.a	a2,[a15]
.L566:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   391      uint16             addr        = i2cDevice->deviceAddress;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   392      uint16             slAddr;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   393      IfxI2c_AddressMode addressMode = i2cDevice->addressMode;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   394      union data
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   395      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   396          uint32 packet;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   397          uint8  packetbyte[4];
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   398      }      txdata;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   399  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   400      sint32 bytesToSend = size + 1; // +1 slave device address
	add	d3,d4,#1
	sub.a	a10,#8
.L429:
	mov	d5,d3
	ld.hu	d1,[a15]4
.L431:
	ld.a	a12,[a2]
.L432:
	mov	d8,#0
	ld.bu	d2,[a15]6
.L348:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
	ld.bu	d15,[a12]36
	and	d15,#3
.L349:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   401      uint32 bytes;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   402  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   403      if (IfxI2c_busIsFree(i2c) == FALSE)
	jeq	d15,#0,.L59
.L567:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   404      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   405          status                    = IfxI2c_I2c_Status_busNotFree;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   406          i2cDevice->i2c->busStatus = IfxI2c_getBusStatus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   407          i2cDevice->i2c->status    = status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   408          return status;
	mov	d8,#3
	j	.L60
.L59:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	mov	d6,#127
	st.w	[a12]120,d6
.L351:
	mov	d7,#15
.L568:
	st.w	[a12]104,d7
.L353:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   409      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   410  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   411      // build one packet containing the slave address
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   412  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   413      IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   414      IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   415  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   416      /* switch to highspeed mode if needed */
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   417      if (i2cDevice->speedMode == IfxI2c_Mode_HighSpeed)
	ld.bu	d15,[a15]7
.L569:
	jne	d15,#1,.L61
.L355:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
	ld.hu	d0,[a12]52
.L356:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   770  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   773  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   774  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   775      i2c->RUNCTRL.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   776  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   777  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   778  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   779  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   780  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   781      while (IfxI2c_getBusStatus(i2c) != IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   782      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   783  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   785  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   786  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   788      i2c->TXD.U = packet;
	mov	d15,#14
.L360:
	insert	d0,d0,#1,#0,#14
	st.h	[a12]52,d0
.L361:
	fcall	.cocofun_6
.L433:
	st.w	[a3]-32768,d15

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   418      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   419          IfxI2c_setTransmitPacketSize(i2c, 1);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   420          IfxI2c_writeFifo(i2c, IFXI2C_HIGHSPEED_MASTER_CODE); // Send the Master code to switch to high speed mode
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   421  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   422          // wait until packet is sent
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   423          while (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd) == FALSE)
.L62:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
	ld.w	d0,[a12]116
.L365:
	jz.t	d0:5,.L62
.L368:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
	ld.w	d15,[a12]116
.L369:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   424          {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   425  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   426          // check status
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   427          if (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived) == FALSE)
	jnz.t	d15:4,.L63
.L370:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	st.w	[a12]120,d6
.L371:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   428          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   429              // the MASTER_CODE should not be responded, must be always shows a NAK
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   430              IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   431              status                    = IfxI2c_I2c_Status_error;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   432              IfxI2c_releaseBus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   433              i2cDevice->i2c->busStatus = IfxI2c_getBusStatus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   434              i2cDevice->i2c->status    = status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   435              return status;
	j	.L64
.L63:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	st.w	[a12]120,d6
.L372:
	st.w	[a12]140,d7
.L61:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   436          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   437  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   438          IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   439          IfxI2c_clearAllDtrInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   440      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   441  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   442      // try to seize control, if not return
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   443      if (addressMode == IfxI2c_AddressMode_10Bit)                                                /* for 10 bit slave address */
	jne	d2,#1,.L65
.L570:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   444      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   445          slAddr = (uint16)((0xF000) | ((addr & (0x3 << 8)) << 9) | (~(1 << 8)) | (addr & 0xFF)); /* the first 3 parts of the RHS makes
	mov	d0,#768
.L571:
	and	d0,d1
.L572:
	sha	d15,d0,#9
	extr.u	d0,d15,#0,#16
.L573:
	mov.u	d15,#65279
.L574:
	or	d0,d15
.L575:
	and	d15,d1,#255
.L436:
	or	d0,d15
	j	.L66
.L65:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   446                                                                                                   * most significant 8 bits of the address and last(4th) part of RHS
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   447                                                                                                   * makes least significant 8 bits of the address*/
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   448      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   449      else                                                                                        /* for 7 bit slave address */
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   450      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   451          slAddr = (uint16)(addr & 0xfe);
	and	d0,d1,#254
.L66:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   452      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   453  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   454      if (size > 0) // write i2c device
	jlt	d4,#1,.L67
.L374:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
	mfcr	d15,#65068
.L437:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
	extr.u	d15,d15,#15,#1
.L438:
	ne	d9,d15,#0
.L378:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
	disable
.L576:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
	nop
.L377:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
	ld.hu	d1,[a12]52
.L434:
	insert	d1,d1,d3,#0,#14
	st.h	[a12]52,d1
.L380:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   455  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   456      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   457          uint32  i, j = 0;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   458  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   459          // assumes TC is faster then i2c and therefor a fifo underflow is not possible
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   460          boolean intEnabled = IfxCpu_disableInterrupts(); // disable global interrupts to prevent FIFO underflow
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   461          IfxI2c_setTransmitPacketSize(i2c, size + 1);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   462  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   463          for (i = 0; i < (uint32)(size + 1); i += 4)
	mov	d4,#0
.L435:
	mov	d10,d4
.L68:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   464          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   465              if (bytesToSend >= 4)
	jlt	d5,#4,.L69
.L577:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   466              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   467                  bytes        = 4;
	mov	d11,#4
.L439:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   468                  bytesToSend -= 4;
	add	d5,#-4
	j	.L70
.L69:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   469              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   470              else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   471              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   472                  bytes       = bytesToSend;
	mov	d11,d5
.L442:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   473                  bytesToSend = 0;
	mov	d5,#0
.L70:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   474              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   475  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   476              txdata.packet = 0;
	st.w	[a10],d4
.L578:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   477  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   478              for (j = 0; j < bytes; j++)
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   479              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   480                  if (addressMode == IfxI2c_AddressMode_10Bit)
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   481                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   482                      if ((i == 0) && (j < 2))
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   483                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   484                          if (j == 0)
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   485                          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   486                              txdata.packetbyte[j] = (uint8)((slAddr & 0xff00) >> 8);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   487                          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   488                          else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   489                          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   490                              txdata.packetbyte[j] = (uint8)(slAddr & 0x00ff);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   491                          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   492                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   493                      else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   494                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   495                          txdata.packetbyte[j] = (uint8)data[i + j - 1];
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   496                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   497                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   498  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   499                  else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   500                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   501                      if ((i == 0) && (j == 0))
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   502                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   503                          txdata.packetbyte[j] = (uint8)slAddr;
	mov	d12,#0
	mov.aa	a2,a10
.L443:
	jeq	d11,#0,.L71
.L72:
	jne	d2,#1,.L73
.L579:
	jne	d10,#0,.L74
.L580:
	jge.u	d12,#2,.L75
.L581:
	jne	d12,#0,.L76
.L582:
	mov.u	d1,#65280
.L583:
	and	d1,d0
.L584:
	sha	d1,#-8
	st.b	[a10],d1
.L585:
	j	.L77
.L73:
	jne	d10,#0,.L78
.L586:
	jne	d12,#0,.L79
.L76:
	st.b	[a2],d0
.L587:
	j	.L80
.L79:
.L78:
.L75:
.L74:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   504                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   505  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   506                      else
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   507                      {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   508                          txdata.packetbyte[j] = (uint8)data[i + j - 1];
	add	d15,d10,d12
.L588:
	addsc.a	a4,a5,d15,#0
	ld.bu	d15,[a4]-1
.L589:
	st.b	[a2],d15
.L80:
.L77:
	add	d12,#1
	add.a	a2,#1
.L590:
	jlt.u	d12,d11,.L72
.L71:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   509                      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   510                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   511              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   512  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   513              do
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   514              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   515                  // check errors
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   516                  uint32 ris;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   517                  ris = i2c->RIS.U;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   518  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   519                  if (ris & (1 << IFX_I2C_RIS_I2C_P_INT_OFF)) // check protocol flags
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   520                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   521                      IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   522                      status = IfxI2c_I2c_Status_error;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   523                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   524  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   525                  if (ris & (1 << IFX_I2C_RIS_I2C_ERR_INT_OFF)) // error flags
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   526                  {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   527                      IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   528                      status = IfxI2c_I2c_Status_error;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   529                  }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   530              } while (i2c->FFSSTAT.B.FFS == 8 && status != IfxI2c_I2c_Status_error); // wait to prevent FIFO overflow
.L81:
	ld.w	d15,[a12]128
.L440:
	jz.t	d15:5,.L82
.L591:
	mov	d8,#4

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	st.w	[a12]120,d6
.L82:
	jz.t	d15:4,.L83
.L592:
	mov	d8,#4

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
	st.w	[a12]104,d7
.L83:
	ld.bu	d15,[a12]56
.L441:
	and	d1,d15,#63
.L593:
	mov	d15,#8
.L594:
	jne	d15,d1,.L84
.L595:
	jne	d8,#4,.L81
.L84:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   531  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   532              if (status == IfxI2c_I2c_Status_error)
	jeq	d8,#4,.L85
.L382:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   533              {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   534                  break;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   535              }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   536  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   537              IfxI2c_writeFifo(i2c, txdata.packet);
	ld.w	d15,[a10]
.L596:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   770  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   773  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   774  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   775      i2c->RUNCTRL.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   776  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   777  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   778  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   779  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   780  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   781      while (IfxI2c_getBusStatus(i2c) != IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   782      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   783  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   785  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   786  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   788      i2c->TXD.U = packet;
	fcall	.cocofun_6
.L383:
	add	d10,#4

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   656  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   658      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   659      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   660          return &MODULE_SRC.I2C.I2C[0].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   661      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   662      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   663      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   664          return &MODULE_SRC.I2C.I2C[1].DTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   665      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   666  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   667  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   669  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   670  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   671      return (i2c->RIS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   672  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   673  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   675  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   676  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   677      return i2c->RIS.B.I2C_ERR_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   678  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   680  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   681  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   682  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   683      return (i2c->ERRIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   684  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   685  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   687  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   688  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   689      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   690      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   691          return &MODULE_SRC.I2C.I2C[0].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   692      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   693      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   694      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   695          return &MODULE_SRC.I2C.I2C[1].ERR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   696      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   697  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   699  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   700  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   701  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   702      return i2c->RIS.B.I2C_P_INT;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   703  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   704  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   706  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   707  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   708      return (i2c->PIRQSS.U & (1 << source)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   709  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   710  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   713  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   714      if (i2c == &MODULE_I2C0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   715      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   716          return &MODULE_SRC.I2C.I2C[0].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   717      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   718      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   719      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   720          return &MODULE_SRC.I2C.I2C[1].P;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   721      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   722  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   723  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   725  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   726  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   727      return i2c->RIS.U & 0x0F ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   728  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   729  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   730  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   731  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   732  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   733      i2c->RUNCTRL.U = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   734  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   735  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   736  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   737  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   738  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   739      i2c->ADDRCFG.B.TBAM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   740  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   741  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   742  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   743  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   744  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   745      i2c->GPCTL.B.PISEL = pisel;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   746  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   748  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   749  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   750  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   751      i2c->MRPSCTRL.B.MRPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   752  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   753  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   755  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   756  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   757      i2c->ADDRCFG.B.ADR = address;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   758  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   759  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   760  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   761  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   762  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   763      i2c->CLC1.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   764  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   765  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   766  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   767  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   768  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   769      i2c->TPSCTRL.B.TPS = size;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   770  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   771  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   772  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   773  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   774  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   775      i2c->RUNCTRL.U = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   776  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   777  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   778  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   779  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   780  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   781      while (IfxI2c_getBusStatus(i2c) != IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   782      {}
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   783  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   785  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   786  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   787  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   788      i2c->TXD.U = packet;
	st.w	[a3]-32768,d15
.L384:
	st.w	[a12]140,d7
.L385:
	jlt.u	d10,d3,.L68

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   538              IfxI2c_clearAllDtrInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   539          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   540  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   541          IfxCpu_restoreInterrupts(intEnabled); // (re-) enable global interrupts
.L85:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
	jeq	d9,#0,.L86
.L597:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2,  /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173      IfxCpu_OverlayMemorySelect_core3DsprPspr = 3,  /**< \brief Redirection to Core 3 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174      IfxCpu_OverlayMemorySelect_core4DsprPspr = 4,  /**< \brief Redirection to Core 4 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175      IfxCpu_OverlayMemorySelect_core5DsprPspr = 5,  /**< \brief Redirection to Core 5 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176      IfxCpu_OverlayMemorySelect_lmu           = 8,  /**< \brief Redirection to LMU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_OverlayMemorySelect_emem          = 9,  /**< \brief Redirection to EMEM memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_OverlayMemorySelect_ebu           = 10  /**< \brief Redirection to EBU memory */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517  #endif
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611   *    }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Note:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   * \code
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748      reg.U = __mfcr(CPU_ICR);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      return reg.B.IE != 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   760  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   762  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   763  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   764  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   765      __enable();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   766  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   767  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   769  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   770  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   771      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   772      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   773      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   774      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   776      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   777      /*In PMA0 Segment-C and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   778      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   779  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   780      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   781      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   782          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   783      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   784  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   785      cpu_pmaVal = __mfcr(CPU_PMA0);                                                              /* Read the CPU_PMA0 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   786  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   787      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   788  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   789      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   790      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   791      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   792      /*Write to PMA0 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   793      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   794      __mtcr(CPU_PMA0, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   795      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   796      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   797  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   798  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   799  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   800  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   801  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   802      uint32 cpu_pmaVal;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   803      uint16 checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   804      uint32 coreIndex   = IfxCpu_getCoreIndex();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   805      uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[coreIndex]);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   806  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   807      /*resolve the restrictions*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   808      /*In PMA1 Segment-D and Segment[7-CoreID] must have the same value */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   809      checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   811      if ((segmentNumberMask & checkRestrictionMask) != 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   812      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   813          segmentNumberMask |= checkRestrictionMask;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   814      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   815  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   816      cpu_pmaVal = __mfcr(CPU_PMA1);                                                              /* Read the CPU_PMA1 */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   818      cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask); /* enable or disable the corresponding bitfield */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   819  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   820      /*The CPU_PMA registers are ENDINIT protected*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   821      IfxScuWdt_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   822      /*When changing the value of the CPU_PMAx registers both the instruction and data caches should be invalidated*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   823      /*Write to PMA1 register for selecting the cacheability for data cache*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   824      __dsync();      /* DSYNC instruction should be executed immediately prior to the MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   825      __mtcr(CPU_PMA1, cpu_pmaVal);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   826      __isync();      /* ISYNC instruction executed immediately following MTCR */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   827      IfxScuWdt_setCpuEndinitInline(&MODULE_SCU.WDTCPU[coreIndex], wdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   828  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   830  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   831  IFX_INLINE void IfxCpu_forceDisableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   832  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   833      __disable();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   834      __nop();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   835  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   836  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   837  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   838  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   839  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   840      Ifx_CPU *module;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   841  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   842      if (cpu < IfxCpu_ResourceCpu_none)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   843      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   844          module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   845      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   846      else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   847      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   848          module = NULL_PTR;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   849      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   850  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   851      return module;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   852  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   853  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   855  IFX_INLINE uint32 IfxCpu_getClockCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   856  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   857      return IfxCpu_getPerformanceCounter(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   858  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   859  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   860  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   861  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   862  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   863      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   864  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   865  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   866  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   867  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   868  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   869      Ifx_CPU_CORE_ID reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   870      reg.U = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   871      return (IfxCpu_Id)reg.B.CORE_ID;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   872  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   873  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   874  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   875  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   876  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   877      uint32 reg;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   878      reg = __mfcr(CPU_CORE_ID);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   879      return (IfxCpu_ResourceCpu)__minu(reg, 5);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   880  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   881  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   883  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   884  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   885      return IfxCpu_getPerformanceCounter(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   886  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   887  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   889  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   890  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   891      return IfxCpu_getPerformanceCounterStickyOverflow(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   892  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   893  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   895  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   896  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   897      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   898  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   899      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   900      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   901          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   902      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   903      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   904      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   905          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   906      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   907      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   908      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   909          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   910      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   911      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   912      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   913          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   914      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   915      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   916      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   917          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   918      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   919  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   920      return ccnt.B.COUNTVALUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   921  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   922  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   923  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   924  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   925  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   926      Ifx_CPU_CCNT ccnt;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   927  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   928      if (address == CPU_CCNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   929      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   930          ccnt.U = __mfcr(CPU_CCNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   931      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   932      else if (address == CPU_ICNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   933      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   934          ccnt.U = __mfcr(CPU_ICNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   935      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   936      else if (address == CPU_M1CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   937      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   938          ccnt.U = __mfcr(CPU_M1CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   939      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   940      else if (address == CPU_M2CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   941      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   942          ccnt.U = __mfcr(CPU_M2CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   943      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   944      else if (address == CPU_M3CNT)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   945      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   946          ccnt.U = __mfcr(CPU_M3CNT);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   947      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   949      return ccnt.B.SOVF;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   950  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   951  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   952  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   953  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   954  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   955      uint32  k;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   956      uint32  nxt_cxi_val = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   957      uint32 *prvCsa      = 0U;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   958      uint32 *nxtCsa      = csaBegin;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   959      uint32  numOfCsa    = (((uint32)csaEnd - (uint32)csaBegin) / 64U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   961      for (k = 0; k < numOfCsa; k++)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   962      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   963          nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28)) >> 12 | ((uint32)nxtCsa & (0XFFFFU << 6)) >> 6;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   964  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   965          if (k == 0)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   966          {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   967              __mtcr(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   968          }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   969          else
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   970          {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   971              *prvCsa = nxt_cxi_val;  /* Store null pointer in last CSA (= very first time!) */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   972          }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   973  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   974          if (k == (numOfCsa - 3U))
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   975          {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   976              __mtcr(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   977          }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   979          prvCsa  = (uint32 *)nxtCsa;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   980          nxtCsa += 16;           /* next CSA */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   981      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   982  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   983      *prvCsa = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   984  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   985  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   986  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   987  IFX_INLINE void IfxCpu_invalidateProgramCache(void)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   988  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   989      uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   990      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   991          IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   992          Ifx_CPU_PCON1 pcon1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   993          pcon1.U       = __mfcr(CPU_PCON1);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   994          pcon1.B.PCINV = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   995          __mtcr(CPU_PCON1, pcon1.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   996          IfxScuWdt_setCpuEndinit(cpuWdtPassword);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   997      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   998  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   999  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1000  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1001  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1002  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1003      uint8 segment = (uint32)address >> 24;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1004      return ((segment == IFXCPU_CACHABLE_FLASH_SEGMENT) || (segment == IFXCPU_CACHABLE_LMU_SEGMENT)) ? TRUE : FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1005  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1006  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1007  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1008  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1009  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1010      Ifx_CPU_CCTRL cctrl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1011      cctrl.U    = __mfcr(CPU_CCTRL);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1012      /*Disable the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1013      cctrl.B.CE = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1014      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1015  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1016      /* reset the counters */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1017      __mtcr(CPU_CCNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1018      __mtcr(CPU_ICNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1019      __mtcr(CPU_M1CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1020      __mtcr(CPU_M2CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1021      __mtcr(CPU_M3CNT, 0);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1022  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1023      /*Enable the counters, set the counter mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1024      cctrl.B.CE = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1025      cctrl.B.CM = mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1026      __mtcr(CPU_CCTRL, cctrl.U);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1027  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1028  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1029  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1030  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1031  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1033      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1034          __enable();
	enable

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	  1032      if (enabled != FALSE)      (inlined)
.L86:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   542  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   543          // wait until all bytes are sent
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   544          while (IfxI2c_getProtocolInterruptSourceStatus(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd) == FALSE)
	fcall	.cocofun_3
.L387:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   545          {}
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   546  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   547          IfxI2c_clearProtocolInterruptSource(i2c, IfxI2c_ProtocolInterruptSource_transmissionEnd);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   548  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   549          // finally check errors
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   550          uint32 ris;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   551          ris = i2c->RIS.U;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   552  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   553          if (ris & (1 << IFX_I2C_RIS_I2C_P_INT_OFF)) // check protocol flags
	jz.t	d15:5,.L88
.L598:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   554          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   555              IfxI2c_clearAllProtocolInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   556              status = IfxI2c_I2c_Status_error;
	mov	d8,#4

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
	st.w	[a12]120,d6
.L88:

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   557          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   558  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   559          if (ris & (1 << IFX_I2C_RIS_I2C_ERR_INT_OFF)) // error flags
	jz.t	d15:4,.L89
.L389:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
	st.w	[a12]104,d7

; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   560          {
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   561              IfxI2c_clearAllErrorInterruptSources(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   562              status = IfxI2c_I2c_Status_error;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   563          }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   564      }
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   565  
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   566      IfxI2c_releaseBus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   567      i2cDevice->i2c->busStatus = IfxI2c_getBusStatus(i2c);
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   568      i2cDevice->i2c->status    = status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   569      return status;
; ..\0_Src\4_McHal\Tricore\I2c\I2c\IfxI2c_I2c.c	   570  }
.L64:
	mov	d8,#4
.L89:
.L67:
	mov.aa	a4,a12
.L444:
	call	IfxI2c_releaseBus
.L60:

; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     2   * \file IfxI2c.h
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     3   * \brief I2C  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     4   * \ingroup IfxLld_I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    41   * \defgroup IfxLld_I2c_Std_enums Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    42   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    43   * \defgroup IfxLld_I2c_Std_functions Functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    44   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    45   * \defgroup IfxLld_I2c_Std_structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    46   * \ingroup IfxLld_I2c_Std
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    49  #ifndef IFXI2C_H
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    50  #define IFXI2C_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    56  #include "_Impl/IfxI2c_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    57  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    58  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    59  #include "IfxI2c_bf.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    60  #include "_PinMap/IfxI2c_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    61  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    64  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    67  /** \brief Master code for high speed mode
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    68   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    69  #define IFXI2C_HIGHSPEED_MASTER_CODE (0xEU)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    70  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    71  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    72  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    73  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    74  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    75  /** \addtogroup IfxLld_I2c_Std_enums
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    76   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    77  /** \brief Selects width of address bits (7 or 10 bits)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    78   * Definition in Ifx_I2C.ADDRCFG.B.TBAM
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    79   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    80  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    82      IfxI2c_AddressMode_7Bit  = 0, /**< \brief sets 7 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    83      IfxI2c_AddressMode_10Bit = 1  /**< \brief sets 10 bit address */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    84  } IfxI2c_AddressMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    85  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    86  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    87  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    88      IfxI2c_BusStatus_idle        = 0, /**< \brief idle */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    89      IfxI2c_BusStatus_started     = 1, /**< \brief started */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    90      IfxI2c_BusStatus_busyMaster  = 2, /**< \brief busy Master */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    91      IfxI2c_BusStatus_remoteSlave = 3  /**< \brief remote Slave */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    92  } IfxI2c_BusStatus;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    93  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    94  /** \brief enables DTR interrupt flags
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    95   * Definition in Ifx.I2C.IMSC.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    96   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    97  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    98  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	    99      IfxI2c_DtrInterruptSource_lastSingleRequest = IFX_I2C_IMSC_LSREQ_INT_OFF,  /**< \brief last single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   100      IfxI2c_DtrInterruptSource_singleRequest     = IFX_I2C_IMSC_SREQ_INT_OFF,   /**< \brief single service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   101      IfxI2c_DtrInterruptSource_lastBurstRequest  = IFX_I2C_IMSC_LBREQ_INT_OFF,  /**< \brief last burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   102      IfxI2c_DtrInterruptSource_burstRequest      = IFX_I2C_IMSC_BREQ_INT_OFF    /**< \brief burst service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   103  } IfxI2c_DtrInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   105  /** \brief enable error interrupt request source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   106   * Definition in Ifx.I2C.ERRIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   107   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   108  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   109  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   110      IfxI2c_ErrorInterruptSource_rxFifoUnderflow = IFX_I2C_ERRIRQSM_RXF_UFL_OFF,  /**< \brief receive fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   111      IfxI2c_ErrorInterruptSource_rxFifoOverflow  = IFX_I2C_ERRIRQSM_RXF_OFL_OFF,  /**< \brief receive fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   112      IfxI2c_ErrorInterruptSource_txFifoUnderflow = IFX_I2C_ERRIRQSM_TXF_UFL_OFF,  /**< \brief transmit fifo underflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   113      IfxI2c_ErrorInterruptSource_txFifoOverflow  = IFX_I2C_ERRIRQSM_TXF_OFL_OFF   /**< \brief transmit fifo overflow service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   114  } IfxI2c_ErrorInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   116  /** \brief Select speed mode. Standard and Fast or High Speed mode.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   117   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   118  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   119  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   120      IfxI2c_Mode_StandardAndFast = 0,  /**< \brief Sets Standard and Fast speed mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   121      IfxI2c_Mode_HighSpeed       = 1   /**< \brief Sets HighSpeed Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   122  } IfxI2c_Mode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   123  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   124  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   125  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   126      IfxI2c_PinSelect_a = 0,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   127      IfxI2c_PinSelect_b = 1,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   128      IfxI2c_PinSelect_c = 2,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   129      IfxI2c_PinSelect_d = 3,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   130      IfxI2c_PinSelect_e = 4,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   131      IfxI2c_PinSelect_f = 5,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   132      IfxI2c_PinSelect_g = 6,
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   133      IfxI2c_PinSelect_h = 7
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   134  } IfxI2c_PinSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   136  /** \brief enable protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   137   * Definition in Ifx.I2C.PIRQSM.U
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   138   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   139  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   140  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   141      IfxI2c_ProtocolInterruptSource_addressMatch           = IFX_I2C_PIRQSM_AM_OFF,     /**< \brief address match service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   142      IfxI2c_ProtocolInterruptSource_generalCall            = IFX_I2C_PIRQSM_GC_OFF,     /**< \brief general call service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   143      IfxI2c_ProtocolInterruptSource_masterCode             = IFX_I2C_PIRQSM_MC_OFF,     /**< \brief master code service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   144      IfxI2c_ProtocolInterruptSource_arbitrationLost        = IFX_I2C_PIRQSM_AL_OFF,     /**< \brief arbitration lost service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   145      IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived = IFX_I2C_PIRQSM_NACK_OFF,   /**< \brief not acknowledge received service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   146      IfxI2c_ProtocolInterruptSource_transmissionEnd        = IFX_I2C_PIRQSM_TX_END_OFF, /**< \brief transmission end service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   147      IfxI2c_ProtocolInterruptSource_receiveMode            = IFX_I2C_PIRQSM_RX_OFF      /**< \brief receive mode service request */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   148  } IfxI2c_ProtocolInterruptSource;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   150  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   151   * Definition in Ifx_I2C.CLC1.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   155      IfxI2c_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   156      IfxI2c_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   157  } IfxI2c_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   158  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   159  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   161  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   162  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   163  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   165  /** \addtogroup IfxLld_I2c_Std_structures
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   166   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   167  /** \brief Pin Structure
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   169  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   170  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   171      IfxI2c_Scl_InOut *scl;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   172      IfxI2c_Sda_InOut *sda;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   173      IfxPort_PadDriver padDriver;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   174  } IfxI2c_Pins;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   175  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   176  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   177  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   178  /** \addtogroup IfxLld_I2c_Std_functions
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   179   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   181  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   182  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   183  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   184  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   185  /** \brief Returns if the bus is free
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   186   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   187  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   188  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   189  /** \brief clears all DTR interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   190   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   192   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   193  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   194  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   195  /** \brief clears all Error Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   196   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   197   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   198   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   199  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   201  /** \brief Clears all Protocol Interrupt sources
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   202   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   203   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   204   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   205  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   207  /** \brief clears the specified source of DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   208   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   209   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   210   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   211   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   212  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   213  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   214  /** \brief clears the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   215   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   216   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   217   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   218   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   219  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   220  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   221  /** \brief clears the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   222   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   223   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   224   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   226  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   228  /** \brief Data request is cleared automatically
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   229   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   230   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   231   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   232  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   234  /** \brief disables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   235   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   236   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   237   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   239  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   241  /** \brief disables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   242   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   243   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   244   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   245  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   247  /** \brief disables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   248   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   249   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   250   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   251   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   252  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   254  /** \brief disables the Protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   255   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   256   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   258  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   260  /** \brief disables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   261   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   262   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   263   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   264   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   265  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   267  /** \brief enables the specified source of DTR interupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   268   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   269   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   270   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   272  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   273  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   274  /** \brief enables the error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   275   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   276   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   277   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   278  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   279  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   280  /** \brief enables the specified source of error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   281   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   282   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   283   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   284   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   285  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   286  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   287  /** \brief enables the protocol interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   288   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   290   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   291  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   292  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   293  /** \brief enables the specified source of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   294   * \param i2c pointer to I2C registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   295   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   298  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   299  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   300  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   301   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   302   * \return BusStatus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   304  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   305  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   306  /** \brief Returns the SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   307   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   308   * \return SRC pointer for I2C DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   309   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   310  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getDtrSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   312  /** \brief returns the status of specified DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   313   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   314   * \param source DTR interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   315   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   316   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   317  IFX_INLINE boolean IfxI2c_getDtrinterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   318  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   319  /** \brief returns the current status of error interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   320   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   321   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   322   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   323  IFX_INLINE boolean IfxI2c_getErrorInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   324  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   325  /** \brief returns the status of the error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   326   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   327   * \param source error interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   328   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   330  IFX_INLINE boolean IfxI2c_getErrorInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   331  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   332  /** \brief Returns the SRC pointer for I2C Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   333   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   334   * \return SRC pointer for I2C Error Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   335   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   336  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getErrorSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   337  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   338  /** \brief returns the current raw status of protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   339   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   340   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   341   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   342  IFX_INLINE boolean IfxI2c_getProtocolInterruptFlagStatus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   343  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   344  /** \brief returns the status of  specified protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   345   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   346   * \param source protocol interrupt source
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   347   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   349  IFX_INLINE boolean IfxI2c_getProtocolInterruptSourceStatus(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   351  /** \brief Returns the SRC pointer for I2C Protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   352   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   353   * \return SRC pointer for I2C Protocol Service interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   354   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   355  IFX_INLINE volatile Ifx_SRC_SRCR *IfxI2c_getProtocolSrcPointer(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   357  /** \brief Returns if the Fifo is requesting new data
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   358   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   359  IFX_INLINE boolean IfxI2c_isFifoRequest(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   361  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   362   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   363   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   365  IFX_INLINE void IfxI2c_run(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   367  /** \brief Sets width of I2C address to 7 or 10 bits
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   368   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   369   * \param mode selects 7 or 10 bits address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   370   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   372  IFX_INLINE void IfxI2c_setBitAddressMode(Ifx_I2C *i2c, IfxI2c_AddressMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   373  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   374  /** \brief selects the pin
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   375   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   376   * \param pisel pin to be select
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   377   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   379  IFX_INLINE void IfxI2c_setPinSelection(Ifx_I2C *i2c, IfxI2c_PinSelect pisel);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   380  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   381  /** \brief Sets the number of bytes to be received
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   382   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   383   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   384   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   385   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   386  IFX_INLINE void IfxI2c_setReceivePacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   387  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   388  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   389   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   390   * \param address device address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   391   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   392   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   393  IFX_INLINE void IfxI2c_setSlaveDeviceAddress(Ifx_I2C *i2c, uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   395  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   396   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   397   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   398   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   399   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   400  IFX_INLINE void IfxI2c_setSleepMode(Ifx_I2C *i2c, IfxI2c_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   402  /** \brief Sets the number of bytes to be tansmitted
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   403   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   404   * \param size number of packets
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   407  IFX_INLINE void IfxI2c_setTransmitPacketSize(Ifx_I2C *i2c, Ifx_SizeT size);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   409  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   410   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   411   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   412   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   413  IFX_INLINE void IfxI2c_stop(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   414  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   415  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   416   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   417   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   418   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   419  IFX_INLINE void IfxI2c_waitBusFree(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   421  /** \brief Writes a packet (4 bytes) into the Fifo
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   422   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   423   * \param packet specifies the byte to be transfer
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   424   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   425   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   426  IFX_INLINE void IfxI2c_writeFifo(Ifx_I2C *i2c, uint32 packet);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   427  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   428  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   429  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   430  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   431  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   432  /** \brief Configures the Module as Master
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   433   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   435   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   436  IFX_EXTERN void IfxI2c_configureAsMaster(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   437  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   438  /** \brief Disables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   439   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   440   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   441   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   442  IFX_EXTERN void IfxI2c_disableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   443  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   444  /** \brief enables the DTR interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   445   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   446   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   447   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   448   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   449   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   450  IFX_EXTERN void IfxI2c_enableDtrInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   451  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   452  /** \brief Enables the Error interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   453   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   454   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   455   * \param priority priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   456   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   457   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   458  IFX_EXTERN void IfxI2c_enableErrorInterrupt(Ifx_I2C *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   459  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   460  /** \brief Enables the I2c Module
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   461   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   462   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   463   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   464  IFX_EXTERN void IfxI2c_enableModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   465  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   466  /** \brief Enables the protocol interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   467   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   468   * \param typeOfService Type of Service (Cpu or DMA)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   469   * \param priority Priority of the interrupt
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   472  IFX_EXTERN void IfxI2c_enableProtocolInterrupt(void *i2c, IfxSrc_Tos typeOfService, uint16 priority);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   474  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   475   * \param i2c Resource index of the I2c
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   476   * \return I2C module register address
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   478  IFX_EXTERN Ifx_I2C *IfxI2c_getAddress(IfxI2c_Index i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   480  /** \brief Returns the real Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   481   * \return Baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   482   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   483  IFX_EXTERN float32 IfxI2c_getBaudrate(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   484  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   485  /** \brief API to get the resource index of the I2C specified.
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   486   * \param i2c Pointer to the I2C HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   487   * \return Resource index of the I2C
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   488   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   489  IFX_EXTERN IfxI2c_Index IfxI2c_getIndex(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   490  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   491  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   492   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   494  IFX_EXTERN void IfxI2c_initSclSdaPin(const IfxI2c_Scl_InOut *scl, const IfxI2c_Sda_InOut *sda, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   496  /** \brief Releases the bus, i.e puts a stop condition on the bus
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   497   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   498   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   499  IFX_EXTERN void IfxI2c_releaseBus(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   500  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   501  /**
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   502   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   503   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   504  IFX_EXTERN void IfxI2c_resetFifo(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   505  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   506  /** \brief resets the I2c kernel
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   507   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   508   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   510  IFX_EXTERN void IfxI2c_resetModule(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   511  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   512  /** \brief Calculates the desired baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   513   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   514   * \param baudrate specifies the baud rate
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   515   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   516   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   517  IFX_EXTERN void IfxI2c_setBaudrate(Ifx_I2C *i2c, float32 baudrate);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   518  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   519  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   520  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   521  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   522  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   524  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   525  /** \brief Configure the i2c master to high speed mode baudrate > 400kbits/s
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   526   * \param i2c pointer to i2c registers
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   529  IFX_EXTERN void IfxI2c_configureHighSpeedMode(Ifx_I2C *i2c);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   531  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   532  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   533  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   534  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   535  IFX_INLINE boolean IfxI2c_busIsFree(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   536  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   537      boolean free = FALSE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   539      if (i2c->BUSSTAT.B.BS == IfxI2c_BusStatus_idle)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   540      {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   541          free = TRUE;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   542      }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   544      return free;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   545  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   546  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   548  IFX_INLINE void IfxI2c_clearAllDtrInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   549  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   550      i2c->ICR.U = (1 << IFX_I2C_ICR_LSREQ_INT_OFF) | (1 << IFX_I2C_ICR_SREQ_INT_OFF) | (1 << IFX_I2C_ICR_LBREQ_INT_OFF) | (1 << IFX_I2C_ICR_BREQ_INT_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   551  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   552  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   553  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   554  IFX_INLINE void IfxI2c_clearAllErrorInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   555  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   556      i2c->ERRIRQSC.U = (1 << IFX_I2C_ERRIRQSC_RXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_RXF_OFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_UFL_OFF) | (1 << IFX_I2C_ERRIRQSC_TXF_OFL_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   557  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   558  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   559  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   560  IFX_INLINE void IfxI2c_clearAllProtocolInterruptSources(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   561  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   562      i2c->PIRQSC.U = (1 << IFX_I2C_PIRQSC_AM_OFF) | (1 << IFX_I2C_PIRQSC_GC_OFF) | (1 << IFX_I2C_PIRQSC_MC_OFF) | (1 << IFX_I2C_PIRQSC_AL_OFF) | (1 << IFX_I2C_PIRQSC_NACK_OFF) | (1 << IFX_I2C_PIRQSC_TX_END_OFF) | (1 << IFX_I2C_PIRQSC_RX_OFF);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   563  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   564  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   566  IFX_INLINE void IfxI2c_clearDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   567  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   568      i2c->ICR.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   569  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   570  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   572  IFX_INLINE void IfxI2c_clearErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   573  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   574      i2c->ERRIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   575  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   576  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   577  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   578  IFX_INLINE void IfxI2c_clearProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   579  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   580      i2c->PIRQSC.U = (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   581  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   584  IFX_INLINE void IfxI2c_clearRequestBuffer(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   585  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   586      i2c->FIFOCFG.B.CRBC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   587  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   588  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   589  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   590  IFX_INLINE void IfxI2c_disableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   591  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   592      i2c->IMSC.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   593  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   594  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   595  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   596  IFX_INLINE void IfxI2c_disableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   597  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   598      i2c->IMSC.B.I2C_ERR_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   599  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   600  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   601  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   602  IFX_INLINE void IfxI2c_disableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   603  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   604      i2c->ERRIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   605  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   606  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   607  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   608  IFX_INLINE void IfxI2c_disableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   609  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   610      i2c->IMSC.B.I2C_P_INT = 0;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   611  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   613  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   614  IFX_INLINE void IfxI2c_disableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   615  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   616      i2c->PIRQSM.U &= ~(1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   617  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   620  IFX_INLINE void IfxI2c_enableDtrInterruptSource(Ifx_I2C *i2c, IfxI2c_DtrInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   621  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   622      i2c->IMSC.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   623  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   624  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   626  IFX_INLINE void IfxI2c_enableErrorInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   627  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   628      i2c->IMSC.B.I2C_ERR_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   629  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   630  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   631  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   632  IFX_INLINE void IfxI2c_enableErrorInterruptSource(Ifx_I2C *i2c, IfxI2c_ErrorInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   633  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   634      i2c->ERRIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   635  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   636  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   637  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   638  IFX_INLINE void IfxI2c_enableProtocolInterruptFlag(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   639  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   640      i2c->IMSC.B.I2C_P_INT = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   641  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   642  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   643  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   644  IFX_INLINE void IfxI2c_enableProtocolInterruptSource(Ifx_I2C *i2c, IfxI2c_ProtocolInterruptSource source)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   645  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   646      i2c->PIRQSM.U |= (1 << source);
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   647  }
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   648  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   650  IFX_INLINE IfxI2c_BusStatus IfxI2c_getBusStatus(Ifx_I2C *i2c)
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   651  {
; D:\WorkSpace\Tasking\Tasking_TC397_MPU\0_Src\4_McHal\Tricore\I2c\Std\IfxI2c.h	   652      return (IfxI2c_BusStatus)i2c->BUSSTAT.B.BS;
	fcall	.cocofun_5
.L390:
	ret
.L336:
	
__IfxI2c_I2c_write_function_end:
	.size	IfxI2c_I2c_write,__IfxI2c_I2c_write_function_end-IfxI2c_I2c_write
.L152:
	; End of function
	
	.calls	'IfxI2c_I2c_getBaudrate','IfxI2c_getBaudrate'
	.calls	'IfxI2c_I2c_initModule','IfxI2c_enableModule'
	.calls	'IfxI2c_I2c_initModule','IfxI2c_configureAsMaster'
	.calls	'IfxI2c_I2c_initModule','IfxI2c_setBaudrate'
	.calls	'IfxI2c_I2c_initModule','IfxI2c_initSclSdaPin'
	.calls	'IfxI2c_I2c_initModule','IfxI2c_configureHighSpeedMode'
	.calls	'IfxI2c_I2c_initModule','IfxI2c_getBaudrate'
	.calls	'IfxI2c_I2c_read','IfxI2c_releaseBus'
	.calls	'IfxI2c_I2c_write','IfxI2c_releaseBus'
	.calls	'IfxI2c_I2c_read','.cocofun_6'
	.calls	'IfxI2c_I2c_read','.cocofun_4'
	.calls	'IfxI2c_I2c_read','.cocofun_7'
	.calls	'IfxI2c_I2c_read','.cocofun_3'
	.calls	'IfxI2c_I2c_read','.cocofun_5'
	.calls	'.cocofun_3','.cocofun_7'
	.calls	'IfxI2c_I2c_write','.cocofun_6'
	.calls	'IfxI2c_I2c_write','.cocofun_3'
	.calls	'IfxI2c_I2c_write','.cocofun_5'
	.calls	'IfxI2c_I2c_getBaudrate','',0
	.calls	'IfxI2c_I2c_initConfig','',0
	.calls	'IfxI2c_I2c_initDevice','',0
	.calls	'IfxI2c_I2c_initDeviceConfig','',0
	.calls	'IfxI2c_I2c_initModule','',0
	.calls	'IfxI2c_I2c_read','',8
	.calls	'.cocofun_7','',0
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_5','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_3','',0
	.extern	IfxI2c_configureAsMaster
	.extern	IfxI2c_enableModule
	.extern	IfxI2c_getBaudrate
	.extern	IfxI2c_initSclSdaPin
	.extern	IfxI2c_releaseBus
	.extern	IfxI2c_setBaudrate
	.extern	IfxI2c_configureHighSpeedMode
	.calls	'IfxI2c_I2c_write','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L115:
	.word	109322
	.half	3
	.word	.L116
	.byte	4
.L114:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L117
	.byte	2,1,1,3
	.word	153
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	156
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L178:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	201
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	213
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	325
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	299
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	331
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	331
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	299
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	440
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	440
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	456
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8
.L230:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	631
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	897
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	552
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	857
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1088
	.byte	4,2,35,8,0,14
	.word	1128
	.byte	3
	.word	1191
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1196
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	609
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	609
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1196
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	609
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	609
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	609
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1196
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	609
	.byte	1,1,6,0,15,6,161,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_2',0,2,16
	.byte	'IfxCpu_ResourceCpu_3',0,3,16
	.byte	'IfxCpu_ResourceCpu_4',0,4,16
	.byte	'IfxCpu_ResourceCpu_5',0,5,16
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,5,235,6,31
	.word	1606
	.byte	1,1,6,0
.L305:
	.byte	8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,233,5,20
	.word	592
	.byte	1,1
.L307:
	.byte	6,0
.L302:
	.byte	8
	.byte	'IfxCpu_disableInterrupts',0,3,5,241,5,20
	.word	592
	.byte	1,1
.L304:
	.byte	17,6,0,0
.L317:
	.byte	4
	.byte	'IfxCpu_restoreInterrupts',0,3,5,134,8,17,1,1
.L318:
	.byte	5
	.byte	'enabled',0,5,134,8,50
	.word	592
.L320:
	.byte	6,0
.L228:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,255,6,19
	.word	1946
	.byte	1,1,5
	.byte	'address',0,5,255,6,55
	.word	609
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,156,7,20
	.word	592
	.byte	1,1,5
	.byte	'address',0,5,156,7,70
	.word	609
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,138,9,17,1,1,5
	.byte	'address',0,5,138,9,56
	.word	1946
	.byte	5
	.byte	'count',0,5,138,9,72
	.word	1946
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,145,3,16,4,11
	.byte	'P0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,171,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2177
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,171,2,16,4,11
	.byte	'PS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,8,251,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2493
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,155,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3064
	.byte	4,2,35,0,0,18,4
	.word	592
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	592
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	592
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	592
	.byte	5,0,2,35,3,0,12,8,171,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3193
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	592
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	592
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	592
	.byte	5,0,2,35,3,0,12,8,187,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3408
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	592
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	592
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	592
	.byte	5,0,2,35,3,0,12,8,195,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3623
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	592
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	592
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	592
	.byte	5,0,2,35,3,0,12,8,179,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3840
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,141,1,16,4,11
	.byte	'P0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,163,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4060
	.byte	4,2,35,0,0,18,24
	.word	592
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,212,3,16,4,11
	.byte	'PD0',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	592
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	592
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	592
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	592
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	592
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	592
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	592
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	592
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	592
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	592
	.byte	2,0,2,35,3,0,12,8,195,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4384
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,233,3,16,4,11
	.byte	'PD8',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	592
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	592
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	592
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	592
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	592
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	592
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	592
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	592
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	592
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	592
	.byte	2,0,2,35,3,0,12,8,203,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4688
	.byte	4,2,35,0,0,18,8
	.word	592
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,111,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,147,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5013
	.byte	4,2,35,0,0,18,12
	.word	592
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,187,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5353
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,8,179,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5719
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,230,2,16,4,11
	.byte	'PS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,12,8,139,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6083
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	417
	.byte	24,0,2,35,0,0,12,8,155,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6230
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	417
	.byte	20,0,2,35,0,0,12,8,163,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6399
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	609
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,147,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6571
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	609
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	609
	.byte	12,0,2,35,2,0,12,8,219,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6746
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	8,0,2,35,3,0,12,8,235,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6920
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	592
	.byte	4,0,2,35,3,0,12,8,243,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7094
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,8,227,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7270
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,208,2,16,4,11
	.byte	'PS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,131,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7426
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	609
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,8,211,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7759
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,8,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	592
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	592
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,8,203,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8107
	.byte	4,2,35,0,0,18,32
	.word	8387
	.byte	19,7,0,18,56
	.word	592
	.byte	19,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,105,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,12,8,139,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8445
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,68,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,8,131,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8532
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2453
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	3024
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3144
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3184
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3368
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3583
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3800
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	4020
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3184
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4335
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4375
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4648
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4964
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	5004
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5304
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5344
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5679
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	6043
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	5004
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6190
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6359
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6531
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6706
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6880
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	7054
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7230
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7386
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7719
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	8067
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5004
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8427
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8436
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8492
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9059
	.byte	4,3,35,252,1,0,14
	.word	9099
	.byte	3
	.word	9669
	.byte	15,7,187,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,169,5,17,1,1,5
	.byte	'port',0,7,169,5,44
	.word	9674
	.byte	5
	.byte	'pinIndex',0,7,169,5,56
	.word	592
	.byte	5
	.byte	'action',0,7,169,5,80
	.word	9679
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,9,157,14,17,1,1,5
	.byte	'timeSec',0,9,157,14,40
	.word	213
	.byte	17,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,9,188,13,20
	.word	213
	.byte	1,1,6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,68,16,4,11
	.byte	'SRPN',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	592
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	592
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	592
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,11,93,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9944
	.byte	4,2,35,0,0,14
	.word	10234
	.byte	3
	.word	10273
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,247,1,17,1,1,5
	.byte	'src',0,10,247,1,60
	.word	10278
	.byte	6,0,10
	.byte	'_Ifx_I2C_CLC1_Bits',0,13,141,1,16,4,11
	.byte	'DISR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'SPEN',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'SBWE',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'FSOE',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'RMC',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	592
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	8,0,2,35,3,0,12,13,222,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10326
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ID_Bits',0,13,254,1,16,4,11
	.byte	'MOD_REV',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'MOD_NUMBER',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,13,182,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10571
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_RUNCTRL_Bits',0,13,137,3,16,4,11
	.byte	'RUN',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	417
	.byte	31,0,2,35,0,0,12,13,166,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10699
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ENDDCTRL_Bits',0,13,156,1,16,4,11
	.byte	'SETRSC',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SETEND',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,12,13,230,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10805
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_FDIVCFG_Bits',0,13,194,1,16,4,11
	.byte	'DEC',0,2
	.word	609
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'INC',0,1
	.word	592
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	8,0,2,35,3,0,12,13,134,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10933
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_FDIVHIGHCFG_Bits',0,13,203,1,16,4,11
	.byte	'DEC',0,2
	.word	609
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'INC',0,1
	.word	592
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	7,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,13,142,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11078
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ADDRCFG_Bits',0,13,111,16,4,11
	.byte	'ADR',0,2
	.word	609
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	592
	.byte	6,0,2,35,1,11
	.byte	'TBAM',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'GCE',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'MCE',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'MNS',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'SONA',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'SOPE',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	609
	.byte	10,0,2,35,2,0,12,13,198,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11250
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_BUSSTAT_Bits',0,13,125,16,4,11
	.byte	'BS',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'RNW',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	417
	.byte	29,0,2,35,0,0,12,13,206,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11472
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_FIFOCFG_Bits',0,13,220,1,16,4,11
	.byte	'RXBS',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'TXBS',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'RXFA',0,1
	.word	592
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	592
	.byte	2,4,2,35,1,11
	.byte	'TXFA',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'RXFC',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'TXFC',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'CRBC',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	609
	.byte	13,0,2,35,2,0,12,13,158,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11591
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_MRPSCTRL_Bits',0,13,200,2,16,4,11
	.byte	'MRPS',0,2
	.word	609
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,4
	.word	417
	.byte	18,0,2,35,0,0,12,13,246,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11885
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_RPSSTAT_Bits',0,13,130,3,16,4,11
	.byte	'RPS',0,2
	.word	609
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,4
	.word	417
	.byte	18,0,2,35,0,0,12,13,158,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11994
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_TPSCTRL_Bits',0,13,164,3,16,4,11
	.byte	'TPS',0,2
	.word	609
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,4
	.word	417
	.byte	18,0,2,35,0,0,12,13,190,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12101
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_FFSSTAT_Bits',0,13,213,1,16,4,11
	.byte	'FFS',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,12,13,150,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12208
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_TIMCFG_Bits',0,13,150,3,16,4,11
	.byte	'SDA_DEL_HD_DAT',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'HS_SDA_DEL_HD_DAT',0,2
	.word	609
	.byte	3,7,2,35,0,11
	.byte	'SCL_DEL_HD_STA',0,1
	.word	592
	.byte	3,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'EN_SCL_LOW_LEN',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'FS_SCL_LOW',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'HS_SDA_DEL',0,1
	.word	592
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	592
	.byte	3,0,2,35,2,11
	.byte	'SCL_LOW_LEN',0,1
	.word	592
	.byte	8,0,2,35,3,0,12,13,182,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12314
	.byte	4,2,35,0,0,18,28
	.word	592
	.byte	19,27,0,10
	.byte	'_Ifx_I2C_ERRIRQSM_Bits',0,13,174,1,16,4,11
	.byte	'RXF_UFL',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'RXF_OFL',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TXF_UFL',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'TXF_OFL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,12,13,246,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12611
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ERRIRQSS_Bits',0,13,184,1,16,4,11
	.byte	'RXF_UFL',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'RXF_OFL',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TXF_UFL',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'TXF_OFL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,12,13,254,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12779
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ERRIRQSC_Bits',0,13,164,1,16,4,11
	.byte	'RXF_UFL',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'RXF_OFL',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TXF_UFL',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'TXF_OFL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,12,13,238,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12947
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_PIRQSM_Bits',0,13,220,2,16,4,11
	.byte	'AM',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'GC',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'MC',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'AL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'NACK',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'TX_END',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'RX',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	417
	.byte	25,0,2,35,0,0,12,13,134,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13115
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_PIRQSS_Bits',0,13,233,2,16,4,11
	.byte	'AM',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'GC',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'MC',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'AL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'NACK',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'TX_END',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'RX',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	417
	.byte	25,0,2,35,0,0,12,13,142,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13309
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_PIRQSC_Bits',0,13,207,2,16,4,11
	.byte	'AM',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'GC',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'MC',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'AL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'NACK',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'TX_END',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'RX',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	417
	.byte	25,0,2,35,0,0,12,13,254,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13503
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_RIS_Bits',0,13,246,2,16,4,11
	.byte	'LSREQ_INT',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SREQ_INT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LBREQ_INT',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'BREQ_INT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'I2C_ERR_INT',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'I2C_P_INT',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,12,13,150,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13697
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_IMSC_Bits',0,13,134,2,16,4,11
	.byte	'LSREQ_INT',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SREQ_INT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LBREQ_INT',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'BREQ_INT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'I2C_ERR_INT',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'I2C_P_INT',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,12,13,190,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13910
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_MIS_Bits',0,13,180,2,16,4,11
	.byte	'LSREQ_INT',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SREQ_INT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LBREQ_INT',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'BREQ_INT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'I2C_ERR_INT',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'I2C_P_INT',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,12,13,230,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14124
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ICR_Bits',0,13,244,1,16,4,11
	.byte	'LSREQ_INT',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SREQ_INT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LBREQ_INT',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'BREQ_INT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,12,13,174,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14337
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ISR_Bits',0,13,146,2,16,4,11
	.byte	'LSREQ_INT',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SREQ_INT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LBREQ_INT',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'BREQ_INT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'I2C_ERR_INT',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'I2C_P_INT',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,12,13,198,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14506
	.byte	4,2,35,0,0,18,236,254,1
	.word	592
	.byte	19,235,254,1,0,10
	.byte	'_Ifx_I2C_TXD_Bits',0,13,171,3,16,4,11
	.byte	'TXD',0,4
	.word	417
	.byte	32,0,2,35,0,0,12,13,198,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14732
	.byte	4,2,35,0,0,18,252,127
	.word	592
	.byte	19,251,127,0,10
	.byte	'_Ifx_I2C_RXD_Bits',0,13,144,3,16,4,11
	.byte	'RXD',0,4
	.word	417
	.byte	32,0,2,35,0,0,12,13,174,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14823
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_CLC_Bits',0,13,133,1,16,4,11
	.byte	'DISR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,12,13,214,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14903
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_MODID_Bits',0,13,192,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	609
	.byte	16,0,2,35,2,0,12,13,238,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15022
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_GPCTL_Bits',0,13,237,1,16,4,11
	.byte	'PISEL',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	417
	.byte	29,0,2,35,0,0,12,13,166,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15150
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ACCEN0_Bits',0,13,68,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	592
	.byte	1,0,2,35,3,0,12,13,182,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15256
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_ACCEN1_Bits',0,13,105,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,12,13,190,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15825
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_KRST0_Bits',0,13,158,2,16,4,11
	.byte	'RST',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,12,13,206,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15914
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_KRST1_Bits',0,13,166,2,16,4,11
	.byte	'RST',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	417
	.byte	31,0,2,35,0,0,12,13,214,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16037
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_I2C_KRSTCLR_Bits',0,13,173,2,16,4,11
	.byte	'CLR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	417
	.byte	31,0,2,35,0,0,12,13,222,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16141
	.byte	4,2,35,0,0,18,222,1
	.word	592
	.byte	19,221,1,0,10
	.byte	'_Ifx_I2C',0,13,215,5,25,128,130,4,13
	.byte	'CLC1',0
	.word	10531
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3184
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10659
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3184
	.byte	4,2,35,12,13
	.byte	'RUNCTRL',0
	.word	10765
	.byte	4,2,35,16,13
	.byte	'ENDDCTRL',0
	.word	10893
	.byte	4,2,35,20,13
	.byte	'FDIVCFG',0
	.word	11038
	.byte	4,2,35,24,13
	.byte	'FDIVHIGHCFG',0
	.word	11210
	.byte	4,2,35,28,13
	.byte	'ADDRCFG',0
	.word	11432
	.byte	4,2,35,32,13
	.byte	'BUSSTAT',0
	.word	11551
	.byte	4,2,35,36,13
	.byte	'FIFOCFG',0
	.word	11845
	.byte	4,2,35,40,13
	.byte	'MRPSCTRL',0
	.word	11954
	.byte	4,2,35,44,13
	.byte	'RPSSTAT',0
	.word	12061
	.byte	4,2,35,48,13
	.byte	'TPSCTRL',0
	.word	12168
	.byte	4,2,35,52,13
	.byte	'FFSSTAT',0
	.word	12274
	.byte	4,2,35,56,13
	.byte	'reserved_3C',0
	.word	3184
	.byte	4,2,35,60,13
	.byte	'TIMCFG',0
	.word	12562
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	12602
	.byte	28,2,35,68,13
	.byte	'ERRIRQSM',0
	.word	12739
	.byte	4,2,35,96,13
	.byte	'ERRIRQSS',0
	.word	12907
	.byte	4,2,35,100,13
	.byte	'ERRIRQSC',0
	.word	13075
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3184
	.byte	4,2,35,108,13
	.byte	'PIRQSM',0
	.word	13269
	.byte	4,2,35,112,13
	.byte	'PIRQSS',0
	.word	13463
	.byte	4,2,35,116,13
	.byte	'PIRQSC',0
	.word	13657
	.byte	4,2,35,120,13
	.byte	'reserved_7C',0
	.word	3184
	.byte	4,2,35,124,13
	.byte	'RIS',0
	.word	13870
	.byte	4,3,35,128,1,13
	.byte	'IMSC',0
	.word	14084
	.byte	4,3,35,132,1,13
	.byte	'MIS',0
	.word	14297
	.byte	4,3,35,136,1,13
	.byte	'ICR',0
	.word	14466
	.byte	4,3,35,140,1,13
	.byte	'ISR',0
	.word	14679
	.byte	4,3,35,144,1,13
	.byte	'reserved_94',0
	.word	14719
	.byte	236,254,1,3,35,148,1,13
	.byte	'TXD',0
	.word	14772
	.byte	4,4,35,128,128,2,13
	.byte	'reserved_8004',0
	.word	14812
	.byte	252,127,4,35,132,128,2,13
	.byte	'RXD',0
	.word	14863
	.byte	4,4,35,128,128,3,13
	.byte	'reserved_C004',0
	.word	14812
	.byte	252,127,4,35,132,128,3,13
	.byte	'CLC',0
	.word	14982
	.byte	4,4,35,128,128,4,13
	.byte	'MODID',0
	.word	15110
	.byte	4,4,35,132,128,4,13
	.byte	'GPCTL',0
	.word	15216
	.byte	4,4,35,136,128,4,13
	.byte	'ACCEN0',0
	.word	15785
	.byte	4,4,35,140,128,4,13
	.byte	'ACCEN1',0
	.word	15874
	.byte	4,4,35,144,128,4,13
	.byte	'KRST0',0
	.word	15997
	.byte	4,4,35,148,128,4,13
	.byte	'KRST1',0
	.word	16101
	.byte	4,4,35,152,128,4,13
	.byte	'KRSTCLR',0
	.word	16207
	.byte	4,4,35,156,128,4,13
	.byte	'reserved_10020',0
	.word	16247
	.byte	222,1,4,35,160,128,4,0,14
	.word	16258
.L185:
	.byte	3
	.word	17079
.L241:
	.byte	8
	.byte	'IfxI2c_busIsFree',0,3,12,151,4,20
	.word	592
	.byte	1,1
.L244:
	.byte	5
	.byte	'i2c',0,12,151,4,46
	.word	17084
.L246:
	.byte	6,0
.L281:
	.byte	4
	.byte	'IfxI2c_clearAllDtrInterruptSources',0,3,12,164,4,17,1,1
.L282:
	.byte	5
	.byte	'i2c',0,12,164,4,61
	.word	17084
.L284:
	.byte	6,0
.L252:
	.byte	4
	.byte	'IfxI2c_clearAllErrorInterruptSources',0,3,12,170,4,17,1,1
.L254:
	.byte	5
	.byte	'i2c',0,12,170,4,63
	.word	17084
.L256:
	.byte	6,0
.L247:
	.byte	4
	.byte	'IfxI2c_clearAllProtocolInterruptSources',0,3,12,176,4,17,1,1
.L249:
	.byte	5
	.byte	'i2c',0,12,176,4,66
	.word	17084
.L251:
	.byte	6,0,15,12,139,1,9,1,16
	.byte	'IfxI2c_ProtocolInterruptSource_addressMatch',0,0,16
	.byte	'IfxI2c_ProtocolInterruptSource_generalCall',0,1,16
	.byte	'IfxI2c_ProtocolInterruptSource_masterCode',0,2,16
	.byte	'IfxI2c_ProtocolInterruptSource_arbitrationLost',0,3,16
	.byte	'IfxI2c_ProtocolInterruptSource_notAcknowledgeReceived',0,4,16
	.byte	'IfxI2c_ProtocolInterruptSource_transmissionEnd',0,5,16
	.byte	'IfxI2c_ProtocolInterruptSource_receiveMode',0,6,0,4
	.byte	'IfxI2c_clearProtocolInterruptSource',0,3,12,194,4,17,1,1,5
	.byte	'i2c',0,12,194,4,62
	.word	17084
	.byte	5
	.byte	'source',0,12,194,4,98
	.word	17314
	.byte	6,0,15,12,86,9,1,16
	.byte	'IfxI2c_BusStatus_idle',0,0,16
	.byte	'IfxI2c_BusStatus_started',0,1,16
	.byte	'IfxI2c_BusStatus_busyMaster',0,2,16
	.byte	'IfxI2c_BusStatus_remoteSlave',0,3,0
.L213:
	.byte	8
	.byte	'IfxI2c_getBusStatus',0,3,12,138,5,29
	.word	17730
	.byte	1,1
.L216:
	.byte	5
	.byte	'i2c',0,12,138,5,58
	.word	17084
.L218:
	.byte	6,0
.L271:
	.byte	8
	.byte	'IfxI2c_getProtocolInterruptSourceStatus',0,3,12,194,5,20
	.word	592
	.byte	1,1
.L273:
	.byte	5
	.byte	'i2c',0,12,194,5,69
	.word	17084
.L275:
	.byte	5
	.byte	'source',0,12,194,5,105
	.word	17314
.L277:
	.byte	6,0
.L207:
	.byte	4
	.byte	'IfxI2c_run',0,3,12,219,5,17,1,1
.L209:
	.byte	5
	.byte	'i2c',0,12,219,5,37
	.word	17084
.L211:
	.byte	6,0
.L224:
	.byte	7
	.byte	'short int',0,2,5
.L288:
	.byte	4
	.byte	'IfxI2c_setReceivePacketSize',0,3,12,237,5,17,1,1
.L290:
	.byte	5
	.byte	'i2c',0,12,237,5,54
	.word	17084
.L292:
	.byte	5
	.byte	'size',0,12,237,5,69
	.word	18012
.L294:
	.byte	6,0
.L257:
	.byte	4
	.byte	'IfxI2c_setTransmitPacketSize',0,3,12,255,5,17,1,1
.L260:
	.byte	5
	.byte	'i2c',0,12,255,5,55
	.word	17084
.L262:
	.byte	5
	.byte	'size',0,12,255,5,70
	.word	18012
.L264:
	.byte	6,0
.L201:
	.byte	4
	.byte	'IfxI2c_stop',0,3,12,133,6,17,1,1
.L204:
	.byte	5
	.byte	'i2c',0,12,133,6,38
	.word	17084
.L206:
	.byte	6,0
.L265:
	.byte	4
	.byte	'IfxI2c_writeFifo',0,3,12,146,6,17,1,1
.L266:
	.byte	5
	.byte	'i2c',0,12,146,6,43
	.word	17084
.L268:
	.byte	5
	.byte	'packet',0,12,146,6,55
	.word	1946
.L270:
	.byte	6,0,20
	.word	433
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	18247
	.byte	0,14
	.word	417
	.byte	3
	.word	417
	.byte	23
	.byte	'__cmpswapw',0
	.word	18289
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	18294
	.byte	24
	.byte	'value',0
	.word	417
	.byte	24
	.byte	'compare',0
	.word	417
	.byte	0,14
	.word	433
	.byte	23
	.byte	'__mfcr',0
	.word	18351
	.byte	1,1,1,1,22
	.word	433
	.byte	0,25
	.byte	'__nop',0,1,1,1,1,25
	.byte	'__disable',0,1,1,1,1,25
	.byte	'__enable',0,1,1,1,1,26
	.word	161
	.byte	27
	.word	187
	.byte	6,0,26
	.word	222
	.byte	27
	.word	254
	.byte	6,0,26
	.word	267
	.byte	6,0,26
	.word	336
	.byte	27
	.word	355
	.byte	6,0,26
	.word	371
	.byte	27
	.word	386
	.byte	27
	.word	400
	.byte	6,0,26
	.word	1201
	.byte	27
	.word	1241
	.byte	27
	.word	1259
	.byte	6,0,26
	.word	1279
	.byte	27
	.word	1322
	.byte	6,0,26
	.word	1342
	.byte	27
	.word	1380
	.byte	27
	.word	1398
	.byte	6,0,26
	.word	1418
	.byte	27
	.word	1459
	.byte	6,0,26
	.word	1479
	.byte	27
	.word	1530
	.byte	6,0,26
	.word	1550
	.byte	6,0,26
	.word	1777
	.byte	6,0,26
	.word	1811
	.byte	6,0,26
	.word	1853
	.byte	17,28
	.word	1811
	.byte	29
	.word	1851
	.byte	0,6,0,0,26
	.word	1894
	.byte	27
	.word	1927
	.byte	6,0,26
	.word	1967
	.byte	27
	.word	2008
	.byte	6,0,26
	.word	2027
	.byte	27
	.word	2082
	.byte	6,0,26
	.word	2101
	.byte	27
	.word	2141
	.byte	27
	.word	2158
	.byte	17,6,0,0,26
	.word	9782
	.byte	27
	.word	9810
	.byte	27
	.word	9824
	.byte	27
	.word	9842
	.byte	6,0,26
	.word	9860
	.byte	27
	.word	9883
	.byte	17,28
	.word	9904
	.byte	29
	.word	9942
	.byte	0,6,0,0,26
	.word	9904
	.byte	6,0,26
	.word	10283
	.byte	27
	.word	10311
	.byte	6,0,26
	.word	17089
	.byte	27
	.word	17118
	.byte	6,0,26
	.word	17133
	.byte	27
	.word	17176
	.byte	6,0,26
	.word	17191
	.byte	27
	.word	17236
	.byte	6,0,26
	.word	17251
	.byte	27
	.word	17299
	.byte	6,0,26
	.word	17655
	.byte	27
	.word	17699
	.byte	27
	.word	17712
	.byte	6,0,26
	.word	17848
	.byte	27
	.word	17880
	.byte	6,0,26
	.word	17895
	.byte	27
	.word	17947
	.byte	27
	.word	17960
	.byte	6,0,26
	.word	17978
	.byte	27
	.word	17997
	.byte	6,0,26
	.word	18025
	.byte	27
	.word	18061
	.byte	27
	.word	18074
	.byte	6,0,26
	.word	18090
	.byte	27
	.word	18127
	.byte	27
	.word	18140
	.byte	6,0,26
	.word	18156
	.byte	27
	.word	18176
	.byte	6,0,26
	.word	18191
	.byte	27
	.word	18216
	.byte	27
	.word	18229
	.byte	6,0,30
	.byte	'IfxI2c_configureAsMaster',0,12,180,3,17,1,1,1,1,5
	.byte	'i2c',0,12,180,3,51
	.word	17084
	.byte	0,30
	.byte	'IfxI2c_enableModule',0,12,208,3,17,1,1,1,1,5
	.byte	'i2c',0,12,208,3,46
	.word	17084
	.byte	0,31
	.byte	'IfxI2c_getBaudrate',0,12,227,3,20
	.word	213
	.byte	1,1,1,1,5
	.byte	'i2c',0,12,227,3,48
	.word	17084
	.byte	0,32,7,246,1,9,8,13
	.byte	'port',0
	.word	9674
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	592
	.byte	1,2,35,4,0,15,15,127,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,15,7,126,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32,14,56,15,16,13
	.byte	'module',0
	.word	17084
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	19016
	.byte	8,2,35,4,13
	.byte	'inSelect',0
	.word	19055
	.byte	1,2,35,12,13
	.byte	'outSelect',0
	.word	19173
	.byte	1,2,35,13,0,20
	.word	19390
	.byte	3
	.word	19462
	.byte	32,14,65,15,16,13
	.byte	'module',0
	.word	17084
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	19016
	.byte	8,2,35,4,13
	.byte	'inSelect',0
	.word	19055
	.byte	1,2,35,12,13
	.byte	'outSelect',0
	.word	19173
	.byte	1,2,35,13,0,20
	.word	19472
	.byte	3
	.word	19544
	.byte	15,7,151,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,30
	.byte	'IfxI2c_initSclSdaPin',0,12,238,3,17,1,1,1,1,5
	.byte	'scl',0,12,238,3,62
	.word	19467
	.byte	5
	.byte	'sda',0,12,238,3,91
	.word	19549
	.byte	5
	.byte	'padDriver',0,12,238,3,114
	.word	19554
	.byte	0,30
	.byte	'IfxI2c_releaseBus',0,12,243,3,17,1,1,1,1,5
	.byte	'i2c',0,12,243,3,44
	.word	17084
	.byte	0,30
	.byte	'IfxI2c_setBaudrate',0,12,133,4,17,1,1,1,1,5
	.byte	'i2c',0,12,133,4,45
	.word	17084
	.byte	5
	.byte	'baudrate',0,12,133,4,58
	.word	213
	.byte	0,30
	.byte	'IfxI2c_configureHighSpeedMode',0,12,145,4,17,1,1,1,1,5
	.byte	'i2c',0,12,145,4,56
	.word	17084
	.byte	0
.L219:
	.byte	15,16,141,2,9,1,16
	.byte	'IfxI2c_I2c_Status_ok',0,0,16
	.byte	'IfxI2c_I2c_Status_nak',0,1,16
	.byte	'IfxI2c_I2c_Status_al',0,2,16
	.byte	'IfxI2c_I2c_Status_busNotFree',0,3,16
	.byte	'IfxI2c_I2c_Status_error',0,4,0,32,16,160,2,9,12,13
	.byte	'i2c',0
	.word	17084
	.byte	4,2,35,0,13
	.byte	'busStatus',0
	.word	17730
	.byte	1,2,35,4,13
	.byte	'status',0
	.word	20207
	.byte	1,2,35,5,13
	.byte	'baudrate',0
	.word	213
	.byte	4,2,35,6,0
.L180:
	.byte	3
	.word	20341
	.byte	32,12,169,1,9,12,13
	.byte	'scl',0
	.word	19467
	.byte	4,2,35,0,13
	.byte	'sda',0
	.word	19549
	.byte	4,2,35,4,13
	.byte	'padDriver',0
	.word	19554
	.byte	1,2,35,8,0,20
	.word	20419
	.byte	3
	.word	20471
	.byte	15,12,118,9,1,16
	.byte	'IfxI2c_Mode_StandardAndFast',0,0,16
	.byte	'IfxI2c_Mode_HighSpeed',0,1,0,32,16,170,2,9,16,13
	.byte	'i2c',0
	.word	17084
	.byte	4,2,35,0,13
	.byte	'baudrate',0
	.word	213
	.byte	4,2,35,4,13
	.byte	'pins',0
	.word	20476
	.byte	4,2,35,8,13
	.byte	'mode',0
	.word	20481
	.byte	1,2,35,12,0
.L183:
	.byte	3
	.word	20541
.L232:
	.byte	15,12,80,9,1,16
	.byte	'IfxI2c_AddressMode_7Bit',0,0,16
	.byte	'IfxI2c_AddressMode_10Bit',0,1,0,32,16,180,2,9,8,13
	.byte	'i2c',0
	.word	20414
	.byte	4,2,35,0,13
	.byte	'deviceAddress',0
	.word	609
	.byte	2,2,35,4,13
	.byte	'addressMode',0
	.word	20612
	.byte	1,2,35,6,13
	.byte	'speedMode',0
	.word	20481
	.byte	1,2,35,7,0
.L188:
	.byte	3
	.word	20671
	.byte	32,16,190,2,9,8,13
	.byte	'i2c',0
	.word	20414
	.byte	4,2,35,0,13
	.byte	'deviceAddress',0
	.word	609
	.byte	2,2,35,4,13
	.byte	'addressMode',0
	.word	20612
	.byte	1,2,35,6,13
	.byte	'speedMode',0
	.word	20481
	.byte	1,2,35,7,0,20
	.word	20759
.L190:
	.byte	3
	.word	20842
.L193:
	.byte	3
	.word	20759
	.byte	20
	.word	20541
.L198:
	.byte	3
	.word	20857
	.byte	14
	.word	592
.L222:
	.byte	3
	.word	20867
.L234:
	.byte	18,4
	.word	592
	.byte	19,3,0
.L238:
	.byte	7
	.byte	'long int',0,4,5,10
	.byte	'_Ifx_CPU_ICR_Bits',0,17,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	440
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	8,0,2,35,0,0
.L308:
	.byte	12,17,204,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20898
	.byte	4,2,35,0,0,33
	.byte	'__wchar_t',0,18,1,1
	.word	18012
	.byte	33
	.byte	'__size_t',0,18,1,1
	.word	417
	.byte	33
	.byte	'__ptrdiff_t',0,18,1,1
	.word	433
	.byte	34,1,3
	.word	21109
	.byte	33
	.byte	'__codeptr',0,18,1,1
	.word	21111
	.byte	33
	.byte	'boolean',0,19,104,29
	.word	592
	.byte	33
	.byte	'uint8',0,19,108,29
	.word	592
	.byte	33
	.byte	'uint16',0,19,112,29
	.word	609
	.byte	33
	.byte	'uint32',0,19,116,29
	.word	1946
	.byte	33
	.byte	'uint64',0,19,121,29
	.word	299
	.byte	33
	.byte	'sint16',0,19,129,1,29
	.word	18012
	.byte	33
	.byte	'sint32',0,19,134,1,29
	.word	20886
	.byte	7
	.byte	'long long int',0,8,5,33
	.byte	'sint64',0,19,141,1,29
	.word	21241
	.byte	33
	.byte	'float32',0,19,170,1,29
	.word	213
	.byte	33
	.byte	'pvoid',0,15,54,28
	.word	331
	.byte	33
	.byte	'Ifx_TickTime',0,15,76,28
	.word	21241
	.byte	33
	.byte	'Ifx_SizeT',0,15,89,16
	.word	18012
	.byte	33
	.byte	'Ifx_Priority',0,15,100,16
	.word	609
	.byte	33
	.byte	'Ifx_RxSel',0,15,137,1,3
	.word	19055
	.byte	33
	.byte	'Ifx_UReg_8Bit',0,20,96,24
	.word	592
	.byte	33
	.byte	'Ifx_UReg_32Bit',0,20,98,24
	.word	417
	.byte	33
	.byte	'Ifx_SReg_32Bit',0,20,101,24
	.word	433
	.byte	33
	.byte	'Ifx_I2C_ACCEN0_Bits',0,13,102,3
	.word	15256
	.byte	33
	.byte	'Ifx_I2C_ACCEN1_Bits',0,13,108,3
	.word	15825
	.byte	33
	.byte	'Ifx_I2C_ADDRCFG_Bits',0,13,122,3
	.word	11250
	.byte	33
	.byte	'Ifx_I2C_BUSSTAT_Bits',0,13,130,1,3
	.word	11472
	.byte	33
	.byte	'Ifx_I2C_CLC_Bits',0,13,138,1,3
	.word	14903
	.byte	33
	.byte	'Ifx_I2C_CLC1_Bits',0,13,153,1,3
	.word	10326
	.byte	33
	.byte	'Ifx_I2C_ENDDCTRL_Bits',0,13,161,1,3
	.word	10805
	.byte	33
	.byte	'Ifx_I2C_ERRIRQSC_Bits',0,13,171,1,3
	.word	12947
	.byte	33
	.byte	'Ifx_I2C_ERRIRQSM_Bits',0,13,181,1,3
	.word	12611
	.byte	33
	.byte	'Ifx_I2C_ERRIRQSS_Bits',0,13,191,1,3
	.word	12779
	.byte	33
	.byte	'Ifx_I2C_FDIVCFG_Bits',0,13,200,1,3
	.word	10933
	.byte	33
	.byte	'Ifx_I2C_FDIVHIGHCFG_Bits',0,13,210,1,3
	.word	11078
	.byte	33
	.byte	'Ifx_I2C_FFSSTAT_Bits',0,13,217,1,3
	.word	12208
	.byte	33
	.byte	'Ifx_I2C_FIFOCFG_Bits',0,13,234,1,3
	.word	11591
	.byte	33
	.byte	'Ifx_I2C_GPCTL_Bits',0,13,241,1,3
	.word	15150
	.byte	33
	.byte	'Ifx_I2C_ICR_Bits',0,13,251,1,3
	.word	14337
	.byte	33
	.byte	'Ifx_I2C_ID_Bits',0,13,131,2,3
	.word	10571
	.byte	33
	.byte	'Ifx_I2C_IMSC_Bits',0,13,143,2,3
	.word	13910
	.byte	33
	.byte	'Ifx_I2C_ISR_Bits',0,13,155,2,3
	.word	14506
	.byte	33
	.byte	'Ifx_I2C_KRST0_Bits',0,13,163,2,3
	.word	15914
	.byte	33
	.byte	'Ifx_I2C_KRST1_Bits',0,13,170,2,3
	.word	16037
	.byte	33
	.byte	'Ifx_I2C_KRSTCLR_Bits',0,13,177,2,3
	.word	16141
	.byte	33
	.byte	'Ifx_I2C_MIS_Bits',0,13,189,2,3
	.word	14124
	.byte	33
	.byte	'Ifx_I2C_MODID_Bits',0,13,197,2,3
	.word	15022
	.byte	33
	.byte	'Ifx_I2C_MRPSCTRL_Bits',0,13,204,2,3
	.word	11885
	.byte	33
	.byte	'Ifx_I2C_PIRQSC_Bits',0,13,217,2,3
	.word	13503
	.byte	33
	.byte	'Ifx_I2C_PIRQSM_Bits',0,13,230,2,3
	.word	13115
	.byte	33
	.byte	'Ifx_I2C_PIRQSS_Bits',0,13,243,2,3
	.word	13309
	.byte	33
	.byte	'Ifx_I2C_RIS_Bits',0,13,255,2,3
	.word	13697
	.byte	33
	.byte	'Ifx_I2C_RPSSTAT_Bits',0,13,134,3,3
	.word	11994
	.byte	33
	.byte	'Ifx_I2C_RUNCTRL_Bits',0,13,141,3,3
	.word	10699
	.byte	33
	.byte	'Ifx_I2C_RXD_Bits',0,13,147,3,3
	.word	14823
	.byte	33
	.byte	'Ifx_I2C_TIMCFG_Bits',0,13,161,3,3
	.word	12314
	.byte	33
	.byte	'Ifx_I2C_TPSCTRL_Bits',0,13,168,3,3
	.word	12101
	.byte	33
	.byte	'Ifx_I2C_TXD_Bits',0,13,174,3,3
	.word	14732
	.byte	33
	.byte	'Ifx_I2C_ACCEN0',0,13,187,3,3
	.word	15785
	.byte	33
	.byte	'Ifx_I2C_ACCEN1',0,13,195,3,3
	.word	15874
	.byte	33
	.byte	'Ifx_I2C_ADDRCFG',0,13,203,3,3
	.word	11432
	.byte	33
	.byte	'Ifx_I2C_BUSSTAT',0,13,211,3,3
	.word	11551
	.byte	33
	.byte	'Ifx_I2C_CLC',0,13,219,3,3
	.word	14982
	.byte	33
	.byte	'Ifx_I2C_CLC1',0,13,227,3,3
	.word	10531
	.byte	33
	.byte	'Ifx_I2C_ENDDCTRL',0,13,235,3,3
	.word	10893
	.byte	33
	.byte	'Ifx_I2C_ERRIRQSC',0,13,243,3,3
	.word	13075
	.byte	33
	.byte	'Ifx_I2C_ERRIRQSM',0,13,251,3,3
	.word	12739
	.byte	33
	.byte	'Ifx_I2C_ERRIRQSS',0,13,131,4,3
	.word	12907
	.byte	33
	.byte	'Ifx_I2C_FDIVCFG',0,13,139,4,3
	.word	11038
	.byte	33
	.byte	'Ifx_I2C_FDIVHIGHCFG',0,13,147,4,3
	.word	11210
	.byte	33
	.byte	'Ifx_I2C_FFSSTAT',0,13,155,4,3
	.word	12274
	.byte	33
	.byte	'Ifx_I2C_FIFOCFG',0,13,163,4,3
	.word	11845
	.byte	33
	.byte	'Ifx_I2C_GPCTL',0,13,171,4,3
	.word	15216
	.byte	33
	.byte	'Ifx_I2C_ICR',0,13,179,4,3
	.word	14466
	.byte	33
	.byte	'Ifx_I2C_ID',0,13,187,4,3
	.word	10659
	.byte	33
	.byte	'Ifx_I2C_IMSC',0,13,195,4,3
	.word	14084
	.byte	33
	.byte	'Ifx_I2C_ISR',0,13,203,4,3
	.word	14679
	.byte	33
	.byte	'Ifx_I2C_KRST0',0,13,211,4,3
	.word	15997
	.byte	33
	.byte	'Ifx_I2C_KRST1',0,13,219,4,3
	.word	16101
	.byte	33
	.byte	'Ifx_I2C_KRSTCLR',0,13,227,4,3
	.word	16207
	.byte	33
	.byte	'Ifx_I2C_MIS',0,13,235,4,3
	.word	14297
	.byte	33
	.byte	'Ifx_I2C_MODID',0,13,243,4,3
	.word	15110
	.byte	33
	.byte	'Ifx_I2C_MRPSCTRL',0,13,251,4,3
	.word	11954
	.byte	33
	.byte	'Ifx_I2C_PIRQSC',0,13,131,5,3
	.word	13657
	.byte	33
	.byte	'Ifx_I2C_PIRQSM',0,13,139,5,3
	.word	13269
	.byte	33
	.byte	'Ifx_I2C_PIRQSS',0,13,147,5,3
	.word	13463
	.byte	33
	.byte	'Ifx_I2C_RIS',0,13,155,5,3
	.word	13870
	.byte	33
	.byte	'Ifx_I2C_RPSSTAT',0,13,163,5,3
	.word	12061
	.byte	33
	.byte	'Ifx_I2C_RUNCTRL',0,13,171,5,3
	.word	10765
	.byte	33
	.byte	'Ifx_I2C_RXD',0,13,179,5,3
	.word	14863
	.byte	33
	.byte	'Ifx_I2C_TIMCFG',0,13,187,5,3
	.word	12562
	.byte	33
	.byte	'Ifx_I2C_TPSCTRL',0,13,195,5,3
	.word	12168
	.byte	33
	.byte	'Ifx_I2C_TXD',0,13,203,5,3
	.word	14772
	.byte	14
	.word	16258
	.byte	33
	.byte	'Ifx_I2C',0,13,134,6,3
	.word	23286
	.byte	15,21,162,11,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,33
	.byte	'IfxScu_WDTCON1_IR',0,21,167,11,3
	.word	23308
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	23430
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	23989
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	24068
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	24628
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	417
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	24709
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	592
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	592
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	592
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	592
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	592
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	592
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	592
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	592
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	24926
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	592
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	592
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	592
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	592
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	592
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	592
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	25199
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	25525
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	25627
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	592
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	417
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	592
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	25729
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	592
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	417
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	26003
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	609
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	417
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	592
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	26372
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	592
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	592
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	417
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	26552
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	26721
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	26821
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	26921
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	27021
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	592
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	592
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	592
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	592
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	592
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	27121
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	609
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	609
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	27324
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	609
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	417
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	27556
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	440
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	27658
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	27786
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	592
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	592
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	417
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	592
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	592
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	27975
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	592
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	592
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	28339
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	417
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	28778
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	28989
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	609
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	609
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	29165
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	592
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	592
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	29359
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	609
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	417
	.byte	23,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	29494
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	29630
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	592
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	592
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	592
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	592
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	29741
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	609
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	592
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	609
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	592
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	29959
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	8,0,2,35,3,0,33
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	30122
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	30458
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	592
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	592
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	30565
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	31017
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	592
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	31116
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	417
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	609
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	31266
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	417
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	31504
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	609
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	417
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	31665
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	31771
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	609
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	609
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	31857
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	609
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	609
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	32025
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	609
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	32193
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	592
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	609
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	32507
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	609
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	609
	.byte	14,0,2,35,2,0,33
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	32618
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	592
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	592
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	592
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	592
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	592
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	32776
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	33187
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	592
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	33288
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	33606
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	33793
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	417
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	33904
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	417
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	34037
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	609
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	592
	.byte	5,0,2,35,3,0,33
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	34240
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	592
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	34480
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	417
	.byte	25,0,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	34624
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	34846
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	34982
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	35118
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	35254
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	35390
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	417
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	35526
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	609
	.byte	12,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	35662
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	592
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	417
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	592
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	35934
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	609
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	592
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	36179
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	609
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	609
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	592
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	36567
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	592
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	592
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	36685
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	592
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	592
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	609
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	592
	.byte	6,0,2,35,3,0,33
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	36928
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	592
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	592
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	592
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	592
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	592
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	592
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	592
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	592
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	609
	.byte	10,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	37195
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	609
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	37454
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	37759
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	592
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	37840
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	440
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	38389
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	417
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	38519
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	609
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	38710
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	609
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	38888
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	39039
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	39111
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	39183
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	39255
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	39327
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	39399
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	592
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	592
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	39471
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	609
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	39800
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	39920
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	592
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	40090
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	609
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	592
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	592
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	592
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	592
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	40353
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	417
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	40632
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	609
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	40736
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	592
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	417
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	40842
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	41065
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	592
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	41213
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	41701
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	41998
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	42146
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	456
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	631
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	897
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	440
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	42396
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	42522
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	592
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	42774
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23430
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	42993
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23989
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	43058
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24068
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	43123
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24628
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	43188
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24709
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	43253
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24926
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	43318
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25199
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	43383
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25525
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	43448
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25627
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	43514
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25729
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	43580
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26003
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	43645
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26372
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	43710
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26552
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	43775
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26721
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	43840
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26821
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	43905
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26921
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	43970
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27021
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	44035
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27121
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	44100
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27324
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	44164
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27556
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	44229
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27658
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	44295
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27786
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	44359
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27975
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	44423
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28339
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	44485
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28778
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	44549
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28989
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	44611
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29165
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	44673
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29359
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	44735
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29494
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	44798
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29630
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	44871
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29741
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	44936
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29959
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	45000
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30122
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	45061
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30458
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	45122
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30565
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	45182
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31017
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	45244
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31116
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	45304
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31266
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	45366
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31504
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	45434
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31665
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	45502
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31771
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	45570
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31857
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	45638
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32025
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	45703
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32193
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	45768
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32507
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	45833
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32618
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	45896
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32776
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	45957
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33187
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	46021
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33288
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	46082
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33606
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	46146
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33793
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	46213
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33904
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	46276
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34037
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	46337
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34240
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	46399
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34480
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	46467
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34624
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	46535
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34846
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	46603
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34982
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	46667
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35118
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	46731
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35254
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	46795
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35390
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	46859
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35526
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	46923
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35662
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	46987
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35934
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	47052
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36179
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	47117
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36567
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	47183
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36685
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	47249
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36928
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	47315
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37195
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	47381
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37454
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	47445
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37759
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	47510
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37840
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	47575
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38389
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	47640
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38519
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	47705
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38710
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	47770
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38888
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	47833
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39039
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	47896
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39111
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	47960
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39183
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	48024
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39255
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	48088
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39327
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	48152
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39399
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	48216
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39471
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	48280
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39800
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	48344
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39920
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	48410
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40090
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	48476
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40353
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	48540
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40632
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	48608
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40736
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	48676
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40842
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	48744
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41065
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	48812
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41213
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	48877
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41701
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	48943
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41998
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	49009
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42146
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	49074
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	552
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	857
	.byte	33
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1088
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42396
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	49225
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42522
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	49292
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42774
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	49359
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	44798
	.byte	4,2,35,0,0,14
	.word	49424
	.byte	33
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	49465
	.byte	14
	.word	1128
	.byte	33
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	49495
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	49225
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	49292
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	49359
	.byte	4,2,35,8,0,14
	.word	49524
	.byte	33
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	49585
	.byte	18,8
	.word	49424
	.byte	19,1,0,14
	.word	49612
	.byte	18,16
	.word	592
	.byte	19,15,0,18,20
	.word	592
	.byte	19,19,0,18,36
	.word	592
	.byte	19,35,0,18,16
	.word	44423
	.byte	19,3,0,18,16
	.word	45182
	.byte	19,3,0,18,72
	.word	1128
	.byte	19,5,0,14
	.word	49671
	.byte	14
	.word	49524
	.byte	18,176,2
	.word	592
	.byte	19,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	5004
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	45122
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3184
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	45957
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	48744
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	48540
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	48608
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	48676
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	46535
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	46399
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	46467
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	43318
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	43383
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	45000
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	44936
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	43580
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	43645
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	43710
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	43775
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	47575
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3184
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	47381
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	43253
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	48410
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	47445
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	47510
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3184
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	49621
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	44871
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	48476
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	43840
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	43905
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	43970
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	44035
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	43448
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	43514
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3184
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	46276
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	45304
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	46021
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	45896
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	45244
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	49626
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	48280
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	47833
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	46603
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	46667
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	46731
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	46795
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	46859
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	46923
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	3184
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	46987
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	47052
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	49626
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	44673
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	44735
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	44229
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	44164
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	49635
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	48943
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	49074
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	49009
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	48812
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	48877
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	45638
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	45703
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	45768
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	44100
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	45833
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	3184
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	48344
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	49635
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	45366
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	45434
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	45502
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	45570
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	49626
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	47896
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	47960
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	46213
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5004
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	47117
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	47183
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	47249
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	47315
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4375
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	48024
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	48088
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	48152
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	48216
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	49626
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	46146
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	46082
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	49644
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	44485
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	49653
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	44549
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	45061
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	46337
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	49662
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	49626
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	49680
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	5004
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	44295
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	44359
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	44611
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	49685
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	47640
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	47705
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	47770
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	49690
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	43188
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	43123
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	43058
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	42993
	.byte	4,3,35,252,7,0,14
	.word	49701
	.byte	33
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	51822
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,17,68,16,4,11
	.byte	'ADDR',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_A_Bits',0,17,71,3
	.word	51844
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,17,74,16,4,11
	.byte	'VSS',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_BIV_Bits',0,17,78,3
	.word	51905
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,17,81,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	440
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	440
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	4,0,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,17,87,3
	.word	51984
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,17,90,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	440
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	4,0,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,17,95,3
	.word	52122
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,17,98,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	440
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	440
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	440
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,17,106,3
	.word	52243
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,17,109,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_BTV_Bits',0,17,113,3
	.word	52419
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,17,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	440
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_CCNT_Bits',0,17,120,3
	.word	52505
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,17,123,16,4,11
	.byte	'CM',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	440
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	440
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	440
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	21,0,2,35,0,0,33
	.byte	'Ifx_CPU_CCTRL_Bits',0,17,131,1,3
	.word	52594
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,17,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_COMPAT_Bits',0,17,140,1,3
	.word	52741
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,17,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CORE_ID_Bits',0,17,147,1,3
	.word	52870
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,17,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_L_Bits',0,17,154,1,3
	.word	52970
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,17,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_U_Bits',0,17,161,1,3
	.word	53065
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,17,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	440
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPU_ID_Bits',0,17,169,1,3
	.word	53160
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,17,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	440
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	440
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_CPU_CPXE_Bits',0,17,176,1,3
	.word	53270
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,17,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	440
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_CREVT_Bits',0,17,187,1,3
	.word	53362
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,17,190,1,16,4,11
	.byte	'CID',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_CUS_ID_Bits',0,17,194,1,3
	.word	53516
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,17,197,1,16,4,11
	.byte	'DATA',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_D_Bits',0,17,200,1,3
	.word	53610
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,17,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DATR_Bits',0,17,214,1,3
	.word	53673
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,17,217,1,16,4,11
	.byte	'DE',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	440
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	440
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	19,0,2,35,0,0,33
	.byte	'Ifx_CPU_DBGSR_Bits',0,17,228,1,3
	.word	53899
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,17,231,1,16,4,11
	.byte	'DTA',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_DBGTCR_Bits',0,17,235,1,3
	.word	54114
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,17,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCON0_Bits',0,17,243,1,3
	.word	54208
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,17,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCON2_Bits',0,17,250,1,3
	.word	54324
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,17,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	440
	.byte	26,0,2,35,0,0,33
	.byte	'Ifx_CPU_DCX_Bits',0,17,129,2,3
	.word	54425
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,17,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_DEADD_Bits',0,17,135,2,3
	.word	54518
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,17,138,2,16,4,11
	.byte	'TA',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_DIEAR_Bits',0,17,141,2,3
	.word	54598
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,17,144,2,16,4,11
	.byte	'IED',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	440
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	440
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_DIETR_Bits',0,17,159,2,3
	.word	54667
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,17,162,2,16,4,11
	.byte	'EN0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,17,196,2,3
	.word	54951
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,17,199,2,16,4,11
	.byte	'EN0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,17,233,2,3
	.word	55542
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,17,236,2,16,4,11
	.byte	'EN32',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,17,142,3,3
	.word	56133
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,17,145,3,16,4,11
	.byte	'EN32',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,17,179,3,3
	.word	56734
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,17,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,17,186,3,3
	.word	57335
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,17,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,17,193,3,3
	.word	57450
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,17,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_DMS_Bits',0,17,200,3,3
	.word	57565
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,17,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	440
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	14,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPRE_Bits',0,17,207,3,3
	.word	57658
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,17,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	440
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_L_Bits',0,17,214,3,3
	.word	57750
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,17,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	440
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_U_Bits',0,17,221,3,3
	.word	57845
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,17,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	440
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	14,0,2,35,0,0,33
	.byte	'Ifx_CPU_DPWE_Bits',0,17,228,3,3
	.word	57940
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,17,231,3,16,4,11
	.byte	'SRE',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	440
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	440
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_DSTR_Bits',0,17,250,3,3
	.word	58032
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,17,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	440
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_EXEVT_Bits',0,17,133,4,3
	.word	58371
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,17,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_FCX_Bits',0,17,141,4,3
	.word	58525
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,17,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	440
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	440
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	440
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	440
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	440
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	440
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,17,154,4,3
	.word	58631
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,17,157,4,16,4,11
	.byte	'STALL',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	440
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	440
	.byte	6,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,17,165,4,3
	.word	58849
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,17,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	440
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	440
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	440
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	440
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	440
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	440
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	440
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	440
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	440
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	440
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,17,182,4,3
	.word	59040
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,17,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	440
	.byte	22,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,17,198,4,3
	.word	59340
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,17,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,17,205,4,3
	.word	59645
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,17,208,4,16,4,11
	.byte	'TST',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	440
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	440
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	440
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,17,227,4,3
	.word	59746
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,17,230,4,16,4,11
	.byte	'OPC',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,17,237,4,3
	.word	60095
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,17,240,4,16,4,11
	.byte	'PC',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,17,243,4,3
	.word	60255
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,17,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,17,249,4,3
	.word	60336
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,17,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,17,255,4,3
	.word	60423
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,17,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,17,133,5,3
	.word	60510
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,17,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	440
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_ICNT_Bits',0,17,140,5,3
	.word	60597
	.byte	33
	.byte	'Ifx_CPU_ICR_Bits',0,17,150,5,3
	.word	20898
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,17,153,5,16,4,11
	.byte	'ISP',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_ISP_Bits',0,17,156,5,3
	.word	60714
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,17,159,5,16,4,11
	.byte	'RST',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	440
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	29,0,2,35,0,0,33
	.byte	'Ifx_CPU_KRST0_Bits',0,17,164,5,3
	.word	60780
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,17,167,5,16,4,11
	.byte	'RST',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_KRST1_Bits',0,17,171,5,3
	.word	60891
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,17,174,5,16,4,11
	.byte	'CLR',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,17,178,5,3
	.word	60983
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,17,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_LCX_Bits',0,17,186,5,3
	.word	61079
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,17,189,5,16,4,11
	.byte	'EN0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,17,223,5,3
	.word	61185
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,17,226,5,16,4,11
	.byte	'EN32',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,17,132,6,3
	.word	61768
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,17,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	440
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M1CNT_Bits',0,17,139,6,3
	.word	62361
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,17,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	440
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M2CNT_Bits',0,17,146,6,3
	.word	62454
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,17,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	440
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_M3CNT_Bits',0,17,153,6,3
	.word	62547
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,17,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_OSEL_Bits',0,17,159,6,3
	.word	62640
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,17,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	440
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_CPU_PC_Bits',0,17,166,6,3
	.word	62713
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,17,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON0_Bits',0,17,174,6,3
	.word	62798
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,17,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON1_Bits',0,17,182,6,3
	.word	62914
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,17,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCON2_Bits',0,17,189,6,3
	.word	63025
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,17,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	440
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	440
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_CPU_PCXI_Bits',0,17,200,6,3
	.word	63126
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,17,203,6,16,4,11
	.byte	'TA',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_PIEAR_Bits',0,17,206,6,3
	.word	63279
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,17,209,6,16,4,11
	.byte	'IED',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	440
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	440
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_PIETR_Bits',0,17,224,6,3
	.word	63348
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,17,227,6,16,4,11
	.byte	'DAC',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA0_Bits',0,17,231,6,3
	.word	63632
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,17,234,6,16,4,11
	.byte	'CAC',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA1_Bits',0,17,238,6,3
	.word	63723
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,17,241,6,16,4,11
	.byte	'PSI',0,4
	.word	440
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_CPU_PMA2_Bits',0,17,245,6,3
	.word	63814
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,17,248,6,16,4,11
	.byte	'FRE',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	17,0,2,35,0,0,33
	.byte	'Ifx_CPU_PSTR_Bits',0,17,130,7,3
	.word	63905
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,17,133,7,16,4,11
	.byte	'CDC',0,4
	.word	440
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	440
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	440
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	440
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_PSW_Bits',0,17,145,7,3
	.word	64108
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,17,148,7,16,4,11
	.byte	'EN0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,17,182,7,3
	.word	64313
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,17,185,7,16,4,11
	.byte	'EN32',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,17,219,7,3
	.word	64880
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,17,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_LA_Bits',0,17,226,7,3
	.word	65457
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,17,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_UA_Bits',0,17,233,7,3
	.word	65552
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,17,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	440
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	440
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SEGEN_Bits',0,17,242,7,3
	.word	65647
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,17,245,7,16,4,11
	.byte	'EN0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,17,151,8,3
	.word	65775
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,17,154,8,16,4,11
	.byte	'EN32',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,17,188,8,3
	.word	66358
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,17,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_SMACON_Bits',0,17,196,8,3
	.word	66951
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,17,199,8,16,4,11
	.byte	'EN0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,17,233,8,3
	.word	67069
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,17,236,8,16,4,11
	.byte	'EN32',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,17,142,9,3
	.word	67658
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,17,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	440
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_SWEVT_Bits',0,17,153,9,3
	.word	68257
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,17,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	440
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_CPU_SYSCON_Bits',0,17,171,9,3
	.word	68411
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,17,174,9,16,4,11
	.byte	'ASI',0,4
	.word	440
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	440
	.byte	27,0,2,35,0,0,33
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,17,178,9,3
	.word	68710
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,17,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	440
	.byte	15,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_CON_Bits',0,17,189,9,3
	.word	68808
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,17,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,17,196,9,3
	.word	68980
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,17,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	440
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,17,203,9,3
	.word	69109
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,17,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	440
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	20,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,17,211,9,3
	.word	69239
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,17,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	440
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,17,218,9,3
	.word	69391
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,17,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	440
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	8,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,17,226,9,3
	.word	69518
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,17,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	440
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,17,233,9,3
	.word	69667
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,17,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	440
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	440
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	440
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	440
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,17,246,9,3
	.word	69781
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,17,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,17,252,9,3
	.word	70025
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,17,255,9,16,4,11
	.byte	'T0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,17,138,10,3
	.word	70105
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,17,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	440
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_CPU_TR_ADR_Bits',0,17,144,10,3
	.word	70300
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,17,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	440
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	440
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	440
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	440
	.byte	3,0,2,35,0,0,33
	.byte	'Ifx_CPU_TR_EVT_Bits',0,17,164,10,3
	.word	70373
	.byte	12,17,172,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51844
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_A',0,17,177,10,3
	.word	70691
	.byte	12,17,180,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51905
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BIV',0,17,185,10,3
	.word	70750
	.byte	12,17,188,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51984
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OMASK',0,17,193,10,3
	.word	70811
	.byte	12,17,196,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52122
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_OTAR',0,17,201,10,3
	.word	70878
	.byte	12,17,204,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52243
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BLK_RABR',0,17,209,10,3
	.word	70944
	.byte	12,17,212,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52419
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_BTV',0,17,217,10,3
	.word	71010
	.byte	12,17,220,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52505
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CCNT',0,17,225,10,3
	.word	71071
	.byte	12,17,228,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52594
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CCTRL',0,17,233,10,3
	.word	71133
	.byte	12,17,236,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52741
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_COMPAT',0,17,241,10,3
	.word	71196
	.byte	12,17,244,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52870
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CORE_ID',0,17,249,10,3
	.word	71260
	.byte	12,17,252,10,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52970
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_L',0,17,129,11,3
	.word	71325
	.byte	12,17,132,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53065
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPR_U',0,17,137,11,3
	.word	71388
	.byte	12,17,140,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53160
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPU_ID',0,17,145,11,3
	.word	71451
	.byte	12,17,148,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53270
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CPXE',0,17,153,11,3
	.word	71515
	.byte	12,17,156,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53362
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CREVT',0,17,161,11,3
	.word	71577
	.byte	12,17,164,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53516
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_CUS_ID',0,17,169,11,3
	.word	71640
	.byte	12,17,172,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53610
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_D',0,17,177,11,3
	.word	71704
	.byte	12,17,180,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53673
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DATR',0,17,185,11,3
	.word	71763
	.byte	12,17,188,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53899
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DBGSR',0,17,193,11,3
	.word	71825
	.byte	12,17,196,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54114
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DBGTCR',0,17,201,11,3
	.word	71888
	.byte	12,17,204,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54208
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCON0',0,17,209,11,3
	.word	71952
	.byte	12,17,212,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54324
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCON2',0,17,217,11,3
	.word	72015
	.byte	12,17,220,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54425
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DCX',0,17,225,11,3
	.word	72078
	.byte	12,17,228,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54518
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DEADD',0,17,233,11,3
	.word	72139
	.byte	12,17,236,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54598
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DIEAR',0,17,241,11,3
	.word	72202
	.byte	12,17,244,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54667
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DIETR',0,17,249,11,3
	.word	72265
	.byte	12,17,252,11,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54951
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,17,129,12,3
	.word	72328
	.byte	12,17,132,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55542
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,17,137,12,3
	.word	72408
	.byte	12,17,140,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56133
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,17,145,12,3
	.word	72488
	.byte	12,17,148,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56734
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,17,153,12,3
	.word	72568
	.byte	12,17,156,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57335
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,17,161,12,3
	.word	72648
	.byte	12,17,164,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57450
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,17,169,12,3
	.word	72722
	.byte	12,17,172,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57565
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DMS',0,17,177,12,3
	.word	72796
	.byte	12,17,180,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57658
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPRE',0,17,185,12,3
	.word	72857
	.byte	12,17,188,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57750
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_L',0,17,193,12,3
	.word	72919
	.byte	12,17,196,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57845
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPR_U',0,17,201,12,3
	.word	72982
	.byte	12,17,204,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57940
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DPWE',0,17,209,12,3
	.word	73045
	.byte	12,17,212,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58032
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_DSTR',0,17,217,12,3
	.word	73107
	.byte	12,17,220,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58371
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_EXEVT',0,17,225,12,3
	.word	73169
	.byte	12,17,228,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58525
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FCX',0,17,233,12,3
	.word	73232
	.byte	12,17,236,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58631
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON0',0,17,241,12,3
	.word	73293
	.byte	12,17,244,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58849
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON1',0,17,249,12,3
	.word	73360
	.byte	12,17,252,12,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59040
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON2',0,17,129,13,3
	.word	73427
	.byte	12,17,132,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59340
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON3',0,17,137,13,3
	.word	73494
	.byte	12,17,140,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59645
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FLASHCON4',0,17,145,13,3
	.word	73561
	.byte	12,17,148,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59746
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,17,153,13,3
	.word	73628
	.byte	12,17,156,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60095
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,17,161,13,3
	.word	73698
	.byte	12,17,164,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60255
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,17,169,13,3
	.word	73768
	.byte	12,17,172,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60336
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,17,177,13,3
	.word	73837
	.byte	12,17,180,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60423
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,17,185,13,3
	.word	73908
	.byte	12,17,188,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60510
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,17,193,13,3
	.word	73979
	.byte	12,17,196,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60597
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ICNT',0,17,201,13,3
	.word	74050
	.byte	33
	.byte	'Ifx_CPU_ICR',0,17,209,13,3
	.word	21014
	.byte	12,17,212,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60714
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_ISP',0,17,217,13,3
	.word	74133
	.byte	12,17,220,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60780
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_KRST0',0,17,225,13,3
	.word	74194
	.byte	12,17,228,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60891
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_KRST1',0,17,233,13,3
	.word	74257
	.byte	12,17,236,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60983
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_KRSTCLR',0,17,241,13,3
	.word	74320
	.byte	12,17,244,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61079
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LCX',0,17,249,13,3
	.word	74385
	.byte	12,17,252,13,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61185
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,17,129,14,3
	.word	74446
	.byte	12,17,132,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61768
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,17,137,14,3
	.word	74522
	.byte	12,17,140,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62361
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M1CNT',0,17,145,14,3
	.word	74598
	.byte	12,17,148,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62454
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M2CNT',0,17,153,14,3
	.word	74661
	.byte	12,17,156,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62547
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_M3CNT',0,17,161,14,3
	.word	74724
	.byte	12,17,164,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62640
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_OSEL',0,17,169,14,3
	.word	74787
	.byte	12,17,172,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62713
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PC',0,17,177,14,3
	.word	74849
	.byte	12,17,180,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62798
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON0',0,17,185,14,3
	.word	74909
	.byte	12,17,188,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62914
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON1',0,17,193,14,3
	.word	74972
	.byte	12,17,196,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63025
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCON2',0,17,201,14,3
	.word	75035
	.byte	12,17,204,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63126
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PCXI',0,17,209,14,3
	.word	75098
	.byte	12,17,212,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63279
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PIEAR',0,17,217,14,3
	.word	75160
	.byte	12,17,220,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63348
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PIETR',0,17,225,14,3
	.word	75223
	.byte	12,17,228,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63632
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA0',0,17,233,14,3
	.word	75286
	.byte	12,17,236,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63723
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA1',0,17,241,14,3
	.word	75348
	.byte	12,17,244,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63814
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PMA2',0,17,249,14,3
	.word	75410
	.byte	12,17,252,14,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63905
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PSTR',0,17,129,15,3
	.word	75472
	.byte	12,17,132,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64108
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_PSW',0,17,137,15,3
	.word	75534
	.byte	12,17,140,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64313
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENA',0,17,145,15,3
	.word	75595
	.byte	12,17,148,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64880
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_ACCENB',0,17,153,15,3
	.word	75663
	.byte	12,17,156,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65457
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_LA',0,17,161,15,3
	.word	75731
	.byte	12,17,164,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65552
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_RGN_UA',0,17,169,15,3
	.word	75795
	.byte	12,17,172,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65647
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SEGEN',0,17,177,15,3
	.word	75859
	.byte	12,17,180,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65775
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,17,185,15,3
	.word	75922
	.byte	12,17,188,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66358
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,17,193,15,3
	.word	75998
	.byte	12,17,196,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66951
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SMACON',0,17,201,15,3
	.word	76074
	.byte	12,17,204,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67069
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,17,209,15,3
	.word	76138
	.byte	12,17,212,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67658
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,17,217,15,3
	.word	76217
	.byte	12,17,220,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68257
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SWEVT',0,17,225,15,3
	.word	76296
	.byte	12,17,228,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68411
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_SYSCON',0,17,233,15,3
	.word	76359
	.byte	12,17,236,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68710
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TASK_ASI',0,17,241,15,3
	.word	76423
	.byte	12,17,244,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68808
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_CON',0,17,249,15,3
	.word	76489
	.byte	12,17,252,15,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68980
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,17,129,16,3
	.word	76554
	.byte	12,17,132,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69109
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,17,137,16,3
	.word	76630
	.byte	12,17,140,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69239
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,17,145,16,3
	.word	76708
	.byte	12,17,148,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69391
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,17,153,16,3
	.word	76786
	.byte	12,17,156,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69518
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,17,161,16,3
	.word	76863
	.byte	12,17,164,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69667
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,17,169,16,3
	.word	76940
	.byte	12,17,172,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69781
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,17,177,16,3
	.word	77011
	.byte	12,17,180,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70025
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TPS_TIMER',0,17,185,16,3
	.word	77083
	.byte	12,17,188,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70105
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TRIG_ACC',0,17,193,16,3
	.word	77150
	.byte	12,17,196,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70300
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TR_ADR',0,17,201,16,3
	.word	77216
	.byte	12,17,204,16,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70373
	.byte	4,2,35,0,0,33
	.byte	'Ifx_CPU_TR_EVT',0,17,209,16,3
	.word	77280
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,17,221,16,25,16,13
	.byte	'LA',0
	.word	75731
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	75795
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	75595
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	75663
	.byte	4,2,35,12,0,14
	.word	77344
	.byte	33
	.byte	'Ifx_CPU_RGN',0,17,227,16,3
	.word	77420
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,17,242,16,25,12,13
	.byte	'RABR',0
	.word	70944
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	70878
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	70811
	.byte	4,2,35,8,0,14
	.word	77446
	.byte	33
	.byte	'Ifx_CPU_BLK',0,17,247,16,3
	.word	77509
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,17,134,17,25,28,13
	.byte	'CON',0
	.word	73628
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	73768
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	73698
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3184
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	73837
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	73908
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	73979
	.byte	4,2,35,24,0,14
	.word	77535
	.byte	33
	.byte	'Ifx_CPU_FPU_TRAP',0,17,143,17,3
	.word	77660
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,17,158,17,25,8,13
	.byte	'L',0
	.word	72919
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	72982
	.byte	4,2,35,4,0,14
	.word	77691
	.byte	33
	.byte	'Ifx_CPU_DPR',0,17,162,17,3
	.word	77733
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,17,177,17,25,8,13
	.byte	'L',0
	.word	71325
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	71388
	.byte	4,2,35,4,0,14
	.word	77759
	.byte	33
	.byte	'Ifx_CPU_CPR',0,17,181,17,3
	.word	77801
	.byte	18,12
	.word	77083
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,17,196,17,25,16,13
	.byte	'CON',0
	.word	76489
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	77827
	.byte	12,2,35,4,0,14
	.word	77836
	.byte	33
	.byte	'Ifx_CPU_TPS',0,17,200,17,3
	.word	77884
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,17,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	76708
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	76630
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	76863
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	76786
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	76554
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	77011
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	76940
	.byte	4,2,35,24,0,14
	.word	77910
	.byte	33
	.byte	'Ifx_CPU_TPS_EXTIM',0,17,224,17,3
	.word	78059
	.byte	10
	.byte	'_Ifx_CPU_TR',0,17,239,17,25,8,13
	.byte	'EVT',0
	.word	77280
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	77216
	.byte	4,2,35,4,0,14
	.word	78091
	.byte	33
	.byte	'Ifx_CPU_TR',0,17,243,17,3
	.word	78136
	.byte	18,128,34
	.word	592
	.byte	19,255,33,0,18,236,253,2
	.word	592
	.byte	19,235,253,2,0,18,244,31
	.word	592
	.byte	19,243,31,0,18,128,1
	.word	77344
	.byte	19,7,0,14
	.word	78196
	.byte	18,232,1
	.word	592
	.byte	19,231,1,0,18,128,48
	.word	592
	.byte	19,255,47,0,18,128,3
	.word	77446
	.byte	19,31,0,14
	.word	78233
	.byte	18,160,39
	.word	592
	.byte	19,159,39,0,18,208,223,1
	.word	592
	.byte	19,207,223,1,0,18,248,1
	.word	592
	.byte	19,247,1,0,18,244,29
	.word	592
	.byte	19,243,29,0,18,188,3
	.word	592
	.byte	19,187,3,0,18,232,3
	.word	592
	.byte	19,231,3,0,18,252,23
	.word	592
	.byte	19,251,23,0,14
	.word	77535
	.byte	18,228,63
	.word	592
	.byte	19,227,63,0,18,144,1
	.word	77691
	.byte	19,17,0,14
	.word	78343
	.byte	18,240,30
	.word	592
	.byte	19,239,30,0,18,80
	.word	77759
	.byte	19,9,0,14
	.word	78369
	.byte	18,176,31
	.word	592
	.byte	19,175,31,0,18,152,7
	.word	592
	.byte	19,151,7,0,14
	.word	77836
	.byte	18,48
	.word	592
	.byte	19,47,0,14
	.word	77910
	.byte	18,164,23
	.word	592
	.byte	19,163,23,0,18,64
	.word	78091
	.byte	19,7,0,14
	.word	78435
	.byte	18,192,23
	.word	592
	.byte	19,191,23,0,18,180,1
	.word	592
	.byte	19,179,1,0,18,172,1
	.word	592
	.byte	19,171,1,0,18,64
	.word	71704
	.byte	19,15,0,18,64
	.word	592
	.byte	19,63,0,18,64
	.word	70691
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,17,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	78161
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	73293
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	73360
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	73427
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	73494
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	73561
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	78172
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	74194
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	74257
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	74320
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	78185
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	78206
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	5004
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	76138
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	76217
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	5004
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	76138
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	76217
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	5004
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	76138
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	76217
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	5004
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	76138
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	76217
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	5004
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	76138
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	76217
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	5004
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	76138
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	76217
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	5004
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	76138
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	76217
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	5004
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	76138
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	76217
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	75922
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	75998
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	5004
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	74446
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	74522
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	78211
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	72648
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	72722
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	72408
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	72568
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	72648
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	72722
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	72408
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	72568
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	72648
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	72722
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	72408
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	72568
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	72648
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	72722
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	72408
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	72568
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	72648
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	72722
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	72408
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	72568
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	72648
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	72722
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	72408
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	72568
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	72648
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	72722
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	72408
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	72568
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	72648
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	72722
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	72408
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	72568
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	5004
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	72328
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	72488
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	5004
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	72328
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	72488
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	5004
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	72328
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	72488
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	5004
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	72328
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	72488
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	5004
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	72328
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	72488
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	5004
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	72328
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	72488
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	5004
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	72328
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	72488
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	5004
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	72328
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	72488
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	78222
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	74787
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5344
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	78243
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	78248
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	75859
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	78259
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	76423
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	78272
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	75286
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	75348
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	75410
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	78283
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	72015
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	5004
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	76074
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	73107
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	3184
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	71763
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	72139
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	72202
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	72265
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4375
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	71952
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	78294
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	75472
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	74972
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	75035
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	74909
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	75160
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	75223
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	78305
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	71196
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	78316
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	78327
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	78332
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	78353
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	78358
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	78378
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	78383
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	71515
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	71515
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	71515
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	71515
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	72857
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	72857
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	72857
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	72857
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	73045
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	73045
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	73045
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	73045
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	49626
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	71515
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	71515
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	5004
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	72857
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	72857
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	5004
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	73045
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	73045
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	78394
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	78405
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	78410
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	78419
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	78424
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	78444
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	78449
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	71133
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	71071
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	74050
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	74598
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	74661
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	74724
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	78211
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	71825
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	3184
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	73169
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	71577
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	76296
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	12602
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	77150
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5344
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	72796
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	72078
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	71888
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	78460
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	75098
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	75534
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	74849
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	5004
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	76359
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	71451
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	71260
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	70750
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	71010
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	74133
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	21014
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	5004
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	73232
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	74385
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	49626
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	71640
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	78471
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	78482
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	78491
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	78500
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	78491
	.byte	64,4,35,192,255,7,0,14
	.word	78509
	.byte	33
	.byte	'Ifx_CPU',0,17,210,19,3
	.word	83607
	.byte	15,6,124,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_2',0,2,16
	.byte	'IfxCpu_Id_3',0,3,16
	.byte	'IfxCpu_Id_4',0,4,16
	.byte	'IfxCpu_Id_6',0,6,16
	.byte	'IfxCpu_Id_none',0,7,0,33
	.byte	'IfxCpu_Id',0,6,133,1,3
	.word	83629
	.byte	33
	.byte	'IfxCpu_ResourceCpu',0,6,170,1,3
	.word	1606
	.byte	33
	.byte	'Ifx_SRC_SRCR_Bits',0,11,85,3
	.word	9944
	.byte	33
	.byte	'Ifx_SRC_SRCR',0,11,98,3
	.word	10234
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,11,110,25,4,13
	.byte	'SB',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	83830
	.byte	33
	.byte	'Ifx_SRC_CPU_CPU',0,11,113,3
	.word	83865
	.byte	18,24
	.word	83830
	.byte	19,5,0,14
	.word	83894
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,128,1,25,24,13
	.byte	'CPU',0
	.word	83903
	.byte	24,2,35,0,0,14
	.word	83908
	.byte	33
	.byte	'Ifx_SRC_CPU',0,11,131,1,3
	.word	83941
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,11,146,1,25,4,13
	.byte	'SR',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	83967
	.byte	33
	.byte	'Ifx_SRC_AGBT_AGBT',0,11,149,1,3
	.word	84005
	.byte	18,4
	.word	83967
	.byte	19,0,0,14
	.word	84037
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,164,1,25,4,13
	.byte	'AGBT',0
	.word	84046
	.byte	4,2,35,0,0,14
	.word	84051
	.byte	33
	.byte	'Ifx_SRC_AGBT',0,11,167,1,3
	.word	84086
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,11,182,1,25,4,13
	.byte	'SR',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	84113
	.byte	33
	.byte	'Ifx_SRC_XBAR_XBAR',0,11,185,1,3
	.word	84151
	.byte	18,12
	.word	84113
	.byte	19,2,0,14
	.word	84183
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,200,1,25,12,13
	.byte	'XBAR',0
	.word	84192
	.byte	12,2,35,0,0,14
	.word	84197
	.byte	33
	.byte	'Ifx_SRC_XBAR',0,11,203,1,3
	.word	84232
	.byte	18,8
	.word	10234
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,11,218,1,25,8,13
	.byte	'SR',0
	.word	84259
	.byte	8,2,35,0,0,14
	.word	84268
	.byte	33
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,11,221,1,3
	.word	84314
	.byte	14
	.word	84268
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,11,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	84354
	.byte	8,2,35,0,0,14
	.word	84359
	.byte	33
	.byte	'Ifx_SRC_CERBERUS',0,11,239,1,3
	.word	84402
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,11,254,1,25,12,13
	.byte	'TX',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,8,0,14
	.word	84433
	.byte	33
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,11,131,2,3
	.word	84500
	.byte	18,144,1
	.word	84433
	.byte	19,11,0,14
	.word	84536
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	84546
	.byte	144,1,2,35,0,0,14
	.word	84551
	.byte	33
	.byte	'Ifx_SRC_ASCLIN',0,11,149,2,3
	.word	84592
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,11,164,2,25,20,13
	.byte	'TX',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10234
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10234
	.byte	4,2,35,16,0,14
	.word	84621
	.byte	33
	.byte	'Ifx_SRC_QSPI_QSPI',0,11,171,2,3
	.word	84707
	.byte	18,120
	.word	84621
	.byte	19,5,0,14
	.word	84739
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,186,2,25,120,13
	.byte	'QSPI',0
	.word	84748
	.byte	120,2,35,0,0,14
	.word	84753
	.byte	33
	.byte	'Ifx_SRC_QSPI',0,11,189,2,3
	.word	84788
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,11,204,2,25,4,13
	.byte	'SR',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	84815
	.byte	33
	.byte	'Ifx_SRC_HSCT_HSCT',0,11,207,2,3
	.word	84853
	.byte	18,8
	.word	84815
	.byte	19,1,0,14
	.word	84885
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,222,2,25,8,13
	.byte	'HSCT',0
	.word	84894
	.byte	8,2,35,0,0,14
	.word	84899
	.byte	33
	.byte	'Ifx_SRC_HSCT',0,11,225,2,3
	.word	84934
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,11,240,2,25,16,13
	.byte	'COK',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10234
	.byte	4,2,35,12,0,14
	.word	84961
	.byte	33
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,11,246,2,3
	.word	85042
	.byte	18,64
	.word	84961
	.byte	19,3,0,14
	.word	85077
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,11,133,3,25,68,13
	.byte	'CH',0
	.word	85086
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10234
	.byte	4,2,35,64,0,14
	.word	85091
	.byte	33
	.byte	'Ifx_SRC_HSSL_HSSL',0,11,137,3,3
	.word	85142
	.byte	18,136,1
	.word	85091
	.byte	19,1,0,14
	.word	85174
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	85184
	.byte	136,1,2,35,0,0,14
	.word	85189
	.byte	33
	.byte	'Ifx_SRC_HSSL',0,11,155,3,3
	.word	85226
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,11,170,3,25,16,13
	.byte	'DTR',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3184
	.byte	4,2,35,12,0,14
	.word	85253
	.byte	33
	.byte	'Ifx_SRC_I2C_I2C',0,11,176,3,3
	.word	85334
	.byte	18,32
	.word	85253
	.byte	19,1,0,14
	.word	85364
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,11,191,3,25,32,13
	.byte	'I2C',0
	.word	85373
	.byte	32,2,35,0,0,14
	.word	85378
	.byte	33
	.byte	'Ifx_SRC_I2C',0,11,194,3,3
	.word	85411
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,11,209,3,25,4,13
	.byte	'SR',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	85437
	.byte	33
	.byte	'Ifx_SRC_SENT_SENT',0,11,212,3,3
	.word	85475
	.byte	18,40
	.word	85437
	.byte	19,9,0,14
	.word	85507
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,11,227,3,25,40,13
	.byte	'SENT',0
	.word	85516
	.byte	40,2,35,0,0,14
	.word	85521
	.byte	33
	.byte	'Ifx_SRC_SENT',0,11,230,3,3
	.word	85556
	.byte	18,20
	.word	10234
	.byte	19,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,11,245,3,25,20,13
	.byte	'SR',0
	.word	85583
	.byte	20,2,35,0,0,14
	.word	85592
	.byte	33
	.byte	'Ifx_SRC_MSC_MSC',0,11,248,3,3
	.word	85628
	.byte	18,80
	.word	85592
	.byte	19,3,0,14
	.word	85658
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,135,4,25,80,13
	.byte	'MSC',0
	.word	85667
	.byte	80,2,35,0,0,14
	.word	85672
	.byte	33
	.byte	'Ifx_SRC_MSC',0,11,138,4,3
	.word	85705
	.byte	18,16
	.word	10234
	.byte	19,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,11,153,4,25,16,13
	.byte	'SR',0
	.word	85731
	.byte	16,2,35,0,0,14
	.word	85740
	.byte	33
	.byte	'Ifx_SRC_CCU6_CCU',0,11,156,4,3
	.word	85777
	.byte	18,32
	.word	85740
	.byte	19,1,0,14
	.word	85808
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,171,4,25,32,13
	.byte	'CCU',0
	.word	85817
	.byte	32,2,35,0,0,14
	.word	85822
	.byte	33
	.byte	'Ifx_SRC_CCU6',0,11,174,4,3
	.word	85856
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,11,189,4,25,24,13
	.byte	'CIRQ',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10234
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10234
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10234
	.byte	4,2,35,20,0,14
	.word	85883
	.byte	33
	.byte	'Ifx_SRC_GPT12_GPT12',0,11,197,4,3
	.word	85985
	.byte	18,24
	.word	85883
	.byte	19,0,0,14
	.word	86019
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,212,4,25,24,13
	.byte	'GPT12',0
	.word	86028
	.byte	24,2,35,0,0,14
	.word	86033
	.byte	33
	.byte	'Ifx_SRC_GPT12',0,11,215,4,3
	.word	86070
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,11,230,4,25,8,13
	.byte	'SR',0
	.word	84259
	.byte	8,2,35,0,0,14
	.word	86098
	.byte	33
	.byte	'Ifx_SRC_STM_STM',0,11,233,4,3
	.word	86134
	.byte	18,48
	.word	86098
	.byte	19,5,0,14
	.word	86164
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,248,4,25,48,13
	.byte	'STM',0
	.word	86173
	.byte	48,2,35,0,0,14
	.word	86178
	.byte	33
	.byte	'Ifx_SRC_STM',0,11,251,4,3
	.word	86211
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,11,138,5,25,4,13
	.byte	'SR',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	86237
	.byte	33
	.byte	'Ifx_SRC_FCE_FCE0',0,11,141,5,3
	.word	86274
	.byte	14
	.word	86237
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,156,5,25,4,13
	.byte	'FCE0',0
	.word	86305
	.byte	4,2,35,0,0,14
	.word	86310
	.byte	33
	.byte	'Ifx_SRC_FCE',0,11,159,5,3
	.word	86344
	.byte	18,32
	.word	592
	.byte	19,31,0,18,128,4
	.word	10234
	.byte	19,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,11,174,5,25,176,4,13
	.byte	'ERR',0
	.word	85731
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	86370
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	86379
	.byte	128,4,2,35,48,0,14
	.word	86389
	.byte	33
	.byte	'Ifx_SRC_DMA_DMA',0,11,179,5,3
	.word	86461
	.byte	18,176,4
	.word	86389
	.byte	19,0,0,14
	.word	86491
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,11,194,5,25,176,4,13
	.byte	'DMA',0
	.word	86501
	.byte	176,4,2,35,0,0,14
	.word	86506
	.byte	33
	.byte	'Ifx_SRC_DMA',0,11,197,5,3
	.word	86541
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,11,212,5,25,8,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	10234
	.byte	4,2,35,4,0,14
	.word	86567
	.byte	33
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,11,216,5,3
	.word	86621
	.byte	18,8
	.word	86567
	.byte	19,0,0,14
	.word	86655
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,11,231,5,25,8,13
	.byte	'SDMMC',0
	.word	86664
	.byte	8,2,35,0,0,14
	.word	86669
	.byte	33
	.byte	'Ifx_SRC_SDMMC',0,11,234,5,3
	.word	86706
	.byte	18,40
	.word	10234
	.byte	19,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,11,249,5,25,40,13
	.byte	'SR',0
	.word	86734
	.byte	40,2,35,0,0,14
	.word	86743
	.byte	33
	.byte	'Ifx_SRC_GETH_GETH',0,11,252,5,3
	.word	86781
	.byte	18,40
	.word	86743
	.byte	19,0,0,14
	.word	86813
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,139,6,25,40,13
	.byte	'GETH',0
	.word	86822
	.byte	40,2,35,0,0,14
	.word	86827
	.byte	33
	.byte	'Ifx_SRC_GETH',0,11,142,6,3
	.word	86862
	.byte	18,64
	.word	10234
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,11,157,6,25,64,13
	.byte	'INT',0
	.word	86889
	.byte	64,2,35,0,0,14
	.word	86898
	.byte	33
	.byte	'Ifx_SRC_CAN_CAN',0,11,160,6,3
	.word	86935
	.byte	18,192,1
	.word	86898
	.byte	19,2,0,14
	.word	86965
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,11,175,6,25,192,1,13
	.byte	'CAN',0
	.word	86975
	.byte	192,1,2,35,0,0,14
	.word	86980
	.byte	33
	.byte	'Ifx_SRC_CAN',0,11,178,6,3
	.word	87015
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,11,193,6,25,16,13
	.byte	'SR0',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10234
	.byte	4,2,35,12,0,14
	.word	87041
	.byte	33
	.byte	'Ifx_SRC_VADC_G',0,11,199,6,3
	.word	87116
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,11,214,6,25,4,13
	.byte	'SR0',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	87145
	.byte	33
	.byte	'Ifx_SRC_VADC_FC',0,11,217,6,3
	.word	87182
	.byte	18,192,1
	.word	87041
	.byte	19,11,0,14
	.word	87212
	.byte	18,32
	.word	87145
	.byte	19,7,0,14
	.word	87227
	.byte	18,32
	.word	87041
	.byte	19,1,0,14
	.word	87241
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,11,233,6,25,128,2,13
	.byte	'G',0
	.word	87222
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	87236
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	87250
	.byte	32,3,35,224,1,0,14
	.word	87255
	.byte	33
	.byte	'Ifx_SRC_VADC',0,11,238,6,3
	.word	87315
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,11,253,6,25,8,13
	.byte	'SRM',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10234
	.byte	4,2,35,4,0,14
	.word	87342
	.byte	33
	.byte	'Ifx_SRC_DSADC_DSADC',0,11,129,7,3
	.word	87396
	.byte	18,112
	.word	87342
	.byte	19,13,0,14
	.word	87430
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,144,7,25,112,13
	.byte	'DSADC',0
	.word	87439
	.byte	112,2,35,0,0,14
	.word	87444
	.byte	33
	.byte	'Ifx_SRC_DSADC',0,11,147,7,3
	.word	87481
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,11,162,7,25,48,13
	.byte	'INT0',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10234
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10234
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10234
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10234
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10234
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10234
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10234
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	5004
	.byte	8,2,35,40,0,14
	.word	87509
	.byte	33
	.byte	'Ifx_SRC_ERAY_ERAY',0,11,175,7,3
	.word	87704
	.byte	18,96
	.word	87509
	.byte	19,1,0,14
	.word	87736
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,190,7,25,96,13
	.byte	'ERAY',0
	.word	87745
	.byte	96,2,35,0,0,14
	.word	87750
	.byte	33
	.byte	'Ifx_SRC_ERAY',0,11,193,7,3
	.word	87785
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,11,208,7,25,8,13
	.byte	'HSM',0
	.word	84259
	.byte	8,2,35,0,0,14
	.word	87812
	.byte	33
	.byte	'Ifx_SRC_HSM_HSM',0,11,211,7,3
	.word	87849
	.byte	18,8
	.word	87812
	.byte	19,0,0,14
	.word	87879
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,11,226,7,25,8,13
	.byte	'HSM',0
	.word	87888
	.byte	8,2,35,0,0,14
	.word	87893
	.byte	33
	.byte	'Ifx_SRC_HSM',0,11,229,7,3
	.word	87926
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,244,7,25,16,13
	.byte	'SCUERU',0
	.word	85731
	.byte	16,2,35,0,0,14
	.word	87952
	.byte	33
	.byte	'Ifx_SRC_SCU',0,11,247,7,3
	.word	87988
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,11,134,8,25,4,13
	.byte	'SR',0
	.word	10234
	.byte	4,2,35,0,0,14
	.word	88014
	.byte	33
	.byte	'Ifx_SRC_PMS_PMS',0,11,137,8,3
	.word	88050
	.byte	18,16
	.word	88014
	.byte	19,3,0,14
	.word	88080
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,11,152,8,25,16,13
	.byte	'PMS',0
	.word	88089
	.byte	16,2,35,0,0,14
	.word	88094
	.byte	33
	.byte	'Ifx_SRC_PMS',0,11,155,8,3
	.word	88127
	.byte	18,12
	.word	10234
	.byte	19,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,11,170,8,25,12,13
	.byte	'SR',0
	.word	88153
	.byte	12,2,35,0,0,14
	.word	88162
	.byte	33
	.byte	'Ifx_SRC_SMU_SMU',0,11,173,8,3
	.word	88198
	.byte	18,12
	.word	88162
	.byte	19,0,0,14
	.word	88228
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,188,8,25,12,13
	.byte	'SMU',0
	.word	88237
	.byte	12,2,35,0,0,14
	.word	88242
	.byte	33
	.byte	'Ifx_SRC_SMU',0,11,191,8,3
	.word	88275
	.byte	18,32
	.word	10234
	.byte	19,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,11,206,8,25,32,13
	.byte	'SR',0
	.word	88301
	.byte	32,2,35,0,0,14
	.word	88310
	.byte	33
	.byte	'Ifx_SRC_PSI5_PSI5',0,11,209,8,3
	.word	88348
	.byte	18,32
	.word	88310
	.byte	19,0,0,14
	.word	88380
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,224,8,25,32,13
	.byte	'PSI5',0
	.word	88389
	.byte	32,2,35,0,0,14
	.word	88394
	.byte	33
	.byte	'Ifx_SRC_PSI5',0,11,227,8,3
	.word	88429
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,11,242,8,25,12,13
	.byte	'BFR',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,8,0,14
	.word	88456
	.byte	33
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,11,247,8,3
	.word	88525
	.byte	14
	.word	88456
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,11,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	88560
	.byte	12,2,35,0,0,14
	.word	88565
	.byte	33
	.byte	'Ifx_SRC_HSPDM',0,11,137,9,3
	.word	88603
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,11,152,9,25,24,13
	.byte	'LI0',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10234
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10234
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10234
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10234
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,20,0,14
	.word	88631
	.byte	33
	.byte	'Ifx_SRC_DAM_DAM',0,11,160,9,3
	.word	88732
	.byte	18,48
	.word	88631
	.byte	19,1,0,14
	.word	88762
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,11,175,9,25,48,13
	.byte	'DAM',0
	.word	88771
	.byte	48,2,35,0,0,14
	.word	88776
	.byte	33
	.byte	'Ifx_SRC_DAM',0,11,178,9,3
	.word	88809
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,11,193,9,25,32,13
	.byte	'SR',0
	.word	88301
	.byte	32,2,35,0,0,14
	.word	88835
	.byte	33
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,11,196,9,3
	.word	88875
	.byte	18,32
	.word	88835
	.byte	19,0,0,14
	.word	88909
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,211,9,25,32,13
	.byte	'PSI5S',0
	.word	88918
	.byte	32,2,35,0,0,14
	.word	88923
	.byte	33
	.byte	'Ifx_SRC_PSI5S',0,11,214,9,3
	.word	88960
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,11,229,9,25,8,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	10234
	.byte	4,2,35,4,0,14
	.word	88988
	.byte	33
	.byte	'Ifx_SRC_RIF_RIF',0,11,233,9,3
	.word	89038
	.byte	18,16
	.word	88988
	.byte	19,1,0,14
	.word	89068
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,11,248,9,25,16,13
	.byte	'RIF',0
	.word	89077
	.byte	16,2,35,0,0,14
	.word	89082
	.byte	33
	.byte	'Ifx_SRC_RIF',0,11,251,9,3
	.word	89115
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,11,138,10,25,8,13
	.byte	'INT',0
	.word	10234
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10234
	.byte	4,2,35,4,0,14
	.word	89141
	.byte	33
	.byte	'Ifx_SRC_SPU_SPU',0,11,142,10,3
	.word	89191
	.byte	18,16
	.word	89141
	.byte	19,1,0,14
	.word	89221
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,11,157,10,25,16,13
	.byte	'SPU',0
	.word	89230
	.byte	16,2,35,0,0,14
	.word	89235
	.byte	33
	.byte	'Ifx_SRC_SPU',0,11,160,10,3
	.word	89268
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,11,175,10,25,32,13
	.byte	'SR',0
	.word	88301
	.byte	32,2,35,0,0,14
	.word	89294
	.byte	33
	.byte	'Ifx_SRC_GPSR_GPSR',0,11,178,10,3
	.word	89332
	.byte	18,192,1
	.word	89294
	.byte	19,5,0,14
	.word	89364
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	89374
	.byte	192,1,2,35,0,0,14
	.word	89379
	.byte	33
	.byte	'Ifx_SRC_GPSR',0,11,196,10,3
	.word	89416
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,22,68,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_STM_ACCEN0_Bits',0,22,102,3
	.word	89443
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,22,105,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN1_Bits',0,22,108,3
	.word	90000
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,22,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CAP_Bits',0,22,114,3
	.word	90077
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,22,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CAPSV_Bits',0,22,120,3
	.word	90150
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,22,123,16,4,11
	.byte	'DISR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_STM_CLC_Bits',0,22,130,1,3
	.word	90227
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,22,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	592
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	592
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	592
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	592
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	592
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	592
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	592
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	592
	.byte	3,0,2,35,3,0,33
	.byte	'Ifx_STM_CMCON_Bits',0,22,143,1,3
	.word	90369
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,22,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_CMP_Bits',0,22,149,1,3
	.word	90589
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,22,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	417
	.byte	25,0,2,35,0,0,33
	.byte	'Ifx_STM_ICR_Bits',0,22,162,1,3
	.word	90658
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,22,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_STM_ID_Bits',0,22,170,1,3
	.word	90861
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,22,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_STM_ISCR_Bits',0,22,180,1,3
	.word	90965
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,22,183,1,16,4,11
	.byte	'RST',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_STM_KRST0_Bits',0,22,188,1,3
	.word	91116
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,22,191,1,16,4,11
	.byte	'RST',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	417
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_STM_KRST1_Bits',0,22,195,1,3
	.word	91227
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,22,198,1,16,4,11
	.byte	'CLR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	417
	.byte	31,0,2,35,0,0,33
	.byte	'Ifx_STM_KRSTCLR_Bits',0,22,202,1,3
	.word	91319
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,22,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	592
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	417
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	592
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	592
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_STM_OCS_Bits',0,22,213,1,3
	.word	91415
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,22,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM0_Bits',0,22,219,1,3
	.word	91583
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,22,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM0SV_Bits',0,22,225,1,3
	.word	91656
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,22,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM1_Bits',0,22,231,1,3
	.word	91733
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,22,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM2_Bits',0,22,237,1,3
	.word	91806
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,22,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM3_Bits',0,22,243,1,3
	.word	91879
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,22,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM4_Bits',0,22,249,1,3
	.word	91953
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,22,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM5_Bits',0,22,255,1,3
	.word	92027
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,22,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_STM_TIM6_Bits',0,22,133,2,3
	.word	92101
	.byte	12,22,141,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89443
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN0',0,22,146,2,3
	.word	92175
	.byte	12,22,149,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90000
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ACCEN1',0,22,154,2,3
	.word	92239
	.byte	12,22,157,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90077
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CAP',0,22,162,2,3
	.word	92303
	.byte	12,22,165,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90150
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CAPSV',0,22,170,2,3
	.word	92364
	.byte	12,22,173,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90227
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CLC',0,22,178,2,3
	.word	92427
	.byte	12,22,181,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90369
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CMCON',0,22,186,2,3
	.word	92488
	.byte	12,22,189,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90589
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_CMP',0,22,194,2,3
	.word	92551
	.byte	12,22,197,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90658
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ICR',0,22,202,2,3
	.word	92612
	.byte	12,22,205,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90861
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ID',0,22,210,2,3
	.word	92673
	.byte	12,22,213,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90965
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_ISCR',0,22,218,2,3
	.word	92733
	.byte	12,22,221,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91116
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRST0',0,22,226,2,3
	.word	92795
	.byte	12,22,229,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91227
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRST1',0,22,234,2,3
	.word	92858
	.byte	12,22,237,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91319
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_KRSTCLR',0,22,242,2,3
	.word	92921
	.byte	12,22,245,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91415
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_OCS',0,22,250,2,3
	.word	92986
	.byte	12,22,253,2,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91583
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM0',0,22,130,3,3
	.word	93047
	.byte	12,22,133,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91656
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM0SV',0,22,138,3,3
	.word	93109
	.byte	12,22,141,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91733
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM1',0,22,146,3,3
	.word	93173
	.byte	12,22,149,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91806
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM2',0,22,154,3,3
	.word	93235
	.byte	12,22,157,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91879
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM3',0,22,162,3,3
	.word	93297
	.byte	12,22,165,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91953
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM4',0,22,170,3,3
	.word	93359
	.byte	12,22,173,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92027
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM5',0,22,178,3,3
	.word	93421
	.byte	12,22,181,3,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92101
	.byte	4,2,35,0,0,33
	.byte	'Ifx_STM_TIM6',0,22,186,3,3
	.word	93483
	.byte	15,5,141,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,33
	.byte	'IfxCpu_CounterMode',0,5,145,1,3
	.word	93545
	.byte	32,5,198,1,9,6,13
	.byte	'counter',0
	.word	1946
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	592
	.byte	1,2,35,4,0,33
	.byte	'IfxCpu_Counter',0,5,202,1,3
	.word	93634
	.byte	32,5,210,1,9,32,13
	.byte	'instruction',0
	.word	93634
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	93634
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	93634
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	93634
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	93634
	.byte	6,2,35,24,0,33
	.byte	'IfxCpu_Perf',0,5,217,1,3
	.word	93700
	.byte	33
	.byte	'Ifx_P_ACCEN0_Bits',0,8,102,3
	.word	8532
	.byte	33
	.byte	'Ifx_P_ACCEN1_Bits',0,8,108,3
	.word	8445
	.byte	33
	.byte	'Ifx_P_ESR_Bits',0,8,130,1,3
	.word	5013
	.byte	33
	.byte	'Ifx_P_ID_Bits',0,8,138,1,3
	.word	3064
	.byte	33
	.byte	'Ifx_P_IN_Bits',0,8,160,1,3
	.word	4060
	.byte	33
	.byte	'Ifx_P_IOCR0_Bits',0,8,173,1,3
	.word	3193
	.byte	33
	.byte	'Ifx_P_IOCR12_Bits',0,8,186,1,3
	.word	3840
	.byte	33
	.byte	'Ifx_P_IOCR4_Bits',0,8,199,1,3
	.word	3408
	.byte	33
	.byte	'Ifx_P_IOCR8_Bits',0,8,212,1,3
	.word	3623
	.byte	33
	.byte	'Ifx_P_LPCR_Bits',0,8,231,1,3
	.word	8107
	.byte	33
	.byte	'Ifx_P_OMCR_Bits',0,8,253,1,3
	.word	7759
	.byte	33
	.byte	'Ifx_P_OMCR0_Bits',0,8,136,2,3
	.word	6746
	.byte	33
	.byte	'Ifx_P_OMCR12_Bits',0,8,146,2,3
	.word	7270
	.byte	33
	.byte	'Ifx_P_OMCR4_Bits',0,8,157,2,3
	.word	6920
	.byte	33
	.byte	'Ifx_P_OMCR8_Bits',0,8,168,2,3
	.word	7094
	.byte	33
	.byte	'Ifx_P_OMR_Bits',0,8,205,2,3
	.word	2493
	.byte	33
	.byte	'Ifx_P_OMSR_Bits',0,8,227,2,3
	.word	7426
	.byte	33
	.byte	'Ifx_P_OMSR0_Bits',0,8,237,2,3
	.word	6083
	.byte	33
	.byte	'Ifx_P_OMSR12_Bits',0,8,248,2,3
	.word	6571
	.byte	33
	.byte	'Ifx_P_OMSR4_Bits',0,8,131,3,3
	.word	6230
	.byte	33
	.byte	'Ifx_P_OMSR8_Bits',0,8,142,3,3
	.word	6399
	.byte	33
	.byte	'Ifx_P_OUT_Bits',0,8,164,3,3
	.word	2177
	.byte	33
	.byte	'Ifx_P_PCSR_Bits',0,8,187,3,3
	.word	5719
	.byte	33
	.byte	'Ifx_P_PDISC_Bits',0,8,209,3,3
	.word	5353
	.byte	33
	.byte	'Ifx_P_PDR0_Bits',0,8,230,3,3
	.word	4384
	.byte	33
	.byte	'Ifx_P_PDR1_Bits',0,8,251,3,3
	.word	4688
	.byte	33
	.byte	'Ifx_P_ACCEN0',0,8,136,4,3
	.word	9059
	.byte	33
	.byte	'Ifx_P_ACCEN1',0,8,144,4,3
	.word	8492
	.byte	33
	.byte	'Ifx_P_ESR',0,8,152,4,3
	.word	5304
	.byte	33
	.byte	'Ifx_P_ID',0,8,160,4,3
	.word	3144
	.byte	33
	.byte	'Ifx_P_IN',0,8,168,4,3
	.word	4335
	.byte	33
	.byte	'Ifx_P_IOCR0',0,8,176,4,3
	.word	3368
	.byte	33
	.byte	'Ifx_P_IOCR12',0,8,184,4,3
	.word	4020
	.byte	33
	.byte	'Ifx_P_IOCR4',0,8,192,4,3
	.word	3583
	.byte	33
	.byte	'Ifx_P_IOCR8',0,8,200,4,3
	.word	3800
	.byte	33
	.byte	'Ifx_P_LPCR',0,8,208,4,3
	.word	8387
	.byte	33
	.byte	'Ifx_P_OMCR',0,8,216,4,3
	.word	8067
	.byte	33
	.byte	'Ifx_P_OMCR0',0,8,224,4,3
	.word	6880
	.byte	33
	.byte	'Ifx_P_OMCR12',0,8,232,4,3
	.word	7386
	.byte	33
	.byte	'Ifx_P_OMCR4',0,8,240,4,3
	.word	7054
	.byte	33
	.byte	'Ifx_P_OMCR8',0,8,248,4,3
	.word	7230
	.byte	33
	.byte	'Ifx_P_OMR',0,8,128,5,3
	.word	3024
	.byte	33
	.byte	'Ifx_P_OMSR',0,8,136,5,3
	.word	7719
	.byte	33
	.byte	'Ifx_P_OMSR0',0,8,144,5,3
	.word	6190
	.byte	33
	.byte	'Ifx_P_OMSR12',0,8,152,5,3
	.word	6706
	.byte	33
	.byte	'Ifx_P_OMSR4',0,8,160,5,3
	.word	6359
	.byte	33
	.byte	'Ifx_P_OMSR8',0,8,168,5,3
	.word	6531
	.byte	33
	.byte	'Ifx_P_OUT',0,8,176,5,3
	.word	2453
	.byte	33
	.byte	'Ifx_P_PCSR',0,8,184,5,3
	.word	6043
	.byte	33
	.byte	'Ifx_P_PDISC',0,8,192,5,3
	.word	5679
	.byte	33
	.byte	'Ifx_P_PDR0',0,8,200,5,3
	.word	4648
	.byte	33
	.byte	'Ifx_P_PDR1',0,8,208,5,3
	.word	4964
	.byte	14
	.word	9099
	.byte	33
	.byte	'Ifx_P',0,8,128,6,3
	.word	95012
	.byte	15,7,73,9,1,16
	.byte	'IfxPort_ControlledBy_port',0,0,16
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,33
	.byte	'IfxPort_ControlledBy',0,7,77,3
	.word	95032
	.byte	15,7,81,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,33
	.byte	'IfxPort_InputMode',0,7,87,3
	.word	95123
	.byte	15,7,91,9,1,16
	.byte	'IfxPort_LvdsMode_high',0,0,16
	.byte	'IfxPort_LvdsMode_medium',0,1,0,33
	.byte	'IfxPort_LvdsMode',0,7,95,3
	.word	95274
	.byte	33
	.byte	'IfxPort_OutputIdx',0,7,136,1,3
	.word	19173
	.byte	15,7,140,1,9,1,16
	.byte	'IfxPort_OutputMode_none',0,0,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,33
	.byte	'IfxPort_OutputMode',0,7,145,1,3
	.word	95382
	.byte	33
	.byte	'IfxPort_PadDriver',0,7,165,1,3
	.word	19554
	.byte	15,7,169,1,9,1,16
	.byte	'IfxPort_PadSupply_3v',0,0,16
	.byte	'IfxPort_PadSupply_5v',0,1,0,33
	.byte	'IfxPort_PadSupply',0,7,173,1,3
	.word	95533
	.byte	15,7,177,1,9,1,16
	.byte	'IfxPort_PinFunctionMode_digital',0,0,16
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,33
	.byte	'IfxPort_PinFunctionMode',0,7,181,1,3
	.word	95613
	.byte	33
	.byte	'IfxPort_State',0,7,193,1,3
	.word	9679
	.byte	33
	.byte	'IfxPort_Pin',0,7,250,1,3
	.word	19016
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,23,68,16,4,11
	.byte	'EN0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SMU_ACCEN0_Bits',0,23,102,3
	.word	95764
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,23,105,16,4,11
	.byte	'reserved_0',0,4
	.word	417
	.byte	32,0,2,35,0,0,33
	.byte	'Ifx_SMU_ACCEN1_Bits',0,23,108,3
	.word	96321
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,23,111,16,4,11
	.byte	'DF0',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	592
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	592
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	592
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	592
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SMU_AD_Bits',0,23,145,1,3
	.word	96398
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,23,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	592
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	592
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	592
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	592
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	592
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	592
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	592
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	592
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	592
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	592
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	592
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	592
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	592
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	592
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	592
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	592
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	592
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	592
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	592
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	592
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	592
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	592
	.byte	4,0,2,35,3,0,33
	.byte	'Ifx_SMU_AEX_Bits',0,23,176,1,3
	.word	96948
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,23,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	4,0,2,35,0,0,33
	.byte	'Ifx_SMU_AEXCLR_Bits',0,23,207,1,3
	.word	97505
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,23,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	592
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	609
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	609
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	592
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	592
	.byte	1,0,2,35,3,0,33
	.byte	'Ifx_SMU_AFCNT_Bits',0,23,217,1,3
	.word	98101
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,23,220,1,16,4,11
	.byte	'SF0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_AG_Bits',0,23,254,1,3
	.word	98241
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,23,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	440
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	440
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	440
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	440
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	440
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	440
	.byte	2,0,2,35,0,0,33
	.byte	'Ifx_SMU_AGC_Bits',0,23,142,2,3
	.word	98792
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,23,145,2,16,4,11
	.byte	'CF0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_AGCF_Bits',0,23,179,2,3
	.word	99054
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,23,182,2,16,4,11
	.byte	'FE0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_AGFSP_Bits',0,23,216,2,3
	.word	99609
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,23,219,2,16,4,11
	.byte	'DISR',0,1
	.word	592
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	592
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	28,0,2,35,0,0,33
	.byte	'Ifx_SMU_CLC_Bits',0,23,226,2,3
	.word	100166
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,23,229,2,16,4,11
	.byte	'CMD',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	440
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SMU_CMD_Bits',0,23,234,2,3
	.word	100309
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,23,237,2,16,4,11
	.byte	'SSM',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	417
	.byte	30,0,2,35,0,0,33
	.byte	'Ifx_SMU_DBG_Bits',0,23,241,2,3
	.word	100412
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,23,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	440
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	440
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	440
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	440
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	440
	.byte	10,0,2,35,0,0,33
	.byte	'Ifx_SMU_FSP_Bits',0,23,252,2,3
	.word	100500
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,23,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	592
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	592
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	609
	.byte	16,0,2,35,2,0,33
	.byte	'Ifx_SMU_ID_Bits',0,23,132,3,3
	.word	100655
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,23,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	440
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	440
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	16,0,2,35,0,0,33
	.byte	'Ifx_SMU_KEYS_Bits',0,23,140,3,3
	.word	100765
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,23,143,3,16,4,11
	.byte	'TGS',0,1
	.word	592
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	592
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	592
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	417
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	592
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	592
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	592
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	592
	.byte	2,0,2,35,3,0,33
	.byte	'Ifx_SMU_OCS_Bits',0,23,153,3,3
	.word	100877
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,23,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	440
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	440
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	440
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	440
	.byte	9,0,2,35,0,0,33
	.byte	'Ifx_SMU_PCTL_Bits',0,23,167,3,3
	.word	101069
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,23,170,3,16,4,11
	.byte	'TE0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_RMCTL_Bits',0,23,204,3,3
	.word	101300
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,23,207,3,16,4,11
	.byte	'EF0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_RMEF_Bits',0,23,241,3,3
	.word	102004
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,23,244,3,16,4,11
	.byte	'STS0',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	440
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	440
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	440
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	440
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	440
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	440
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	440
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	440
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	440
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	440
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	440
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	440
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	440
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	440
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	440
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	440
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	440
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	440
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	440
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	440
	.byte	1,0,2,35,0,0,33
	.byte	'Ifx_SMU_RMSTS_Bits',0,23,150,4,3
	.word	102706
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,23,153,4,16,4,11
	.byte	'GID0',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	440
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	440
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC00_Bits',0,23,161,4,3
	.word	103421
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,23,164,4,16,4,11
	.byte	'GID2',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	440
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	440
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC01_Bits',0,23,172,4,3
	.word	103589
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,23,175,4,16,4,11
	.byte	'GID0',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	440
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	440
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC10_Bits',0,23,183,4,3
	.word	103757
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,23,186,4,16,4,11
	.byte	'GID2',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	440
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	440
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	440
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	440
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	440
	.byte	7,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC11_Bits',0,23,194,4,3
	.word	103925
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,23,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	440
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	440
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	440
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	440
	.byte	24,0,2,35,0,0,33
	.byte	'Ifx_SMU_RTC_Bits',0,23,203,4,3
	.word	104093
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,23,206,4,16,4,11
	.byte	'CMD',0,4
	.word	440
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	440
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	440
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	440
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	440
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	440
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	440
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	440
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	440
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	440
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	440
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	440
	.byte	12,0,2,35,0,0,33
	.byte	'Ifx_SMU_STS_Bits',0,23,220,4,3
	.word	104213
	.byte	12,23,228,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95764
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_ACCEN0',0,23,233,4,3
	.word	104468
	.byte	12,23,236,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96321
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_ACCEN1',0,23,241,4,3
	.word	104532
	.byte	12,23,244,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96398
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AD',0,23,249,4,3
	.word	104596
	.byte	12,23,252,4,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96948
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AEX',0,23,129,5,3
	.word	104656
	.byte	12,23,132,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97505
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AEXCLR',0,23,137,5,3
	.word	104717
	.byte	12,23,140,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98101
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AFCNT',0,23,145,5,3
	.word	104781
	.byte	12,23,148,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98241
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AG',0,23,153,5,3
	.word	104844
	.byte	12,23,156,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98792
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AGC',0,23,161,5,3
	.word	104904
	.byte	12,23,164,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99054
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AGCF',0,23,169,5,3
	.word	104965
	.byte	12,23,172,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99609
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_AGFSP',0,23,177,5,3
	.word	105027
	.byte	12,23,180,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100166
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_CLC',0,23,185,5,3
	.word	105090
	.byte	12,23,188,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100309
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_CMD',0,23,193,5,3
	.word	105151
	.byte	12,23,196,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100412
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_DBG',0,23,201,5,3
	.word	105212
	.byte	12,23,204,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100500
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_FSP',0,23,209,5,3
	.word	105273
	.byte	12,23,212,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100655
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_ID',0,23,217,5,3
	.word	105334
	.byte	12,23,220,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100765
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_KEYS',0,23,225,5,3
	.word	105394
	.byte	12,23,228,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100877
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_OCS',0,23,233,5,3
	.word	105456
	.byte	12,23,236,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101069
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_PCTL',0,23,241,5,3
	.word	105517
	.byte	12,23,244,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101300
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RMCTL',0,23,249,5,3
	.word	105579
	.byte	12,23,252,5,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102004
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RMEF',0,23,129,6,3
	.word	105642
	.byte	12,23,132,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102706
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RMSTS',0,23,137,6,3
	.word	105704
	.byte	12,23,140,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103421
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC00',0,23,145,6,3
	.word	105767
	.byte	12,23,148,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103589
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC01',0,23,153,6,3
	.word	105831
	.byte	12,23,156,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103757
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC10',0,23,161,6,3
	.word	105895
	.byte	12,23,164,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103925
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTAC11',0,23,169,6,3
	.word	105959
	.byte	12,23,172,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104093
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_RTC',0,23,177,6,3
	.word	106023
	.byte	12,23,180,6,9,4,13
	.byte	'U',0
	.word	417
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	433
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104213
	.byte	4,2,35,0,0,33
	.byte	'Ifx_SMU_STS',0,23,185,6,3
	.word	106084
	.byte	15,9,210,2,9,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,33
	.byte	'IfxScuCcu_LowPowerDivRatio',0,9,216,2,3
	.word	106145
	.byte	15,9,220,2,9,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,16
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,33
	.byte	'IfxScuCcu_ModulationAmplitude',0,9,229,2,3
	.word	106338
	.byte	15,9,254,3,9,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,33
	.byte	'IfxScuCcu_PllInputClockSelection',0,9,131,4,3
	.word	106639
	.byte	15,9,135,4,9,1,16
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,16
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,16
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,16
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,33
	.byte	'IfxScuCcu_Traprequest',0,9,141,4,3
	.word	106813
	.byte	15,9,147,4,9,1,16
	.byte	'IfxScuCcu_ModEn_disabled',0,0,16
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,33
	.byte	'IfxScuCcu_ModEn',0,9,151,4,3
	.word	106967
	.byte	32,9,162,4,9,6,13
	.byte	'pDivider',0
	.word	592
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	592
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	592
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	592
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	592
	.byte	1,2,35,4,0,33
	.byte	'IfxScuCcu_PerPllConfig',0,9,171,4,3
	.word	107052
	.byte	32,9,176,4,9,4,13
	.byte	'pDivider',0
	.word	592
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	592
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	592
	.byte	1,2,35,2,0,33
	.byte	'IfxScuCcu_SysPllConfig',0,9,181,4,3
	.word	107190
	.byte	32,9,189,4,9,8,13
	.byte	'value',0
	.word	1946
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1946
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,193,4,3
	.word	107284
	.byte	32,9,197,4,9,6,13
	.byte	'k2Step',0
	.word	592
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	213
	.byte	4,2,35,2,0,33
	.byte	'IfxScuCcu_PllStepConfig',0,9,201,4,3
	.word	107355
	.byte	32,9,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	1946
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	106639
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	107190
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	107052
	.byte	6,2,35,10,0,33
	.byte	'IfxScuCcu_pllsParameterConfig',0,9,211,4,3
	.word	107429
	.byte	32,9,219,4,9,8,13
	.byte	'value',0
	.word	1946
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1946
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,223,4,3
	.word	107574
	.byte	32,9,231,4,9,80,13
	.byte	'ccucon0',0
	.word	107284
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	107284
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	107284
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	107284
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	107284
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	107284
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	107284
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	107284
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	107284
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	107284
	.byte	8,2,35,72,0,33
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,243,4,3
	.word	107650
	.byte	32,9,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	107429
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	213
	.byte	4,2,35,16,0,33
	.byte	'IfxScuCcu_InitialStepConfig',0,9,251,4,3
	.word	107872
	.byte	20
	.word	107355
	.byte	3
	.word	107958
	.byte	32,9,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	592
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	107963
	.byte	4,2,35,4,0,33
	.byte	'IfxScuCcu_PllThrottleConfig',0,9,131,5,3
	.word	107968
	.byte	32,9,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	106967
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	106338
	.byte	1,2,35,1,0,33
	.byte	'IfxScuCcu_Mod_Config',0,9,141,5,3
	.word	108050
	.byte	20
	.word	19390
	.byte	33
	.byte	'IfxI2c_Scl_InOut',0,14,62,3
	.word	108124
	.byte	20
	.word	19472
	.byte	33
	.byte	'IfxI2c_Sda_InOut',0,14,71,3
	.word	108154
	.byte	15,24,66,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_dma',0,1,16
	.byte	'IfxSrc_Tos_cpu1',0,2,16
	.byte	'IfxSrc_Tos_cpu2',0,3,16
	.byte	'IfxSrc_Tos_cpu3',0,4,16
	.byte	'IfxSrc_Tos_cpu4',0,5,16
	.byte	'IfxSrc_Tos_cpu5',0,6,0,33
	.byte	'IfxSrc_Tos',0,24,75,3
	.word	108184
	.byte	33
	.byte	'IfxI2c_AddressMode',0,12,84,3
	.word	20612
	.byte	33
	.byte	'IfxI2c_BusStatus',0,12,92,3
	.word	17730
	.byte	15,12,97,9,1,16
	.byte	'IfxI2c_DtrInterruptSource_lastSingleRequest',0,0,16
	.byte	'IfxI2c_DtrInterruptSource_singleRequest',0,1,16
	.byte	'IfxI2c_DtrInterruptSource_lastBurstRequest',0,2,16
	.byte	'IfxI2c_DtrInterruptSource_burstRequest',0,3,0,33
	.byte	'IfxI2c_DtrInterruptSource',0,12,103,3
	.word	108386
	.byte	15,12,108,9,1,16
	.byte	'IfxI2c_ErrorInterruptSource_rxFifoUnderflow',0,0,16
	.byte	'IfxI2c_ErrorInterruptSource_rxFifoOverflow',0,1,16
	.byte	'IfxI2c_ErrorInterruptSource_txFifoUnderflow',0,2,16
	.byte	'IfxI2c_ErrorInterruptSource_txFifoOverflow',0,3,0,33
	.byte	'IfxI2c_ErrorInterruptSource',0,12,114,3
	.word	108600
	.byte	33
	.byte	'IfxI2c_Mode',0,12,122,3
	.word	20481
	.byte	15,12,124,9,1,16
	.byte	'IfxI2c_PinSelect_a',0,0,16
	.byte	'IfxI2c_PinSelect_b',0,1,16
	.byte	'IfxI2c_PinSelect_c',0,2,16
	.byte	'IfxI2c_PinSelect_d',0,3,16
	.byte	'IfxI2c_PinSelect_e',0,4,16
	.byte	'IfxI2c_PinSelect_f',0,5,16
	.byte	'IfxI2c_PinSelect_g',0,6,16
	.byte	'IfxI2c_PinSelect_h',0,7,0,33
	.byte	'IfxI2c_PinSelect',0,12,134,1,3
	.word	108844
	.byte	33
	.byte	'IfxI2c_ProtocolInterruptSource',0,12,148,1,3
	.word	17314
	.byte	15,12,153,1,9,1,16
	.byte	'IfxI2c_SleepMode_enable',0,0,16
	.byte	'IfxI2c_SleepMode_disable',0,1,0,33
	.byte	'IfxI2c_SleepMode',0,12,157,1,3
	.word	109084
	.byte	33
	.byte	'IfxI2c_Pins',0,12,174,1,3
	.word	20419
	.byte	33
	.byte	'IfxI2c_I2c_Status',0,16,148,2,3
	.word	20207
	.byte	33
	.byte	'IfxI2c_I2c',0,16,166,2,3
	.word	20341
	.byte	33
	.byte	'IfxI2c_I2c_Config',0,16,176,2,3
	.word	20541
	.byte	33
	.byte	'IfxI2c_I2c_Device',0,16,186,2,3
	.word	20671
	.byte	33
	.byte	'IfxI2c_I2c_deviceConfig',0,16,196,2,3
	.word	20759
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,29,1,49,19,0,0,29,11,0,49,19,0,0,30
	.byte	46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,31,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12
	.byte	63,12,60,12,0,0,32,19,1,58,15,59,15,57,15,11,15,0,0,33,22,0,3,8,58,15,59,15,57,15,73,19,0,0,34,21,0,54
	.byte	15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L117:
	.word	.L446-.L445
.L445:
	.half	3
	.word	.L448-.L447
.L447:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxI2c.h',0,7,0,0
	.byte	'IfxI2c_regdef.h',0,3,0,0
	.byte	'IfxI2c_PinMap.h',0,8,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.h',0,0,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0,0
.L448:
.L446:
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.debug_info'
.L118:
	.word	231
	.half	3
	.word	.L119
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L121,.L120
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxI2c_I2c_getBaudrate',0,1,53,9
	.word	.L178
	.byte	1,1,1
	.word	.L92,.L179,.L91
	.byte	4
	.byte	'i2c',0,1,53,44
	.word	.L180,.L181
	.byte	5
	.word	.L92,.L179
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.debug_abbrev'
.L119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.debug_line'
.L120:
	.word	.L450-.L449
.L449:
	.half	3
	.word	.L452-.L451
.L451:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0,0
.L452:
	.byte	5,34,7,0,5,2
	.word	.L92
	.byte	3,54,1,5,1,9
	.half	.L122-.L92
	.byte	3,1,0,1,1
.L450:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.debug_ranges'
.L121:
	.word	-1,.L92,0,.L122-.L92,0,0
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_initConfig')
	.sect	'.debug_info'
.L123:
	.word	245
	.half	3
	.word	.L124
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L126,.L125
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxI2c_I2c_initConfig',0,1,59,6,1,1,1
	.word	.L94,.L182,.L93
	.byte	4
	.byte	'config',0,1,59,47
	.word	.L183,.L184
	.byte	4
	.byte	'i2c',0,1,59,64
	.word	.L185,.L186
	.byte	5
	.word	.L94,.L182
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_initConfig')
	.sect	'.debug_abbrev'
.L124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_initConfig')
	.sect	'.debug_line'
.L125:
	.word	.L454-.L453
.L453:
	.half	3
	.word	.L456-.L455
.L455:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0,0
.L456:
	.byte	5,22,7,0,5,2
	.word	.L94
	.byte	3,60,1,5,24,9
	.half	.L457-.L94
	.byte	3,2,1,9
	.half	.L458-.L457
	.byte	3,127,1,5,22,9
	.half	.L459-.L458
	.byte	1,5,24,9
	.half	.L460-.L459
	.byte	3,2,1,5,22,3,127,1,9
	.half	.L461-.L460
	.byte	3,1,1,5,1,9
	.half	.L462-.L461
	.byte	3,1,1,7,9
	.half	.L127-.L462
	.byte	0,1,1
.L454:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_initConfig')
	.sect	'.debug_ranges'
.L126:
	.word	-1,.L94,0,.L127-.L94,0,0
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_initDevice')
	.sect	'.debug_info'
.L128:
	.word	260
	.half	3
	.word	.L129
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L131,.L130
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxI2c_I2c_initDevice',0,1,68,6,1,1,1
	.word	.L96,.L187,.L95
	.byte	4
	.byte	'i2cDevice',0,1,68,47
	.word	.L188,.L189
	.byte	4
	.byte	'i2cDeviceConfig',0,1,68,89
	.word	.L190,.L191
	.byte	5
	.word	.L96,.L187
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_initDevice')
	.sect	'.debug_abbrev'
.L129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_initDevice')
	.sect	'.debug_line'
.L130:
	.word	.L464-.L463
.L463:
	.half	3
	.word	.L466-.L465
.L465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0,0
.L466:
	.byte	5,47,7,0,5,2
	.word	.L96
	.byte	3,197,0,1,5,30,9
	.half	.L467-.L96
	.byte	1,5,47,9
	.half	.L468-.L467
	.byte	3,1,1,5,30,9
	.half	.L469-.L468
	.byte	1,5,47,9
	.half	.L470-.L469
	.byte	3,1,1,5,30,9
	.half	.L471-.L470
	.byte	1,5,47,9
	.half	.L472-.L471
	.byte	3,1,1,5,30,9
	.half	.L473-.L472
	.byte	1,5,1,9
	.half	.L474-.L473
	.byte	3,1,1,7,9
	.half	.L132-.L474
	.byte	0,1,1
.L464:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_initDevice')
	.sect	'.debug_ranges'
.L131:
	.word	-1,.L96,0,.L132-.L96,0,0
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.debug_info'
.L133:
	.word	260
	.half	3
	.word	.L134
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L136,.L135
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxI2c_I2c_initDeviceConfig',0,1,77,6,1,1,1
	.word	.L98,.L192,.L97
	.byte	4
	.byte	'i2cDeviceConfig',0,1,77,59
	.word	.L193,.L194
	.byte	4
	.byte	'i2c',0,1,77,88
	.word	.L180,.L195
	.byte	5
	.word	.L98,.L192
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.debug_abbrev'
.L134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.debug_line'
.L135:
	.word	.L476-.L475
.L475:
	.half	3
	.word	.L478-.L477
.L477:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0,0
.L478:
	.byte	5,36,7,0,5,2
	.word	.L98
	.byte	3,206,0,1,5,38,9
	.half	.L479-.L98
	.byte	3,1,1,5,36,1,5,38,9
	.half	.L480-.L479
	.byte	3,1,1,5,36,1,9
	.half	.L481-.L480
	.byte	3,1,1,5,1,9
	.half	.L482-.L481
	.byte	3,1,1,7,9
	.half	.L137-.L482
	.byte	0,1,1
.L476:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.debug_ranges'
.L136:
	.word	-1,.L98,0,.L137-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_initModule')
	.sect	'.debug_info'
.L138:
	.word	409
	.half	3
	.word	.L139
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L141,.L140
	.byte	2
	.word	.L114
	.byte	3
	.byte	'IfxI2c_I2c_initModule',0,1,86,6,1,1,1
	.word	.L100,.L196,.L99
	.byte	4
	.byte	'i2c',0,1,86,40
	.word	.L180,.L197
	.byte	4
	.byte	'config',0,1,86,70
	.word	.L198,.L199
	.byte	5
	.word	.L100,.L196
	.byte	6
	.byte	'i2cSFR',0,1,88,14
	.word	.L185,.L200
	.byte	7
	.word	.L201,.L202,.L203
	.byte	8
	.word	.L204,.L205
	.byte	9
	.word	.L206,.L202,.L203
	.byte	0,7
	.word	.L207,.L3,.L208
	.byte	8
	.word	.L209,.L210
	.byte	9
	.word	.L211,.L3,.L208
	.byte	0,7
	.word	.L207,.L212,.L4
	.byte	8
	.word	.L209,.L210
	.byte	9
	.word	.L211,.L212,.L4
	.byte	0,7
	.word	.L213,.L214,.L215
	.byte	8
	.word	.L216,.L217
	.byte	9
	.word	.L218,.L214,.L215
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_initModule')
	.sect	'.debug_abbrev'
.L139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_initModule')
	.sect	'.debug_line'
.L140:
	.word	.L484-.L483
.L483:
	.half	3
	.word	.L486-.L485
.L485:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'IfxI2c.h',0,1,0,0,0
.L486:
	.byte	5,6,7,0,5,2
	.word	.L100
	.byte	3,213,0,1,5,29,9
	.half	.L394-.L100
	.byte	3,2,1,5,6,9
	.half	.L395-.L394
	.byte	3,126,1,5,14,9
	.half	.L396-.L395
	.byte	3,3,1,5,25,9
	.half	.L487-.L396
	.byte	3,2,1,4,2,5,22,9
	.half	.L202-.L487
	.byte	3,172,5,1,5,20,1,4,1,5,30,9
	.half	.L203-.L202
	.byte	3,214,122,1,5,38,9
	.half	.L398-.L203
	.byte	3,1,1,5,15,9
	.half	.L400-.L398
	.byte	3,2,1,5,5,9
	.half	.L488-.L400
	.byte	1,5,42,7,9
	.half	.L489-.L488
	.byte	3,2,1,5,61,9
	.half	.L490-.L489
	.byte	1,5,80,9
	.half	.L491-.L490
	.byte	1,4,2,5,22,9
	.half	.L3-.L491
	.byte	3,251,4,1,5,20,1,4,1,5,15,9
	.half	.L208-.L3
	.byte	3,139,123,1,5,5,9
	.half	.L492-.L208
	.byte	1,5,39,7,9
	.half	.L493-.L492
	.byte	3,2,1,4,2,5,20,9
	.half	.L212-.L493
	.byte	3,243,4,1,4,1,5,41,9
	.half	.L4-.L212
	.byte	3,145,123,1,5,20,9
	.half	.L403-.L4
	.byte	1,4,2,5,44,9
	.half	.L214-.L403
	.byte	3,158,4,1,4,1,5,20,9
	.half	.L494-.L214
	.byte	3,227,123,1,5,22,9
	.half	.L215-.L494
	.byte	3,1,1,5,20,1,5,1,9
	.half	.L495-.L215
	.byte	3,1,1,7,9
	.half	.L142-.L495
	.byte	0,1,1
.L484:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_initModule')
	.sect	'.debug_ranges'
.L141:
	.word	-1,.L100,0,.L142-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_read')
	.sect	'.debug_info'
.L143:
	.word	1597
	.half	3
	.word	.L144
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L146,.L145
	.byte	2
	.word	.L114
	.byte	3
	.byte	'data',0,1,124,11,4,4
	.byte	'packet',0
	.word	.L228
	.byte	4,2,35,0,4
	.byte	'packetbyte',0
	.word	.L234
	.byte	4,2,35,0,0,5
	.byte	'IfxI2c_I2c_read',0,1,116,19
	.word	.L219
	.byte	1,1,1
	.word	.L102,.L220,.L101
	.byte	6
	.byte	'i2cDevice',0,1,116,54
	.word	.L188,.L221
	.byte	6
	.byte	'data',0,1,116,81
	.word	.L222,.L223
	.byte	6
	.byte	'size',0,1,116,97
	.word	.L224,.L225
	.byte	7
	.word	.L102,.L220
	.byte	8
	.byte	'status',0,1,118,24
	.word	.L219,.L226
	.byte	8
	.byte	'i2c',0,1,119,24
	.word	.L185,.L227
	.byte	8
	.byte	'packet',0,1,120,24
	.word	.L228,.L229
	.byte	8
	.byte	'slAddr',0,1,121,24
	.word	.L230,.L231
	.byte	8
	.byte	'addressMode',0,1,122,24
	.word	.L232,.L233
	.byte	9
	.byte	'rxdata',0,1,128,1,12
	.word	162,.L235
	.byte	10
	.word	.L236
	.byte	8
	.byte	'bytesToReceive',0,1,132,1,12
	.word	.L238,.L239
	.byte	8
	.byte	'bytes',0,1,133,1,12
	.word	.L228,.L240
	.byte	11
	.word	.L241,.L242,.L243
	.byte	12
	.word	.L244,.L245
	.byte	13
	.word	.L246,.L242,.L243
	.byte	0,11
	.word	.L247,.L5,.L248
	.byte	12
	.word	.L249,.L250
	.byte	13
	.word	.L251,.L5,.L248
	.byte	0,11
	.word	.L252,.L248,.L253
	.byte	12
	.word	.L254,.L255
	.byte	13
	.word	.L256,.L248,.L253
	.byte	0,11
	.word	.L257,.L258,.L259
	.byte	12
	.word	.L260,.L261
	.byte	12
	.word	.L262,.L263
	.byte	13
	.word	.L264,.L258,.L259
	.byte	0,11
	.word	.L265,.L259,.L8
	.byte	12
	.word	.L266,.L267
	.byte	12
	.word	.L268,.L269
	.byte	13
	.word	.L270,.L259,.L8
	.byte	0,11
	.word	.L271,.L8,.L272
	.byte	12
	.word	.L273,.L274
	.byte	12
	.word	.L275,.L276
	.byte	13
	.word	.L277,.L8,.L272
	.byte	0,11
	.word	.L271,.L278,.L279
	.byte	12
	.word	.L273,.L274
	.byte	12
	.word	.L275,.L276
	.byte	13
	.word	.L277,.L278,.L279
	.byte	0,11
	.word	.L247,.L9,.L280
	.byte	12
	.word	.L249,.L250
	.byte	13
	.word	.L251,.L9,.L280
	.byte	0,11
	.word	.L281,.L280,.L7
	.byte	12
	.word	.L282,.L283
	.byte	13
	.word	.L284,.L280,.L7
	.byte	0,11
	.word	.L257,.L285,.L11
	.byte	12
	.word	.L260,.L261
	.byte	12
	.word	.L262,.L263
	.byte	13
	.word	.L264,.L285,.L11
	.byte	0,11
	.word	.L257,.L286,.L287
	.byte	12
	.word	.L260,.L261
	.byte	12
	.word	.L262,.L263
	.byte	13
	.word	.L264,.L286,.L287
	.byte	0,11
	.word	.L288,.L287,.L289
	.byte	12
	.word	.L290,.L291
	.byte	12
	.word	.L292,.L293
	.byte	13
	.word	.L294,.L287,.L289
	.byte	0,11
	.word	.L265,.L289,.L295
	.byte	12
	.word	.L266,.L267
	.byte	12
	.word	.L268,.L269
	.byte	13
	.word	.L270,.L289,.L295
	.byte	0,11
	.word	.L281,.L295,.L14
	.byte	12
	.word	.L282,.L283
	.byte	13
	.word	.L284,.L295,.L14
	.byte	0,11
	.word	.L252,.L296,.L297
	.byte	12
	.word	.L254,.L255
	.byte	13
	.word	.L256,.L296,.L297
	.byte	0,10
	.word	.L298
	.byte	8
	.byte	'i',0,1,219,1,21
	.word	.L228,.L301
	.byte	11
	.word	.L302,.L299,.L303
	.byte	14
	.word	.L304,.L299,.L303
	.byte	11
	.word	.L305,.L299,.L306
	.byte	14
	.word	.L307,.L299,.L306
	.byte	8
	.byte	'reg',0,2,235,5,17
	.word	.L308,.L309
	.byte	0,0,0,0,10
	.word	.L310
	.byte	8
	.byte	'ris',0,1,234,1,24
	.word	.L228,.L311
	.byte	7
	.word	.L312,.L27
	.byte	8
	.byte	'k',0,1,244,1,28
	.word	.L228,.L313
	.byte	11
	.word	.L281,.L314,.L27
	.byte	12
	.word	.L282,.L283
	.byte	13
	.word	.L284,.L314,.L27
	.byte	0,0,11
	.word	.L252,.L315,.L316
	.byte	12
	.word	.L254,.L255
	.byte	13
	.word	.L256,.L315,.L316
	.byte	0,0,11
	.word	.L317,.L31,.L39
	.byte	12
	.word	.L318,.L319
	.byte	13
	.word	.L320,.L31,.L39
	.byte	0,0,7
	.word	.L321,.L16
	.byte	8
	.byte	'ris',0,1,186,2,20
	.word	.L228,.L322
	.byte	11
	.word	.L252,.L323,.L324
	.byte	12
	.word	.L254,.L255
	.byte	13
	.word	.L256,.L323,.L324
	.byte	0,7
	.word	.L325,.L16
	.byte	8
	.byte	'i',0,1,221,2,24
	.word	.L228,.L326
	.byte	7
	.word	.L327,.L328
	.byte	8
	.byte	'k',0,1,236,2,28
	.word	.L228,.L329
	.byte	11
	.word	.L281,.L330,.L331
	.byte	12
	.word	.L282,.L283
	.byte	13
	.word	.L284,.L330,.L331
	.byte	0,0,0,0,11
	.word	.L252,.L16,.L10
	.byte	12
	.word	.L254,.L255
	.byte	13
	.word	.L256,.L16,.L10
	.byte	0,11
	.word	.L247,.L10,.L332
	.byte	12
	.word	.L249,.L250
	.byte	13
	.word	.L251,.L10,.L332
	.byte	0,11
	.word	.L213,.L6,.L333
	.byte	12
	.word	.L216,.L334
	.byte	15
	.word	.L218,.L335
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_read')
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,23,1,3,8,58,15,59,15,57,15,11,15
	.byte	0,0,4,13,0,3,8,73,16,11,15,56,9,0,0,5,46,1,3,8,58,15,59,15,57,15,73,16,54,15,39,12,63,12,17,1,18,1,64
	.byte	6,0,0,6,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16
	.byte	2,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,19,2,6,0,0,10,11,1,85,6,0,0,11,29,1,49,16,17,1,18,1,0,0,12,5,0
	.byte	49,16,2,6,0,0,13,11,0,49,16,17,1,18,1,0,0,14,11,1,49,16,17,1,18,1,0,0,15,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_read')
	.sect	'.debug_line'
.L145:
	.word	.L497-.L496
.L496:
	.half	3
	.word	.L499-.L498
.L498:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxI2c.h',0,2,0,0,0
.L499:
	.byte	5,19,7,0,5,2
	.word	.L102
	.byte	3,243,0,1,5,47,9
	.half	.L405-.L102
	.byte	3,3,1,5,36,9
	.half	.L500-.L405
	.byte	3,127,1,5,19,3,126,1,5,21,9
	.half	.L404-.L500
	.byte	3,14,1,5,47,3,119,1,5,52,9
	.half	.L406-.L404
	.byte	3,126,1,5,19,9
	.half	.L408-.L406
	.byte	3,11,1,5,27,9
	.half	.L237-.L408
	.byte	3,2,1,5,47,3,118,1,4,3,5,23,9
	.half	.L242-.L237
	.byte	3,161,3,1,4,1,5,5,9
	.half	.L243-.L242
	.byte	3,237,124,1,5,35,7,9
	.half	.L501-.L243
	.byte	3,2,1,5,9,3,3,1,4,3,5,211,1,9
	.half	.L5-.L501
	.byte	3,165,3,1,5,19,1,5,135,1,9
	.half	.L248-.L5
	.byte	3,122,1,5,21,9
	.half	.L502-.L248
	.byte	1,4,1,5,18,9
	.half	.L253-.L502
	.byte	3,232,124,1,5,5,9
	.half	.L503-.L253
	.byte	1,4,3,5,19,7,9
	.half	.L258-.L503
	.byte	3,237,4,1,5,24,9
	.half	.L407-.L258
	.byte	1,5,16,9
	.half	.L259-.L407
	.byte	3,19,1,5,24,9
	.half	.L8-.L259
	.byte	3,176,127,1,4,1,5,117,9
	.half	.L272-.L8
	.byte	3,214,123,1,4,3,5,24,7,9
	.half	.L278-.L272
	.byte	3,170,4,1,4,1,5,9,9
	.half	.L279-.L278
	.byte	3,218,123,1,5,39,7,9
	.half	.L504-.L279
	.byte	3,4,1,5,13,3,4,1,4,3,5,211,1,9
	.half	.L9-.L504
	.byte	3,140,3,1,5,19,1,5,16,9
	.half	.L280-.L9
	.byte	3,116,1,4,1,5,5,9
	.half	.L7-.L280
	.byte	3,136,125,1,5,46,7,9
	.half	.L505-.L7
	.byte	3,2,1,5,39,9
	.half	.L410-.L505
	.byte	1,5,53,9
	.half	.L506-.L410
	.byte	1,5,20,9
	.half	.L507-.L506
	.byte	1,5,53,9
	.half	.L508-.L507
	.byte	1,5,80,9
	.half	.L509-.L508
	.byte	1,5,70,9
	.half	.L411-.L509
	.byte	1,4,3,5,19,3,209,4,1,5,24,9
	.half	.L285-.L411
	.byte	1,4,1,5,88,3,175,123,1,5,25,9
	.half	.L11-.L285
	.byte	3,5,1,4,3,5,19,3,204,4,1,5,24,9
	.half	.L286-.L11
	.byte	1,5,20,9
	.half	.L287-.L286
	.byte	3,110,1,5,26,9
	.half	.L510-.L287
	.byte	1,5,16,9
	.half	.L289-.L510
	.byte	3,37,1,9
	.half	.L295-.L289
	.byte	3,146,126,1,4,1,5,24,9
	.half	.L14-.L295
	.byte	3,152,125,1,5,27,9
	.half	.L511-.L14
	.byte	1,5,12,9
	.half	.L512-.L511
	.byte	1,5,141,1,7,9
	.half	.L513-.L512
	.byte	1,5,22,9
	.half	.L514-.L513
	.byte	3,4,1,5,5,9
	.half	.L515-.L514
	.byte	1,4,3,5,21,7,9
	.half	.L296-.L515
	.byte	3,234,2,1,4,1,5,16,9
	.half	.L297-.L296
	.byte	3,153,125,1,5,50,3,127,1,5,25,9
	.half	.L15-.L297
	.byte	3,5,1,5,33,9
	.half	.L516-.L15
	.byte	1,5,10,9
	.half	.L517-.L516
	.byte	1,5,23,7,9
	.half	.L518-.L517
	.byte	3,2,1,9
	.half	.L519-.L518
	.byte	3,1,1,5,53,3,127,1,5,25,9
	.half	.L17-.L519
	.byte	3,4,1,5,33,9
	.half	.L520-.L17
	.byte	1,5,10,9
	.half	.L521-.L520
	.byte	1,5,23,7,9
	.half	.L522-.L521
	.byte	3,2,1,9
	.half	.L523-.L522
	.byte	3,1,1,5,55,3,127,1,5,10,9
	.half	.L19-.L523
	.byte	3,4,1,5,20,7,9
	.half	.L524-.L19
	.byte	3,3,1,5,9,9
	.half	.L525-.L524
	.byte	1,4,2,5,19,7,9
	.half	.L299-.L525
	.byte	3,148,4,1,5,17,9
	.half	.L413-.L299
	.byte	3,1,1,5,21,9
	.half	.L414-.L413
	.byte	1,5,14,9
	.half	.L306-.L414
	.byte	3,8,1,5,10,9
	.half	.L526-.L306
	.byte	3,1,1,4,1,5,20,9
	.half	.L303-.L526
	.byte	3,231,123,1,5,17,9
	.half	.L23-.L303
	.byte	3,2,1,5,40,9
	.half	.L26-.L23
	.byte	3,13,1,5,25,9
	.half	.L420-.L26
	.byte	1,7,9
	.half	.L527-.L420
	.byte	3,5,1,5,17,9
	.half	.L528-.L527
	.byte	1,5,45,7,9
	.half	.L529-.L528
	.byte	3,2,1,5,35,9
	.half	.L530-.L529
	.byte	1,5,28,9
	.half	.L312-.L530
	.byte	3,3,1,5,39,3,2,1,5,47,9
	.half	.L418-.L312
	.byte	3,126,1,5,42,9
	.half	.L531-.L418
	.byte	1,5,45,9
	.half	.L29-.L531
	.byte	1,5,56,3,2,1,5,37,9
	.half	.L532-.L29
	.byte	1,5,42,9
	.half	.L28-.L532
	.byte	3,126,1,4,3,5,16,7,9
	.half	.L314-.L28
	.byte	3,176,2,1,4,1,5,17,9
	.half	.L27-.L314
	.byte	3,217,125,1,4,3,5,21,7,9
	.half	.L315-.L27
	.byte	3,173,2,1,4,1,5,28,9
	.half	.L316-.L315
	.byte	3,214,125,1,5,21,3,1,1,5,17,9
	.half	.L30-.L316
	.byte	3,4,1,5,36,7,9
	.half	.L533-.L30
	.byte	3,3,1,5,21,9
	.half	.L534-.L533
	.byte	1,5,39,7,9
	.half	.L535-.L534
	.byte	3,2,1,9
	.half	.L536-.L535
	.byte	3,1,1,5,25,3,1,1,5,41,9
	.half	.L33-.L536
	.byte	3,4,1,5,26,9
	.half	.L537-.L33
	.byte	1,5,39,7,9
	.half	.L538-.L537
	.byte	3,2,1,9
	.half	.L539-.L538
	.byte	3,1,1,5,25,3,1,1,5,36,9
	.half	.L35-.L539
	.byte	3,4,1,5,133,1,9
	.half	.L540-.L35
	.byte	3,7,1,5,21,9
	.half	.L417-.L540
	.byte	3,121,1,5,32,9
	.half	.L541-.L417
	.byte	3,3,1,5,36,3,4,1,5,39,9
	.half	.L542-.L541
	.byte	1,5,21,9
	.half	.L543-.L542
	.byte	1,5,39,7,9
	.half	.L544-.L543
	.byte	3,3,1,5,45,9
	.half	.L32-.L544
	.byte	3,185,127,1,5,41,9
	.half	.L545-.L32
	.byte	1,4,2,5,5,7,9
	.half	.L31-.L545
	.byte	3,171,6,1,5,17,7,9
	.half	.L546-.L31
	.byte	3,2,1,4,1,5,121,9
	.half	.L39-.L546
	.byte	3,162,122,1,5,101,9
	.half	.L300-.L39
	.byte	3,3,1,5,121,9
	.half	.L22-.L300
	.byte	3,5,1,5,13,9
	.half	.L321-.L22
	.byte	3,9,1,4,3,5,21,7,9
	.half	.L323-.L321
	.byte	3,239,1,1,4,1,5,24,9
	.half	.L324-.L323
	.byte	3,148,126,1,5,58,3,127,1,5,18,9
	.half	.L43-.L324
	.byte	3,4,1,5,32,7,9
	.half	.L547-.L43
	.byte	3,2,1,5,17,9
	.half	.L423-.L547
	.byte	1,5,35,7,9
	.half	.L548-.L423
	.byte	3,2,1,9
	.half	.L549-.L548
	.byte	3,1,1,5,65,3,127,1,5,37,9
	.half	.L46-.L549
	.byte	3,4,1,5,22,9
	.half	.L550-.L46
	.byte	1,5,35,7,9
	.half	.L551-.L550
	.byte	3,3,1,3,127,1,5,32,9
	.half	.L47-.L551
	.byte	3,6,1,5,35,9
	.half	.L552-.L47
	.byte	1,5,17,9
	.half	.L553-.L552
	.byte	1,5,164,1,7,9
	.half	.L554-.L553
	.byte	3,3,1,5,35,1,5,17,9
	.half	.L44-.L554
	.byte	3,4,1,5,64,7,9
	.half	.L555-.L44
	.byte	1,5,100,7,9
	.half	.L556-.L555
	.byte	1,5,24,7,9
	.half	.L325-.L556
	.byte	3,5,1,5,21,9
	.half	.L53-.L325
	.byte	3,2,1,5,45,9
	.half	.L327-.L53
	.byte	3,12,1,5,35,9
	.half	.L557-.L327
	.byte	1,4,3,5,16,9
	.half	.L330-.L557
	.byte	3,185,1,1,4,1,5,28,9
	.half	.L331-.L330
	.byte	3,202,126,1,5,39,3,2,1,5,47,9
	.half	.L425-.L331
	.byte	3,126,1,5,49,9
	.half	.L558-.L425
	.byte	3,111,1,5,42,9
	.half	.L559-.L558
	.byte	3,17,1,5,45,9
	.half	.L57-.L559
	.byte	1,5,56,3,2,1,5,37,9
	.half	.L560-.L57
	.byte	1,5,42,9
	.half	.L56-.L560
	.byte	3,126,1,5,49,7,9
	.half	.L328-.L56
	.byte	3,111,1,5,45,9
	.half	.L561-.L328
	.byte	1,4,3,5,21,7,9
	.half	.L16-.L561
	.byte	3,205,1,1,5,211,1,9
	.half	.L10-.L16
	.byte	3,6,1,5,19,1,4,1,5,23,9
	.half	.L332-.L10
	.byte	3,202,126,1,4,3,5,44,9
	.half	.L6-.L332
	.byte	3,144,2,1,4,1,5,1,9
	.half	.L333-.L6
	.byte	3,244,125,1,7,9
	.half	.L147-.L333
	.byte	0,1,1
.L497:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_read')
	.sect	'.debug_ranges'
.L146:
	.word	-1,.L102,0,.L147-.L102,0,0
.L236:
	.word	-1,.L102,.L237-.L102,.L220-.L102,-1,.L111,0,.L157-.L111,0,0
.L298:
	.word	-1,.L102,.L299-.L102,.L300-.L102,-1,.L40,0,.L177-.L40,-1,.L109,0,.L162-.L109,0,0
.L310:
	.word	-1,.L102,.L26-.L102,.L32-.L102,-1,.L105,0,.L172-.L105,0,0
.L335:
	.word	-1,.L102,.L6-.L102,.L333-.L102,-1,.L107,0,.L167-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxI2c_I2c_write')
	.sect	'.debug_info'
.L148:
	.word	1335
	.half	3
	.word	.L149
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L151,.L150
	.byte	2
	.word	.L114
	.byte	3
	.byte	'data',0,1,138,3,11,4,4
	.byte	'packet',0
	.word	.L228
	.byte	4,2,35,0,4
	.byte	'packetbyte',0
	.word	.L234
	.byte	4,2,35,0,0,5
	.byte	'IfxI2c_I2c_write',0,1,131,3,19
	.word	.L219
	.byte	1,1,1
	.word	.L113,.L336,.L112
	.byte	6
	.byte	'i2cDevice',0,1,131,3,55
	.word	.L188,.L337
	.byte	6
	.byte	'data',0,1,131,3,82
	.word	.L222,.L338
	.byte	6
	.byte	'size',0,1,131,3,98
	.word	.L224,.L339
	.byte	7
	.word	.L113,.L336
	.byte	8
	.byte	'status',0,1,133,3,24
	.word	.L219,.L340
	.byte	8
	.byte	'i2c',0,1,134,3,24
	.word	.L185,.L341
	.byte	8
	.byte	'addr',0,1,135,3,24
	.word	.L230,.L342
	.byte	8
	.byte	'slAddr',0,1,136,3,24
	.word	.L230,.L343
	.byte	8
	.byte	'addressMode',0,1,137,3,24
	.word	.L232,.L344
	.byte	9
	.byte	'txdata',0,1,142,3,12
	.word	162,.L345
	.byte	8
	.byte	'bytesToSend',0,1,144,3,12
	.word	.L238,.L346
	.byte	8
	.byte	'bytes',0,1,145,3,12
	.word	.L228,.L347
	.byte	10
	.word	.L241,.L348,.L349
	.byte	11
	.word	.L244,.L350
	.byte	12
	.word	.L246,.L348,.L349
	.byte	0,10
	.word	.L247,.L59,.L351
	.byte	11
	.word	.L249,.L352
	.byte	12
	.word	.L251,.L59,.L351
	.byte	0,10
	.word	.L252,.L351,.L353
	.byte	11
	.word	.L254,.L354
	.byte	12
	.word	.L256,.L351,.L353
	.byte	0,10
	.word	.L257,.L355,.L356
	.byte	11
	.word	.L260,.L357
	.byte	11
	.word	.L262,.L358
	.byte	13
	.word	.L264,.L359
	.byte	0,10
	.word	.L265,.L356,.L360
	.byte	11
	.word	.L266,.L362
	.byte	11
	.word	.L268,.L363
	.byte	13
	.word	.L270,.L364
	.byte	0,10
	.word	.L257,.L360,.L361
	.byte	11
	.word	.L260,.L357
	.byte	11
	.word	.L262,.L358
	.byte	0,10
	.word	.L265,.L361,.L62
	.byte	11
	.word	.L266,.L362
	.byte	11
	.word	.L268,.L363
	.byte	0,10
	.word	.L271,.L62,.L365
	.byte	11
	.word	.L273,.L366
	.byte	11
	.word	.L275,.L367
	.byte	12
	.word	.L277,.L62,.L365
	.byte	0,10
	.word	.L271,.L368,.L369
	.byte	11
	.word	.L273,.L366
	.byte	11
	.word	.L275,.L367
	.byte	12
	.word	.L277,.L368,.L369
	.byte	0,10
	.word	.L247,.L370,.L371
	.byte	11
	.word	.L249,.L352
	.byte	12
	.word	.L251,.L370,.L371
	.byte	0,10
	.word	.L247,.L63,.L372
	.byte	11
	.word	.L249,.L352
	.byte	12
	.word	.L251,.L63,.L372
	.byte	0,10
	.word	.L281,.L372,.L61
	.byte	11
	.word	.L282,.L373
	.byte	12
	.word	.L284,.L372,.L61
	.byte	0,7
	.word	.L374,.L67
	.byte	8
	.byte	'i',0,1,201,3,17
	.word	.L228,.L375
	.byte	8
	.byte	'j',0,1,201,3,20
	.word	.L228,.L376
	.byte	10
	.word	.L302,.L374,.L377
	.byte	14
	.word	.L304,.L374,.L377
	.byte	10
	.word	.L305,.L374,.L378
	.byte	14
	.word	.L307,.L374,.L378
	.byte	8
	.byte	'reg',0,2,235,5,17
	.word	.L308,.L379
	.byte	0,0,0,0,10
	.word	.L257,.L377,.L380
	.byte	11
	.word	.L260,.L357
	.byte	11
	.word	.L262,.L358
	.byte	12
	.word	.L264,.L377,.L380
	.byte	0,7
	.word	.L81,.L83
	.byte	8
	.byte	'ris',0,1,132,4,24
	.word	.L228,.L381
	.byte	0,10
	.word	.L265,.L382,.L383
	.byte	11
	.word	.L266,.L362
	.byte	11
	.word	.L268,.L363
	.byte	12
	.word	.L270,.L382,.L383
	.byte	0,10
	.word	.L281,.L384,.L385
	.byte	11
	.word	.L282,.L373
	.byte	12
	.word	.L284,.L384,.L385
	.byte	0,10
	.word	.L317,.L85,.L86
	.byte	11
	.word	.L318,.L386
	.byte	12
	.word	.L320,.L85,.L86
	.byte	0,7
	.word	.L387,.L67
	.byte	8
	.byte	'ris',0,1,166,4,16
	.word	.L228,.L388
	.byte	10
	.word	.L252,.L389,.L64
	.byte	11
	.word	.L254,.L354
	.byte	12
	.word	.L256,.L389,.L64
	.byte	0,0,0,10
	.word	.L213,.L60,.L390
	.byte	11
	.word	.L216,.L391
	.byte	12
	.word	.L218,.L60,.L390
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxI2c_I2c_write')
	.sect	'.debug_abbrev'
.L149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,23,1,3,8,58,15,59,15,57,15,11,15
	.byte	0,0,4,13,0,3,8,73,16,11,15,56,9,0,0,5,46,1,3,8,58,15,59,15,57,15,73,16,54,15,39,12,63,12,17,1,18,1,64
	.byte	6,0,0,6,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16
	.byte	2,6,0,0,9,52,0,3,8,58,15,59,15,57,15,73,19,2,6,0,0,10,29,1,49,16,17,1,18,1,0,0,11,5,0,49,16,2,6,0,0,12
	.byte	11,0,49,16,17,1,18,1,0,0,13,11,0,49,16,85,6,0,0,14,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxI2c_I2c_write')
	.sect	'.debug_line'
.L150:
	.word	.L563-.L562
.L562:
	.half	3
	.word	.L565-.L564
.L564:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxI2c.h',0,2,0,0,0
.L565:
	.byte	5,19,7,0,5,2
	.word	.L113
	.byte	3,130,3,1,5,47,9
	.half	.L430-.L113
	.byte	3,3,1,5,31,9
	.half	.L566-.L430
	.byte	3,10,1,5,19,3,115,1,5,24,9
	.half	.L429-.L566
	.byte	3,13,1,5,47,3,119,1,5,52,9
	.half	.L431-.L429
	.byte	3,127,1,5,36,9
	.half	.L432-.L431
	.byte	3,127,1,5,47,3,4,1,4,3,5,23,9
	.half	.L348-.L432
	.byte	3,146,1,1,4,1,5,5,9
	.half	.L349-.L348
	.byte	3,248,126,1,5,35,7,9
	.half	.L567-.L349
	.byte	3,2,1,5,9,3,3,1,4,3,5,211,1,9
	.half	.L59-.L567
	.byte	3,154,1,1,5,19,1,5,135,1,9
	.half	.L351-.L59
	.byte	3,122,1,5,21,9
	.half	.L568-.L351
	.byte	1,4,1,5,18,9
	.half	.L353-.L568
	.byte	3,245,126,1,5,5,9
	.half	.L569-.L353
	.byte	1,4,3,5,19,7,9
	.half	.L355-.L569
	.byte	3,224,2,1,5,18,9
	.half	.L356-.L355
	.byte	3,19,1,5,24,9
	.half	.L360-.L356
	.byte	3,109,1,5,16,9
	.half	.L361-.L360
	.byte	3,19,1,5,24,9
	.half	.L62-.L361
	.byte	3,176,127,1,4,1,5,117,9
	.half	.L365-.L62
	.byte	3,227,125,1,4,3,5,24,7,9
	.half	.L368-.L365
	.byte	3,157,2,1,4,1,5,9,9
	.half	.L369-.L368
	.byte	3,231,125,1,4,3,5,19,7,9
	.half	.L370-.L369
	.byte	3,135,1,1,4,1,5,13,9
	.half	.L371-.L370
	.byte	3,129,127,1,4,3,5,19,9
	.half	.L63-.L371
	.byte	3,255,0,1,5,16,9
	.half	.L372-.L63
	.byte	3,116,1,4,1,5,5,9
	.half	.L61-.L372
	.byte	3,149,127,1,5,52,7,9
	.half	.L570-.L61
	.byte	3,2,1,5,45,9
	.half	.L571-.L570
	.byte	1,5,59,9
	.half	.L572-.L571
	.byte	1,5,28,9
	.half	.L573-.L572
	.byte	1,5,59,9
	.half	.L574-.L573
	.byte	1,5,87,9
	.half	.L575-.L574
	.byte	1,5,79,9
	.half	.L436-.L575
	.byte	1,5,95,1,5,32,9
	.half	.L65-.L436
	.byte	3,6,1,5,5,9
	.half	.L66-.L65
	.byte	3,3,1,4,2,5,19,7,9
	.half	.L374-.L66
	.byte	3,166,2,1,5,17,9
	.half	.L437-.L374
	.byte	3,1,1,5,21,9
	.half	.L438-.L437
	.byte	1,5,14,9
	.half	.L378-.L438
	.byte	3,8,1,5,10,9
	.half	.L576-.L378
	.byte	3,1,1,4,3,5,19,9
	.half	.L377-.L576
	.byte	3,11,1,5,24,9
	.half	.L434-.L377
	.byte	1,4,1,5,18,9
	.half	.L380-.L434
	.byte	3,206,125,1,5,16,9
	.half	.L435-.L380
	.byte	1,5,13,9
	.half	.L68-.L435
	.byte	3,2,1,5,30,7,9
	.half	.L577-.L68
	.byte	3,2,1,5,29,9
	.half	.L439-.L577
	.byte	3,1,1,5,33,3,127,1,5,29,9
	.half	.L69-.L439
	.byte	3,5,1,9
	.half	.L442-.L69
	.byte	3,1,1,5,27,9
	.half	.L70-.L442
	.byte	3,3,1,5,20,9
	.half	.L578-.L70
	.byte	3,2,1,5,25,3,25,1,5,34,9
	.half	.L443-.L578
	.byte	3,103,1,5,17,7,9
	.half	.L72-.L443
	.byte	3,2,1,5,25,7,9
	.half	.L579-.L72
	.byte	3,2,1,5,40,7,9
	.half	.L580-.L579
	.byte	1,5,25,7,9
	.half	.L581-.L580
	.byte	3,2,1,5,70,7,9
	.half	.L582-.L581
	.byte	3,2,1,5,68,9
	.half	.L583-.L582
	.byte	1,5,78,9
	.half	.L584-.L583
	.byte	1,5,50,1,5,83,9
	.half	.L585-.L584
	.byte	1,5,25,9
	.half	.L73-.L585
	.byte	3,15,1,5,40,7,9
	.half	.L586-.L73
	.byte	1,5,46,7,9
	.half	.L76-.L586
	.byte	3,2,1,5,61,9
	.half	.L587-.L76
	.byte	1,5,62,9
	.half	.L74-.L587
	.byte	3,5,1,5,59,9
	.half	.L588-.L74
	.byte	1,5,46,9
	.half	.L589-.L588
	.byte	1,5,37,9
	.half	.L77-.L589
	.byte	3,98,1,5,34,9
	.half	.L590-.L77
	.byte	1,5,31,7,9
	.half	.L81-.L590
	.byte	3,39,1,5,17,9
	.half	.L440-.L81
	.byte	3,2,1,5,28,7,9
	.half	.L591-.L440
	.byte	3,3,1,4,3,5,19,3,40,1,4,1,5,17,9
	.half	.L82-.L591
	.byte	3,91,1,5,28,7,9
	.half	.L592-.L82
	.byte	3,3,1,4,3,5,21,3,28,1,4,1,5,36,9
	.half	.L83-.L592
	.byte	3,102,1,5,44,9
	.half	.L593-.L83
	.byte	1,5,22,9
	.half	.L594-.L593
	.byte	1,5,56,7,9
	.half	.L595-.L594
	.byte	1,5,13,7,9
	.half	.L84-.L595
	.byte	3,2,1,5,41,7,9
	.half	.L382-.L84
	.byte	3,5,1,4,3,5,16,9
	.half	.L596-.L382
	.byte	3,251,1,1,4,1,5,47,9
	.half	.L383-.L596
	.byte	3,187,125,1,4,3,5,16,3,197,2,1,9
	.half	.L384-.L383
	.byte	3,146,126,1,4,1,5,43,9
	.half	.L385-.L384
	.byte	3,169,127,1,4,2,5,5,7,9
	.half	.L85-.L385
	.byte	3,185,4,1,5,17,7,9
	.half	.L597-.L85
	.byte	3,2,1,4,1,5,117,9
	.half	.L86-.L597
	.byte	3,150,124,1,5,9,9
	.half	.L387-.L86
	.byte	3,9,1,5,20,7,9
	.half	.L598-.L387
	.byte	3,3,1,4,3,5,19,3,6,1,4,1,5,9,9
	.half	.L88-.L598
	.byte	3,125,1,4,3,5,21,7,9
	.half	.L389-.L88
	.byte	3,125,1,4,1,5,20,9
	.half	.L64-.L389
	.byte	3,6,1,5,23,9
	.half	.L67-.L64
	.byte	3,4,1,4,3,5,44,9
	.half	.L60-.L67
	.byte	3,214,0,1,4,1,5,1,9
	.half	.L390-.L60
	.byte	3,174,127,1,7,9
	.half	.L152-.L390
	.byte	0,1,1
.L563:
	.sdecl	'.debug_ranges',debug,cluster('IfxI2c_I2c_write')
	.sect	'.debug_ranges'
.L151:
	.word	-1,.L113,0,.L152-.L113,0,0
.L359:
	.word	-1,.L113,.L355-.L113,.L356-.L113,.L360-.L113,.L361-.L113,0,0
.L364:
	.word	-1,.L113,.L356-.L113,.L360-.L113,.L361-.L113,.L62-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L153:
	.word	187
	.half	3
	.word	.L154
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L156,.L155
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_3',0,1,116,19,1
	.word	.L111,.L157,.L110
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L155:
	.word	.L600-.L599
.L599:
	.half	3
	.word	.L602-.L601
.L601:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0,0
.L602:
	.byte	5,121,7,0,5,2
	.word	.L111
	.byte	3,179,2,1,5,27,9
	.half	.L421-.L111
	.byte	3,7,1,9
	.half	.L157-.L421
	.byte	0,1,1,5,121,0,5,2
	.word	.L111
	.byte	3,179,2,1,5,23,9
	.half	.L421-.L111
	.byte	3,243,1,1,5,27,9
	.half	.L422-.L421
	.byte	3,148,126,1,7,9
	.half	.L157-.L422
	.byte	0,1,1
.L600:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L156:
	.word	-1,.L111,0,.L157-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L158:
	.word	187
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L161,.L160
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_4',0,1,116,19,1
	.word	.L109,.L162,.L108
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L160:
	.word	.L604-.L603
.L603:
	.half	3
	.word	.L606-.L605
.L605:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0,0
.L606:
	.byte	5,17,7,0,5,2
	.word	.L109
	.byte	3,222,1,1,5,37,7,9
	.half	.L607-.L109
	.byte	3,2,1,5,36,9
	.half	.L415-.L607
	.byte	3,1,1,5,40,3,127,1,5,36,9
	.half	.L24-.L415
	.byte	3,5,1,9
	.half	.L416-.L24
	.byte	3,1,1,5,17,9
	.half	.L25-.L416
	.byte	3,125,1,7,9
	.half	.L162-.L25
	.byte	0,1,1,5,21,0,5,2
	.word	.L109
	.byte	3,224,2,1,5,41,7,9
	.half	.L607-.L109
	.byte	3,2,1,5,40,9
	.half	.L415-.L607
	.byte	3,1,1,5,44,3,127,1,5,40,9
	.half	.L24-.L415
	.byte	3,5,1,9
	.half	.L416-.L24
	.byte	3,1,1,5,17,9
	.half	.L25-.L416
	.byte	3,251,126,1,7,9
	.half	.L162-.L25
	.byte	0,1,1
.L604:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L161:
	.word	-1,.L109,0,.L162-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L163:
	.word	187
	.half	3
	.word	.L164
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L166,.L165
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_5',0,1,116,19,1
	.word	.L107,.L167,.L106
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L164:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L165:
	.word	.L609-.L608
.L608:
	.half	3
	.word	.L611-.L610
.L610:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'IfxI2c.h',0,1,0,0,0
.L611:
	.byte	5,14,7,0,5,2
	.word	.L107
	.byte	3,252,2,1,4,2,5,44,9
	.half	.L612-.L107
	.byte	3,143,2,1,4,1,5,5,9
	.half	.L613-.L612
	.byte	3,243,125,1,4,2,5,44,9
	.half	.L428-.L613
	.byte	3,141,2,1,4,1,5,31,3,241,125,1,5,14,9
	.half	.L614-.L428
	.byte	3,1,1,5,31,9
	.half	.L427-.L614
	.byte	1,5,5,9
	.half	.L615-.L427
	.byte	3,1,1,7,9
	.half	.L167-.L615
	.byte	0,1,1,5,14,0,5,2
	.word	.L107
	.byte	3,182,4,1,4,2,5,44,9
	.half	.L612-.L107
	.byte	3,213,0,1,4,1,5,5,9
	.half	.L613-.L612
	.byte	3,173,127,1,4,2,5,44,9
	.half	.L428-.L613
	.byte	3,211,0,1,4,1,5,31,3,171,127,1,5,14,9
	.half	.L614-.L428
	.byte	3,1,1,5,31,9
	.half	.L427-.L614
	.byte	1,5,5,9
	.half	.L615-.L427
	.byte	3,199,126,1,7,9
	.half	.L167-.L615
	.byte	0,1,1
.L609:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L166:
	.word	-1,.L107,0,.L167-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L168:
	.word	187
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L171,.L170
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_6',0,1,116,19,1
	.word	.L105,.L172,.L104
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L170:
	.word	.L617-.L616
.L616:
	.half	3
	.word	.L619-.L618
.L618:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'IfxI2c.h',0,1,0,0,0
.L619:
	.byte	5,45,7,0,5,2
	.word	.L105
	.byte	3,242,1,1,9
	.half	.L172-.L105
	.byte	0,1,1,4,2,5,16,0,5,2
	.word	.L105
	.byte	3,147,6,1,4,1,5,45,9
	.half	.L620-.L105
	.byte	3,223,123,1,7,9
	.half	.L172-.L620
	.byte	0,1,1,4,2,5,16,0,5,2
	.word	.L105
	.byte	3,147,6,1,4,1,5,45,9
	.half	.L620-.L105
	.byte	3,223,123,1,7,9
	.half	.L172-.L620
	.byte	0,1,1,5,45,0,5,2
	.word	.L105
	.byte	3,236,2,1,9
	.half	.L620-.L105
	.byte	3,134,127,1,7,9
	.half	.L172-.L620
	.byte	0,1,1,4,2,5,16,0,5,2
	.word	.L105
	.byte	3,147,6,1,4,1,5,45,9
	.half	.L620-.L105
	.byte	3,223,123,1,7,9
	.half	.L172-.L620
	.byte	0,1,1,4,2,5,16,0,5,2
	.word	.L105
	.byte	3,147,6,1,4,1,5,45,9
	.half	.L620-.L105
	.byte	3,223,123,1,7,9
	.half	.L172-.L620
	.byte	0,1,1
.L617:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L171:
	.word	-1,.L105,0,.L172-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L173:
	.word	187
	.half	3
	.word	.L174
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\Debug\\',0,12,1
	.word	.L176,.L175
	.byte	2
	.word	.L114
	.byte	3
	.byte	'.cocofun_7',0,1,116,19,1
	.word	.L40,.L177,.L103
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L174:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L175:
	.word	.L622-.L621
.L621:
	.half	3
	.word	.L624-.L623
.L623:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_MPU\\0_Src\\4_McHal\\Tricore\\I2c\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\I2c\\I2c\\IfxI2c_I2c.c',0,0,0,0
	.byte	'IfxI2c.h',0,1,0,0,0
.L624:
	.byte	4,2,5,24,7,0,5,2
	.word	.L40
	.byte	3,195,5,1,4,1,5,121,9
	.half	.L625-.L40
	.byte	3,232,124,1,4,2,5,24,7,9
	.half	.L626-.L625
	.byte	3,152,2,1,5,19,1,9
	.half	.L177-.L626
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L40
	.byte	3,195,5,1,4,1,5,121,9
	.half	.L625-.L40
	.byte	3,240,124,1,4,2,5,24,7,9
	.half	.L626-.L625
	.byte	3,144,2,1,5,19,1,9
	.half	.L177-.L626
	.byte	0,1,1,4,2,5,24,0,5,2
	.word	.L40
	.byte	3,195,5,1,4,1,5,117,9
	.half	.L625-.L40
	.byte	3,220,126,1,4,2,5,24,7,9
	.half	.L626-.L625
	.byte	3,36,1,5,19,1,9
	.half	.L177-.L626
	.byte	0,1,1
.L622:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L176:
	.word	-1,.L40,0,.L177-.L40,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L157-.L111
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L162-.L109
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L167-.L107
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L172-.L105
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L40,0,.L177-.L40
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L92,0,.L179-.L92
	.half	2
	.byte	138,0
	.word	0,0
.L181:
	.word	-1,.L92,0,.L392-.L92
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_initConfig')
	.sect	'.debug_loc'
.L93:
	.word	-1,.L94,0,.L182-.L94
	.half	2
	.byte	138,0
	.word	0,0
.L184:
	.word	-1,.L94,0,.L182-.L94
	.half	1
	.byte	100
	.word	0,0
.L186:
	.word	-1,.L94,0,.L182-.L94
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_initDevice')
	.sect	'.debug_loc'
.L95:
	.word	-1,.L96,0,.L187-.L96
	.half	2
	.byte	138,0
	.word	0,0
.L189:
	.word	-1,.L96,0,.L187-.L96
	.half	1
	.byte	100
	.word	0,0
.L191:
	.word	-1,.L96,0,.L187-.L96
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.debug_loc'
.L97:
	.word	-1,.L98,0,.L192-.L98
	.half	2
	.byte	138,0
	.word	0,0
.L195:
	.word	-1,.L98,0,.L192-.L98
	.half	1
	.byte	101
	.word	0,0
.L194:
	.word	-1,.L98,0,.L192-.L98
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_initModule')
	.sect	'.debug_loc'
.L99:
	.word	-1,.L100,0,.L196-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L199:
	.word	-1,.L100,0,.L202-.L100
	.half	1
	.byte	101
	.word	.L394-.L100,.L196-.L100
	.half	1
	.byte	109
	.word	0,0
.L197:
	.word	-1,.L100,0,.L393-.L100
	.half	1
	.byte	100
	.word	.L396-.L100,.L196-.L100
	.half	1
	.byte	108
	.word	0,0
.L217:
	.word	0,0
.L210:
	.word	0,0
.L205:
	.word	0,0
.L200:
	.word	-1,.L100,.L395-.L100,.L196-.L100
	.half	1
	.byte	110
	.word	.L393-.L100,.L202-.L100
	.half	1
	.byte	100
	.word	.L397-.L100,.L398-.L100
	.half	1
	.byte	100
	.word	.L399-.L100,.L400-.L100
	.half	1
	.byte	100
	.word	.L401-.L100,.L212-.L100
	.half	1
	.byte	100
	.word	.L402-.L100,.L403-.L100
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_read')
	.sect	'.debug_loc'
.L101:
	.word	-1,.L102,0,.L404-.L102
	.half	2
	.byte	138,0
	.word	.L404-.L102,.L220-.L102
	.half	2
	.byte	138,8
	.word	.L220-.L102,.L220-.L102
	.half	2
	.byte	138,0
	.word	0,0
.L233:
	.word	-1,.L102,.L242-.L102,.L259-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L105-.L102,.L172-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L409-.L102,.L410-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L11-.L102,.L286-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L240:
	.word	-1,.L102,.L415-.L102,.L24-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L416-.L102,.L162-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L105-.L102,.L172-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L26-.L102,.L417-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L424-.L102,.L16-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L239:
	.word	-1,.L102,.L242-.L102,.L259-.L102
	.half	1
	.byte	83
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	83
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	83
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	83
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	83
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	83
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	83
	.word	.L412-.L102,.L327-.L102
	.half	1
	.byte	83
	.word	.L424-.L102,.L333-.L102
	.half	1
	.byte	83
	.word	0,0
.L223:
	.word	-1,.L102,0,.L259-.L102
	.half	1
	.byte	101
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	101
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	101
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	101
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	101
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	101
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	101
	.word	.L412-.L102,.L327-.L102
	.half	1
	.byte	101
	.word	.L424-.L102,.L333-.L102
	.half	1
	.byte	101
	.word	0,0
.L319:
	.word	0,0
.L301:
	.word	-1,.L102,.L109-.L102,.L162-.L102
	.half	1
	.byte	91
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	91
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	91
	.word	.L23-.L102,.L321-.L102
	.half	1
	.byte	91
	.word	0,0
.L326:
	.word	-1,.L102,.L53-.L102,.L327-.L102
	.half	1
	.byte	95
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	95
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	95
	.word	.L424-.L102,.L16-.L102
	.half	1
	.byte	95
	.word	0,0
.L227:
	.word	-1,.L102,.L408-.L102,.L259-.L102
	.half	1
	.byte	108
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	108
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	108
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	108
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	108
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	108
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	108
	.word	.L412-.L102,.L327-.L102
	.half	1
	.byte	108
	.word	.L426-.L102,.L333-.L102
	.half	1
	.byte	100
	.word	.L107-.L102,.L167-.L102
	.half	1
	.byte	108
	.word	.L424-.L102,.L220-.L102
	.half	1
	.byte	108
	.word	0,0
.L245:
	.word	0,0
.L283:
	.word	0,0
.L255:
	.word	0,0
.L250:
	.word	0,0
.L334:
	.word	0,0
.L274:
	.word	0,0
.L291:
	.word	0,0
.L261:
	.word	0,0
.L267:
	.word	0,0
.L221:
	.word	-1,.L102,0,.L259-.L102
	.half	1
	.byte	100
	.word	.L405-.L102,.L259-.L102
	.half	1
	.byte	111
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	111
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	100
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	111
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	100
	.word	.L412-.L102,.L26-.L102
	.half	1
	.byte	100
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	111
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	111
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	111
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	100
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	111
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	100
	.word	.L412-.L102,.L327-.L102
	.half	1
	.byte	111
	.word	.L22-.L102,.L327-.L102
	.half	1
	.byte	100
	.word	.L424-.L102,.L333-.L102
	.half	1
	.byte	111
	.word	.L107-.L102,.L427-.L102
	.half	1
	.byte	111
	.word	0,0
.L313:
	.word	-1,.L102,.L418-.L102,.L27-.L102
	.half	1
	.byte	82
	.word	0,0
.L329:
	.word	-1,.L102,.L425-.L102,.L16-.L102
	.half	1
	.byte	81
	.word	0,0
.L229:
	.word	-1,.L102,.L411-.L102,.L11-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L286-.L102,.L289-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L105-.L102,.L172-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L412-.L102,.L413-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L40-.L102,.L177-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L421-.L102,.L157-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	.L22-.L102,.L327-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L269:
	.word	0,0
.L309:
	.word	-1,.L102,.L413-.L102,.L414-.L102
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L311:
	.word	-1,.L102,.L105-.L102,.L172-.L102
	.half	1
	.byte	81
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	81
	.word	.L420-.L102,.L321-.L102
	.half	1
	.byte	81
	.word	0,0
.L322:
	.word	-1,.L102,.L422-.L102,.L157-.L102
	.half	1
	.byte	95
	.word	.L321-.L102,.L423-.L102
	.half	1
	.byte	95
	.word	0,0
.L235:
	.word	-1,.L102,0,.L259-.L102
	.half	2
	.byte	145,120
	.word	.L105-.L102,.L172-.L102
	.half	2
	.byte	145,120
	.word	.L409-.L102,.L289-.L102
	.half	2
	.byte	145,120
	.word	.L109-.L102,.L162-.L102
	.half	2
	.byte	145,120
	.word	.L40-.L102,.L419-.L102
	.half	2
	.byte	145,120
	.word	.L40-.L102,.L177-.L102
	.half	2
	.byte	145,120
	.word	.L421-.L102,.L157-.L102
	.half	2
	.byte	145,120
	.word	.L412-.L102,.L327-.L102
	.half	2
	.byte	145,120
	.word	.L107-.L102,.L167-.L102
	.half	2
	.byte	145,120
	.word	.L424-.L102,.L220-.L102
	.half	2
	.byte	145,120
	.word	0,0
.L225:
	.word	-1,.L102,0,.L259-.L102
	.half	1
	.byte	84
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	84
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	84
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	84
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	84
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	84
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	84
	.word	.L412-.L102,.L327-.L102
	.half	1
	.byte	84
	.word	.L424-.L102,.L333-.L102
	.half	1
	.byte	84
	.word	0,0
.L293:
	.word	0,0
.L263:
	.word	0,0
.L231:
	.word	-1,.L102,.L406-.L102,.L259-.L102
	.half	1
	.byte	82
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	82
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	82
	.word	.L412-.L102,.L26-.L102
	.half	1
	.byte	82
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	82
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	82
	.word	.L22-.L102,.L327-.L102
	.half	1
	.byte	82
	.word	0,0
.L276:
	.word	0,0
.L226:
	.word	-1,.L102,.L404-.L102,.L259-.L102
	.half	1
	.byte	88
	.word	.L406-.L102,.L407-.L102
	.half	1
	.byte	81
	.word	.L105-.L102,.L172-.L102
	.half	1
	.byte	88
	.word	.L409-.L102,.L289-.L102
	.half	1
	.byte	88
	.word	.L109-.L102,.L162-.L102
	.half	1
	.byte	88
	.word	.L40-.L102,.L419-.L102
	.half	1
	.byte	88
	.word	.L40-.L102,.L177-.L102
	.half	1
	.byte	88
	.word	.L421-.L102,.L157-.L102
	.half	1
	.byte	88
	.word	.L412-.L102,.L327-.L102
	.half	1
	.byte	88
	.word	.L107-.L102,.L167-.L102
	.half	1
	.byte	88
	.word	.L428-.L102,.L167-.L102
	.half	1
	.byte	82
	.word	.L333-.L102,.L220-.L102
	.half	1
	.byte	82
	.word	.L424-.L102,.L220-.L102
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxI2c_I2c_write')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L429-.L113
	.half	2
	.byte	138,0
	.word	.L429-.L113,.L336-.L113
	.half	2
	.byte	138,8
	.word	.L336-.L113,.L336-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	-1,.L113,.L431-.L113,.L361-.L113
	.half	1
	.byte	81
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	81
	.word	.L433-.L113,.L434-.L113
	.half	1
	.byte	81
	.word	0,0
.L344:
	.word	-1,.L113,.L348-.L113,.L361-.L113
	.half	1
	.byte	82
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	82
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	82
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	82
	.word	.L433-.L113,.L390-.L113
	.half	1
	.byte	82
	.word	0,0
.L347:
	.word	-1,.L113,.L439-.L113,.L69-.L113
	.half	1
	.byte	91
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	91
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	91
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	91
	.word	.L442-.L113,.L64-.L113
	.half	1
	.byte	91
	.word	0,0
.L346:
	.word	-1,.L113,.L431-.L113,.L361-.L113
	.half	1
	.byte	85
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	85
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	85
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	85
	.word	.L433-.L113,.L390-.L113
	.half	1
	.byte	85
	.word	0,0
.L338:
	.word	-1,.L113,0,.L361-.L113
	.half	1
	.byte	101
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	101
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	101
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	101
	.word	.L433-.L113,.L390-.L113
	.half	1
	.byte	101
	.word	0,0
.L386:
	.word	0,0
.L375:
	.word	-1,.L113,.L105-.L113,.L172-.L113
	.half	1
	.byte	90
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	90
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	90
	.word	.L68-.L113,.L64-.L113
	.half	1
	.byte	90
	.word	0,0
.L341:
	.word	-1,.L113,.L432-.L113,.L361-.L113
	.half	1
	.byte	108
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	108
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	108
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	108
	.word	.L444-.L113,.L390-.L113
	.half	1
	.byte	100
	.word	.L107-.L113,.L167-.L113
	.half	1
	.byte	108
	.word	.L433-.L113,.L336-.L113
	.half	1
	.byte	108
	.word	0,0
.L350:
	.word	0,0
.L373:
	.word	0,0
.L354:
	.word	0,0
.L352:
	.word	0,0
.L391:
	.word	0,0
.L366:
	.word	0,0
.L357:
	.word	0,0
.L362:
	.word	0,0
.L337:
	.word	-1,.L113,0,.L361-.L113
	.half	1
	.byte	100
	.word	.L430-.L113,.L361-.L113
	.half	1
	.byte	111
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	111
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	100
	.word	.L433-.L113,.L68-.L113
	.half	1
	.byte	100
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	111
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	111
	.word	.L433-.L113,.L390-.L113
	.half	1
	.byte	111
	.word	.L107-.L113,.L427-.L113
	.half	1
	.byte	111
	.word	0,0
.L376:
	.word	-1,.L113,.L105-.L113,.L172-.L113
	.half	1
	.byte	92
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	92
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	92
	.word	.L443-.L113,.L64-.L113
	.half	1
	.byte	92
	.word	0,0
.L363:
	.word	0,0
.L379:
	.word	-1,.L113,.L437-.L113,.L438-.L113
	.half	1
	.byte	95
	.word	0,0
.L381:
	.word	-1,.L113,.L440-.L113,.L441-.L113
	.half	1
	.byte	95
	.word	0,0
.L388:
	.word	-1,.L113,.L422-.L113,.L157-.L113
	.half	1
	.byte	95
	.word	.L387-.L113,.L64-.L113
	.half	1
	.byte	95
	.word	0,0
.L339:
	.word	-1,.L113,0,.L361-.L113
	.half	1
	.byte	84
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	84
	.word	.L433-.L113,.L435-.L113
	.half	1
	.byte	84
	.word	0,0
.L358:
	.word	0,0
.L343:
	.word	-1,.L113,.L436-.L113,.L65-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	.L105-.L113,.L172-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	.L40-.L113,.L177-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	.L421-.L113,.L157-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	.L66-.L113,.L64-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L367:
	.word	0,0
.L340:
	.word	-1,.L113,.L348-.L113,.L361-.L113
	.half	1
	.byte	88
	.word	.L105-.L113,.L172-.L113
	.half	1
	.byte	88
	.word	.L40-.L113,.L177-.L113
	.half	1
	.byte	88
	.word	.L421-.L113,.L157-.L113
	.half	1
	.byte	88
	.word	.L107-.L113,.L167-.L113
	.half	1
	.byte	88
	.word	.L428-.L113,.L167-.L113
	.half	1
	.byte	82
	.word	.L390-.L113,.L336-.L113
	.half	1
	.byte	82
	.word	.L433-.L113,.L336-.L113
	.half	1
	.byte	88
	.word	0,0
.L345:
	.word	-1,.L113,0,.L361-.L113
	.half	2
	.byte	145,120
	.word	.L105-.L113,.L172-.L113
	.half	2
	.byte	145,120
	.word	.L40-.L113,.L177-.L113
	.half	2
	.byte	145,120
	.word	.L421-.L113,.L157-.L113
	.half	2
	.byte	145,120
	.word	.L107-.L113,.L167-.L113
	.half	2
	.byte	145,120
	.word	.L433-.L113,.L336-.L113
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L627:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_getBaudrate')
	.sect	'.debug_frame'
	.word	12
	.word	.L627,.L92,.L179-.L92
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_initConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L627,.L94,.L182-.L94
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_initDevice')
	.sect	'.debug_frame'
	.word	20
	.word	.L627,.L96,.L187-.L96
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_initDeviceConfig')
	.sect	'.debug_frame'
	.word	20
	.word	.L627,.L98,.L192-.L98
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_initModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L627,.L100,.L196-.L100
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_read')
	.sect	'.debug_frame'
	.word	36
	.word	.L627,.L102,.L220-.L102
	.byte	4
	.word	(.L404-.L102)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L220-.L404)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxI2c_I2c_write')
	.sect	'.debug_frame'
	.word	36
	.word	.L627,.L113,.L336-.L113
	.byte	4
	.word	(.L429-.L113)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L336-.L429)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L628:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L628,.L40,.L177-.L40
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L628,.L105,.L172-.L105
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L628,.L107,.L167-.L107
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L628,.L109,.L162-.L109
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L628,.L111,.L157-.L111
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
